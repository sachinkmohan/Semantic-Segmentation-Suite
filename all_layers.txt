name: "Placeholder"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: -1
      }
      dim {
        size: -1
      }
      dim {
        size: 3
      }
    }
  }
}

name: "Placeholder_1"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: -1
      }
      dim {
        size: -1
      }
      dim {
        size: -1
      }
      dim {
        size: 32
      }
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.11433239281177521
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.11433239281177521
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/first_conv/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/first_conv/weights"
input: "FC-DenseNet56/first_conv/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/first_conv/weights/read"
op: "Identity"
input: "FC-DenseNet56/first_conv/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}

name: "FC-DenseNet56/first_conv/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/first_conv/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/first_conv/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/first_conv/biases"
input: "FC-DenseNet56/first_conv/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/first_conv/biases/read"
op: "Identity"
input: "FC-DenseNet56/first_conv/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}

name: "FC-DenseNet56/first_conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/first_conv/Conv2D"
op: "Conv2D"
input: "Placeholder"
input: "FC-DenseNet56/first_conv/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/first_conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/first_conv/Conv2D"
input: "FC-DenseNet56/first_conv/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/beta"
input: "FC-DenseNet56/BatchNorm/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/moving_mean"
input: "FC-DenseNet56/BatchNorm/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/moving_variance"
input: "FC-DenseNet56/BatchNorm/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/first_conv/BiasAdd"
input: "FC-DenseNet56/denseblock1/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm/beta/read"
input: "FC-DenseNet56/denseblock1/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock1/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm/moving_mean/read"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm/moving_mean"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm/moving_variance/read"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm/moving_variance"
input: "FC-DenseNet56/denseblock1/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.10540925711393356
    }
  }
}

name: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10540925711393356
    }
  }
}

name: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}

name: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}

name: "FC-DenseNet56/Conv/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}

name: "FC-DenseNet56/Conv/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv/weights"
input: "FC-DenseNet56/Conv/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}

name: "FC-DenseNet56/Conv/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv/biases"
input: "FC-DenseNet56/Conv/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock1/Relu"
input: "FC-DenseNet56/Conv/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock1/Conv/Conv2D"
input: "FC-DenseNet56/Conv/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/max"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/mul"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/sub/x"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/truediv/x"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/random_uniform"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock1/concat"
op: "ConcatV2"
input: "FC-DenseNet56/first_conv/BiasAdd"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1"
input: "FC-DenseNet56/denseblock1/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 60
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 60
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 60
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/beta"
input: "FC-DenseNet56/BatchNorm_1/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_1/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 60
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 60
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/moving_mean"
input: "FC-DenseNet56/BatchNorm_1/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_1/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 60
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 60
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/moving_variance"
input: "FC-DenseNet56/BatchNorm_1/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_1/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_1/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock1/concat"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_1/beta/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_1/moving_mean/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_1/moving_mean"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_1/moving_variance/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_1/moving_variance"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000<\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.09622504562139511
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.09622504562139511
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 60
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_1/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_1/weights"
input: "FC-DenseNet56/Conv_1/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_1/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_1/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_1/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_1/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_1/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_1/biases"
input: "FC-DenseNet56/Conv_1/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_1/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_1/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock1/Relu_1"
input: "FC-DenseNet56/Conv_1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock1/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_1/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock1/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock1/concat"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock1/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 72
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 72
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 72
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/beta"
input: "FC-DenseNet56/BatchNorm_2/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_2/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 72
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 72
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/moving_mean"
input: "FC-DenseNet56/BatchNorm_2/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_2/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 72
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 72
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/moving_variance"
input: "FC-DenseNet56/BatchNorm_2/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_2/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_2/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock1/concat_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_2/beta/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_2/moving_mean/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_2/moving_mean"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_2/moving_variance/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_2/moving_variance"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000H\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.08908708393573761
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.08908708393573761
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 72
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_2/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_2/weights"
input: "FC-DenseNet56/Conv_2/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_2/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_2/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_2/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_2/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_2/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_2/biases"
input: "FC-DenseNet56/Conv_2/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_2/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_2/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock1/Relu_2"
input: "FC-DenseNet56/Conv_2/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock1/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_2/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock1/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock1/concat_1"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock1/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 84
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 84
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 84
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/beta"
input: "FC-DenseNet56/BatchNorm_3/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_3/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 84
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 84
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/moving_mean"
input: "FC-DenseNet56/BatchNorm_3/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_3/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 84
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 84
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/moving_variance"
input: "FC-DenseNet56/BatchNorm_3/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_3/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_3/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock1/concat_2"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_3/beta/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_3/moving_mean/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_3/moving_mean"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_3/moving_variance/read"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_3/moving_variance"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000T\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 84
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_3/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_3/weights"
input: "FC-DenseNet56/Conv_3/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_3/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_3/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_3/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_3/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_3/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_3/biases"
input: "FC-DenseNet56/Conv_3/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_3/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_3/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock1/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock1/Relu_3"
input: "FC-DenseNet56/Conv_3/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock1/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock1/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_3/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock1/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock1/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock1/concat_2"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock1/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock1/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock1/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock1/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/beta"
input: "FC-DenseNet56/BatchNorm_4/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_4/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/moving_mean"
input: "FC-DenseNet56/BatchNorm_4/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_4/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/moving_variance"
input: "FC-DenseNet56/BatchNorm_4/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_4/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_4/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock1/concat_3"
input: "FC-DenseNet56/transitiondown1/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_4/beta/read"
input: "FC-DenseNet56/transitiondown1/BatchNorm/Const_1"
input: "FC-DenseNet56/transitiondown1/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/transitiondown1/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_4/moving_mean/read"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_4/moving_mean"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/transitiondown1/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_4/moving_variance/read"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_4/moving_variance"
input: "FC-DenseNet56/transitiondown1/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown1/Relu"
op: "Relu"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.1767766922712326
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.1767766922712326
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_4/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_4/weights"
input: "FC-DenseNet56/Conv_4/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_4/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_4/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_4/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_4/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_4/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_4/biases"
input: "FC-DenseNet56/Conv_4/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_4/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_4/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/transitiondown1/Relu"
input: "FC-DenseNet56/Conv_4/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown1/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitiondown1/Conv/Conv2D"
input: "FC-DenseNet56/Conv_4/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown1/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/sub/x"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown1/Conv/BiasAdd"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/mul"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown1/max_pool/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown1/max_pool"
op: "MaxPool"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/beta"
input: "FC-DenseNet56/BatchNorm_5/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_5/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/moving_mean"
input: "FC-DenseNet56/BatchNorm_5/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_5/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/moving_variance"
input: "FC-DenseNet56/BatchNorm_5/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_5/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_5/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitiondown1/max_pool"
input: "FC-DenseNet56/denseblock2/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_5/beta/read"
input: "FC-DenseNet56/denseblock2/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock2/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_5/moving_mean/read"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_5/moving_mean"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_5/moving_variance/read"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_5/moving_variance"
input: "FC-DenseNet56/denseblock2/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.07856742292642593
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.07856742292642593
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 96
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_5/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_5/weights"
input: "FC-DenseNet56/Conv_5/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_5/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_5/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_5/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_5/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_5/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_5/biases"
input: "FC-DenseNet56/Conv_5/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_5/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_5/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock2/Relu"
input: "FC-DenseNet56/Conv_5/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock2/Conv/Conv2D"
input: "FC-DenseNet56/Conv_5/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock2/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitiondown1/max_pool"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 108
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 108
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 108
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/beta"
input: "FC-DenseNet56/BatchNorm_6/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_6/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 108
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 108
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/moving_mean"
input: "FC-DenseNet56/BatchNorm_6/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_6/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 108
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 108
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/moving_variance"
input: "FC-DenseNet56/BatchNorm_6/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_6/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_6/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock2/concat"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_6/beta/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_6/moving_mean/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_6/moving_mean"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_6/moving_variance/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_6/moving_variance"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.07453560084104538
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.07453560084104538
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 108
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_6/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_6/weights"
input: "FC-DenseNet56/Conv_6/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_6/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_6/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_6/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_6/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_6/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_6/biases"
input: "FC-DenseNet56/Conv_6/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_6/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_6/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock2/Relu_1"
input: "FC-DenseNet56/Conv_6/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock2/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_6/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock2/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock2/concat"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 120
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 120
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 120
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/beta"
input: "FC-DenseNet56/BatchNorm_7/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_7/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 120
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 120
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/moving_mean"
input: "FC-DenseNet56/BatchNorm_7/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_7/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 120
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 120
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/moving_variance"
input: "FC-DenseNet56/BatchNorm_7/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_7/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_7/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock2/concat_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_7/beta/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_7/moving_mean/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_7/moving_mean"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_7/moving_variance/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_7/moving_variance"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000x\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.07106690853834152
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.07106690853834152
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 120
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_7/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_7/weights"
input: "FC-DenseNet56/Conv_7/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_7/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_7/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_7/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_7/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_7/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_7/biases"
input: "FC-DenseNet56/Conv_7/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_7/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_7/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock2/Relu_2"
input: "FC-DenseNet56/Conv_7/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock2/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_7/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock2/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock2/concat_1"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 132
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 132
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 132
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/beta"
input: "FC-DenseNet56/BatchNorm_8/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_8/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 132
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 132
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/moving_mean"
input: "FC-DenseNet56/BatchNorm_8/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_8/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 132
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 132
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/moving_variance"
input: "FC-DenseNet56/BatchNorm_8/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_8/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_8/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock2/concat_2"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_8/beta/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_8/moving_mean/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_8/moving_mean"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_8/moving_variance/read"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_8/moving_variance"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\204\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.06804138422012329
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.06804138422012329
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 132
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_8/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_8/weights"
input: "FC-DenseNet56/Conv_8/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_8/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_8/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_8/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_8/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_8/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_8/biases"
input: "FC-DenseNet56/Conv_8/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_8/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_8/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock2/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock2/Relu_3"
input: "FC-DenseNet56/Conv_8/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock2/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock2/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_8/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock2/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock2/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock2/concat_2"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock2/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock2/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock2/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/beta"
input: "FC-DenseNet56/BatchNorm_9/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_9/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/moving_mean"
input: "FC-DenseNet56/BatchNorm_9/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_9/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/moving_variance"
input: "FC-DenseNet56/BatchNorm_9/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_9/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_9/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock2/concat_3"
input: "FC-DenseNet56/transitiondown2/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_9/beta/read"
input: "FC-DenseNet56/transitiondown2/BatchNorm/Const_1"
input: "FC-DenseNet56/transitiondown2/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/transitiondown2/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_9/moving_mean/read"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_9/moving_mean"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/transitiondown2/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_9/moving_variance/read"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_9/moving_variance"
input: "FC-DenseNet56/transitiondown2/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown2/Relu"
op: "Relu"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\220\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.14433756470680237
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.14433756470680237
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_9/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_9/weights"
input: "FC-DenseNet56/Conv_9/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_9/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_9/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_9/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_9/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_9/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_9/biases"
input: "FC-DenseNet56/Conv_9/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_9/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_9/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/transitiondown2/Relu"
input: "FC-DenseNet56/Conv_9/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown2/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitiondown2/Conv/Conv2D"
input: "FC-DenseNet56/Conv_9/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown2/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/sub/x"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown2/Conv/BiasAdd"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/mul"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown2/max_pool/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown2/max_pool"
op: "MaxPool"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/beta"
input: "FC-DenseNet56/BatchNorm_10/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_10/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/moving_mean"
input: "FC-DenseNet56/BatchNorm_10/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_10/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/moving_variance"
input: "FC-DenseNet56/BatchNorm_10/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_10/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_10/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitiondown2/max_pool"
input: "FC-DenseNet56/denseblock3/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_10/beta/read"
input: "FC-DenseNet56/denseblock3/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock3/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_10/moving_mean/read"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_10/moving_mean"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_10/moving_variance/read"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_10/moving_variance"
input: "FC-DenseNet56/denseblock3/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0653720423579216
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0653720423579216
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_10/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_10/weights"
input: "FC-DenseNet56/Conv_10/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_10/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_10/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_10/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_10/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_10/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_10/biases"
input: "FC-DenseNet56/Conv_10/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_10/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_10/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock3/Relu"
input: "FC-DenseNet56/Conv_10/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock3/Conv/Conv2D"
input: "FC-DenseNet56/Conv_10/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock3/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitiondown2/max_pool"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/beta"
input: "FC-DenseNet56/BatchNorm_11/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_11/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/moving_mean"
input: "FC-DenseNet56/BatchNorm_11/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_11/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/moving_variance"
input: "FC-DenseNet56/BatchNorm_11/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_11/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_11/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock3/concat"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_11/beta/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_11/moving_mean/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_11/moving_mean"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_11/moving_variance/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_11/moving_variance"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\234\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0629940778017044
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0629940778017044
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 156
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_11/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_11/weights"
input: "FC-DenseNet56/Conv_11/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_11/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_11/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_11/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_11/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_11/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_11/biases"
input: "FC-DenseNet56/Conv_11/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_11/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_11/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock3/Relu_1"
input: "FC-DenseNet56/Conv_11/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock3/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_11/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock3/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock3/concat"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/beta"
input: "FC-DenseNet56/BatchNorm_12/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_12/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/moving_mean"
input: "FC-DenseNet56/BatchNorm_12/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_12/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/moving_variance"
input: "FC-DenseNet56/BatchNorm_12/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_12/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_12/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock3/concat_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_12/beta/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_12/moving_mean/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_12/moving_mean"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_12/moving_variance/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_12/moving_variance"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\250\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.06085806339979172
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.06085806339979172
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 168
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_12/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_12/weights"
input: "FC-DenseNet56/Conv_12/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_12/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_12/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_12/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_12/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_12/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_12/biases"
input: "FC-DenseNet56/Conv_12/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_12/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_12/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock3/Relu_2"
input: "FC-DenseNet56/Conv_12/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock3/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_12/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock3/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock3/concat_1"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/beta"
input: "FC-DenseNet56/BatchNorm_13/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_13/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/moving_mean"
input: "FC-DenseNet56/BatchNorm_13/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_13/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/moving_variance"
input: "FC-DenseNet56/BatchNorm_13/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_13/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_13/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock3/concat_2"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_13/beta/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_13/moving_mean/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_13/moving_mean"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_13/moving_variance/read"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_13/moving_variance"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\264\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0589255653321743
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0589255653321743
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 180
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_13/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_13/weights"
input: "FC-DenseNet56/Conv_13/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_13/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_13/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_13/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_13/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_13/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_13/biases"
input: "FC-DenseNet56/Conv_13/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_13/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_13/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock3/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock3/Relu_3"
input: "FC-DenseNet56/Conv_13/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock3/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock3/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_13/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock3/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock3/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock3/concat_2"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock3/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock3/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock3/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/beta"
input: "FC-DenseNet56/BatchNorm_14/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_14/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/moving_mean"
input: "FC-DenseNet56/BatchNorm_14/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_14/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/moving_variance"
input: "FC-DenseNet56/BatchNorm_14/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_14/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_14/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock3/concat_3"
input: "FC-DenseNet56/transitiondown3/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_14/beta/read"
input: "FC-DenseNet56/transitiondown3/BatchNorm/Const_1"
input: "FC-DenseNet56/transitiondown3/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/transitiondown3/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_14/moving_mean/read"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_14/moving_mean"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/transitiondown3/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_14/moving_variance/read"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_14/moving_variance"
input: "FC-DenseNet56/transitiondown3/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown3/Relu"
op: "Relu"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.125
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.125
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_14/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_14/weights"
input: "FC-DenseNet56/Conv_14/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_14/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_14/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_14/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_14/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_14/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_14/biases"
input: "FC-DenseNet56/Conv_14/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_14/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_14/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/transitiondown3/Relu"
input: "FC-DenseNet56/Conv_14/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown3/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitiondown3/Conv/Conv2D"
input: "FC-DenseNet56/Conv_14/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown3/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/sub/x"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown3/Conv/BiasAdd"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/mul"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown3/max_pool/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown3/max_pool"
op: "MaxPool"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/beta"
input: "FC-DenseNet56/BatchNorm_15/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_15/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/moving_mean"
input: "FC-DenseNet56/BatchNorm_15/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_15/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/moving_variance"
input: "FC-DenseNet56/BatchNorm_15/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_15/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_15/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitiondown3/max_pool"
input: "FC-DenseNet56/denseblock4/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_15/beta/read"
input: "FC-DenseNet56/denseblock4/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock4/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_15/moving_mean/read"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_15/moving_mean"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_15/moving_variance/read"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_15/moving_variance"
input: "FC-DenseNet56/denseblock4/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.057166196405887604
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.057166196405887604
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_15/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_15/weights"
input: "FC-DenseNet56/Conv_15/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_15/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_15/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_15/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_15/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_15/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_15/biases"
input: "FC-DenseNet56/Conv_15/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_15/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_15/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock4/Relu"
input: "FC-DenseNet56/Conv_15/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock4/Conv/Conv2D"
input: "FC-DenseNet56/Conv_15/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock4/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitiondown3/max_pool"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/beta"
input: "FC-DenseNet56/BatchNorm_16/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_16/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/moving_mean"
input: "FC-DenseNet56/BatchNorm_16/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_16/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/moving_variance"
input: "FC-DenseNet56/BatchNorm_16/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_16/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_16/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock4/concat"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_16/beta/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_16/moving_mean/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_16/moving_mean"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_16/moving_variance/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_16/moving_variance"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\314\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0555555559694767
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0555555559694767
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 204
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_16/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_16/weights"
input: "FC-DenseNet56/Conv_16/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_16/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_16/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_16/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_16/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_16/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_16/biases"
input: "FC-DenseNet56/Conv_16/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_16/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_16/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock4/Relu_1"
input: "FC-DenseNet56/Conv_16/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock4/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_16/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock4/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock4/concat"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/beta"
input: "FC-DenseNet56/BatchNorm_17/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_17/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/moving_mean"
input: "FC-DenseNet56/BatchNorm_17/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_17/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/moving_variance"
input: "FC-DenseNet56/BatchNorm_17/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_17/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_17/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock4/concat_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_17/beta/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_17/moving_mean/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_17/moving_mean"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_17/moving_variance/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_17/moving_variance"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05407380685210228
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05407380685210228
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 216
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_17/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_17/weights"
input: "FC-DenseNet56/Conv_17/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_17/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_17/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_17/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_17/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_17/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_17/biases"
input: "FC-DenseNet56/Conv_17/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_17/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_17/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock4/Relu_2"
input: "FC-DenseNet56/Conv_17/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock4/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_17/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock4/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock4/concat_1"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/beta"
input: "FC-DenseNet56/BatchNorm_18/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_18/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/moving_mean"
input: "FC-DenseNet56/BatchNorm_18/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_18/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/moving_variance"
input: "FC-DenseNet56/BatchNorm_18/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_18/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_18/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock4/concat_2"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_18/beta/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_18/moving_mean/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_18/moving_mean"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_18/moving_variance/read"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_18/moving_variance"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\344\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05270462855696678
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05270462855696678
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 228
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_18/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_18/weights"
input: "FC-DenseNet56/Conv_18/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_18/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_18/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_18/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_18/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_18/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_18/biases"
input: "FC-DenseNet56/Conv_18/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_18/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_18/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock4/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock4/Relu_3"
input: "FC-DenseNet56/Conv_18/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock4/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock4/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_18/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock4/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock4/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock4/concat_2"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock4/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock4/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock4/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/beta"
input: "FC-DenseNet56/BatchNorm_19/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_19/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/moving_mean"
input: "FC-DenseNet56/BatchNorm_19/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_19/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/moving_variance"
input: "FC-DenseNet56/BatchNorm_19/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_19/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_19/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock4/concat_3"
input: "FC-DenseNet56/transitiondown4/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_19/beta/read"
input: "FC-DenseNet56/transitiondown4/BatchNorm/Const_1"
input: "FC-DenseNet56/transitiondown4/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/transitiondown4/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_19/moving_mean/read"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_19/moving_mean"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/transitiondown4/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_19/moving_variance/read"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_19/moving_variance"
input: "FC-DenseNet56/transitiondown4/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown4/Relu"
op: "Relu"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\360\000\000\000\360\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.11180339753627777
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.11180339753627777
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 240
      }
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_19/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_19/weights"
input: "FC-DenseNet56/Conv_19/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_19/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_19/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_19/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_19/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_19/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_19/biases"
input: "FC-DenseNet56/Conv_19/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_19/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_19/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/transitiondown4/Relu"
input: "FC-DenseNet56/Conv_19/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown4/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitiondown4/Conv/Conv2D"
input: "FC-DenseNet56/Conv_19/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown4/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/sub/x"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown4/Conv/BiasAdd"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/mul"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown4/max_pool/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown4/max_pool"
op: "MaxPool"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/beta"
input: "FC-DenseNet56/BatchNorm_20/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_20/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/moving_mean"
input: "FC-DenseNet56/BatchNorm_20/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_20/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/moving_variance"
input: "FC-DenseNet56/BatchNorm_20/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_20/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_20/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitiondown4/max_pool"
input: "FC-DenseNet56/denseblock5/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_20/beta/read"
input: "FC-DenseNet56/denseblock5/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock5/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_20/moving_mean/read"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_20/moving_mean"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_20/moving_variance/read"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_20/moving_variance"
input: "FC-DenseNet56/denseblock5/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\360\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05143444985151291
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05143444985151291
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 240
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_20/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_20/weights"
input: "FC-DenseNet56/Conv_20/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_20/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_20/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_20/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_20/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_20/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_20/biases"
input: "FC-DenseNet56/Conv_20/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_20/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_20/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock5/Relu"
input: "FC-DenseNet56/Conv_20/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock5/Conv/Conv2D"
input: "FC-DenseNet56/Conv_20/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock5/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitiondown4/max_pool"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/beta"
input: "FC-DenseNet56/BatchNorm_21/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_21/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/moving_mean"
input: "FC-DenseNet56/BatchNorm_21/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_21/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/moving_variance"
input: "FC-DenseNet56/BatchNorm_21/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_21/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_21/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock5/concat"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_21/beta/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_21/moving_mean/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_21/moving_mean"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_21/moving_variance/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_21/moving_variance"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\374\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05025188997387886
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05025188997387886
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 252
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_21/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_21/weights"
input: "FC-DenseNet56/Conv_21/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_21/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_21/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_21/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_21/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_21/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_21/biases"
input: "FC-DenseNet56/Conv_21/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_21/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_21/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock5/Relu_1"
input: "FC-DenseNet56/Conv_21/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock5/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_21/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock5/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock5/concat"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/beta"
input: "FC-DenseNet56/BatchNorm_22/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_22/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/moving_mean"
input: "FC-DenseNet56/BatchNorm_22/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_22/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/moving_variance"
input: "FC-DenseNet56/BatchNorm_22/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_22/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_22/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock5/concat_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_22/beta/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_22/moving_mean/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_22/moving_mean"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_22/moving_variance/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_22/moving_variance"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\010\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04914731904864311
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04914731904864311
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 264
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_22/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_22/weights"
input: "FC-DenseNet56/Conv_22/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_22/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_22/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_22/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_22/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_22/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_22/biases"
input: "FC-DenseNet56/Conv_22/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_22/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_22/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock5/Relu_2"
input: "FC-DenseNet56/Conv_22/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock5/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_22/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock5/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock5/concat_1"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/beta"
input: "FC-DenseNet56/BatchNorm_23/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_23/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/moving_mean"
input: "FC-DenseNet56/BatchNorm_23/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_23/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/moving_variance"
input: "FC-DenseNet56/BatchNorm_23/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_23/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_23/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock5/concat_2"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_23/beta/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_23/moving_mean/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_23/moving_mean"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_23/moving_variance/read"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_23/moving_variance"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\024\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.048112522810697556
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.048112522810697556
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 276
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_23/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_23/weights"
input: "FC-DenseNet56/Conv_23/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_23/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_23/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_23/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_23/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_23/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_23/biases"
input: "FC-DenseNet56/Conv_23/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_23/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_23/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock5/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock5/Relu_3"
input: "FC-DenseNet56/Conv_23/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock5/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock5/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_23/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock5/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock5/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock5/concat_2"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock5/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock5/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock5/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/beta"
input: "FC-DenseNet56/BatchNorm_24/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_24/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/moving_mean"
input: "FC-DenseNet56/BatchNorm_24/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_24/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/moving_variance"
input: "FC-DenseNet56/BatchNorm_24/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_24/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_24/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock5/concat_3"
input: "FC-DenseNet56/transitiondown5/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_24/beta/read"
input: "FC-DenseNet56/transitiondown5/BatchNorm/Const_1"
input: "FC-DenseNet56/transitiondown5/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/transitiondown5/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_24/moving_mean/read"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_24/moving_mean"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/transitiondown5/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_24/moving_variance/read"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_24/moving_variance"
input: "FC-DenseNet56/transitiondown5/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown5/Relu"
op: "Relu"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000 \001\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.10206207633018494
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.10206207633018494
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 288
      }
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_24/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_24/weights"
input: "FC-DenseNet56/Conv_24/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_24/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_24/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_24/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_24/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_24/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_24/biases"
input: "FC-DenseNet56/Conv_24/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_24/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_24/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/transitiondown5/Relu"
input: "FC-DenseNet56/Conv_24/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitiondown5/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitiondown5/Conv/Conv2D"
input: "FC-DenseNet56/Conv_24/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown5/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/sub/x"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/transitiondown5/Conv/BiasAdd"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/mul"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/transitiondown5/max_pool/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/transitiondown5/max_pool"
op: "MaxPool"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/beta"
input: "FC-DenseNet56/BatchNorm_25/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_25/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/moving_mean"
input: "FC-DenseNet56/BatchNorm_25/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_25/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/moving_variance"
input: "FC-DenseNet56/BatchNorm_25/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_25/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_25/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitiondown5/max_pool"
input: "FC-DenseNet56/denseblock6/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_25/beta/read"
input: "FC-DenseNet56/denseblock6/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock6/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_25/moving_mean/read"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_25/moving_mean"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_25/moving_variance/read"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_25/moving_variance"
input: "FC-DenseNet56/denseblock6/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0471404530107975
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0471404530107975
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 288
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_25/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_25/weights"
input: "FC-DenseNet56/Conv_25/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_25/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_25/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_25/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_25/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_25/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_25/biases"
input: "FC-DenseNet56/Conv_25/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_25/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_25/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock6/Relu"
input: "FC-DenseNet56/Conv_25/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock6/Conv/Conv2D"
input: "FC-DenseNet56/Conv_25/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock6/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitiondown5/max_pool"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/beta"
input: "FC-DenseNet56/BatchNorm_26/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_26/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/moving_mean"
input: "FC-DenseNet56/BatchNorm_26/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_26/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/moving_variance"
input: "FC-DenseNet56/BatchNorm_26/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_26/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_26/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock6/concat"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_26/beta/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_26/moving_mean/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_26/moving_mean"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_26/moving_variance/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_26/moving_variance"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000,\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.046225015074014664
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.046225015074014664
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_26/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_26/weights"
input: "FC-DenseNet56/Conv_26/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_26/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_26/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_26/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_26/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_26/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_26/biases"
input: "FC-DenseNet56/Conv_26/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_26/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_26/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock6/Relu_1"
input: "FC-DenseNet56/Conv_26/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock6/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_26/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock6/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock6/concat"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/beta"
input: "FC-DenseNet56/BatchNorm_27/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_27/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/moving_mean"
input: "FC-DenseNet56/BatchNorm_27/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_27/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/moving_variance"
input: "FC-DenseNet56/BatchNorm_27/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_27/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_27/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock6/concat_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_27/beta/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_27/moving_mean/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_27/moving_mean"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_27/moving_variance/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_27/moving_variance"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0008\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04536092281341553
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04536092281341553
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 312
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_27/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_27/weights"
input: "FC-DenseNet56/Conv_27/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_27/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_27/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_27/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_27/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_27/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_27/biases"
input: "FC-DenseNet56/Conv_27/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_27/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_27/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock6/Relu_2"
input: "FC-DenseNet56/Conv_27/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock6/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_27/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock6/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock6/concat_1"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/beta"
input: "FC-DenseNet56/BatchNorm_28/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_28/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/moving_mean"
input: "FC-DenseNet56/BatchNorm_28/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_28/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/moving_variance"
input: "FC-DenseNet56/BatchNorm_28/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_28/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_28/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock6/concat_2"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_28/beta/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_28/moving_mean/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_28/moving_mean"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_28/moving_variance/read"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_28/moving_variance"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000D\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.044543541967868805
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.044543541967868805
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 324
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_28/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_28/weights"
input: "FC-DenseNet56/Conv_28/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_28/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_28/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_28/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_28/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_28/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_28/biases"
input: "FC-DenseNet56/Conv_28/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_28/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_28/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock6/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock6/Relu_3"
input: "FC-DenseNet56/Conv_28/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock6/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock6/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_28/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock6/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock6/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock6/concat_2"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock6/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock6/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/weights"
input: "FC-DenseNet56/Conv2d_transpose/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/biases"
input: "FC-DenseNet56/Conv2d_transpose/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice/stack"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice/stack_1"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1/stack"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1/stack_1"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2/stack"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2/stack_1"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul"
op: "Mul"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_1"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_2"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/stack/3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 48
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/stack"
op: "Pack"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/mul_1"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/stack/3"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_3/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_3/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_3/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_3"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/stack"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_3/stack"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_3/stack_1"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/strided_slice_3/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1"
op: "Conv2DBackpropInput"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/stack"
input: "FC-DenseNet56/Conv2d_transpose/weights/read"
input: "FC-DenseNet56/denseblock6/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1"
input: "FC-DenseNet56/Conv2d_transpose/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitionup6/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/transitionup6/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock5/concat_3"
input: "FC-DenseNet56/transitionup6/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 336
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 336
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 336
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/beta"
input: "FC-DenseNet56/BatchNorm_29/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_29/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 336
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 336
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/moving_mean"
input: "FC-DenseNet56/BatchNorm_29/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_29/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 336
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 336
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/moving_variance"
input: "FC-DenseNet56/BatchNorm_29/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_29/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_29/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitionup6/concat"
input: "FC-DenseNet56/denseblock7/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_29/beta/read"
input: "FC-DenseNet56/denseblock7/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock7/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_29/moving_mean/read"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_29/moving_mean"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_29/moving_variance/read"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_29/moving_variance"
input: "FC-DenseNet56/denseblock7/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04376881197094917
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04376881197094917
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 336
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_29/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_29/weights"
input: "FC-DenseNet56/Conv_29/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_29/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_29/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_29/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_29/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_29/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_29/biases"
input: "FC-DenseNet56/Conv_29/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_29/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_29/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock7/Relu"
input: "FC-DenseNet56/Conv_29/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock7/Conv/Conv2D"
input: "FC-DenseNet56/Conv_29/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock7/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup6/concat"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 348
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 348
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 348
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/beta"
input: "FC-DenseNet56/BatchNorm_30/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_30/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 348
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 348
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/moving_mean"
input: "FC-DenseNet56/BatchNorm_30/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_30/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 348
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 348
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/moving_variance"
input: "FC-DenseNet56/BatchNorm_30/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_30/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_30/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock7/concat"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_30/beta/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_30/moving_mean/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_30/moving_mean"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_30/moving_variance/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_30/moving_variance"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\\\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04303314909338951
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04303314909338951
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 348
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_30/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_30/weights"
input: "FC-DenseNet56/Conv_30/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_30/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_30/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_30/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_30/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_30/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_30/biases"
input: "FC-DenseNet56/Conv_30/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_30/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_30/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock7/Relu_1"
input: "FC-DenseNet56/Conv_30/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock7/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_30/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock7/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock7/concat"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 360
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 360
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 360
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/beta"
input: "FC-DenseNet56/BatchNorm_31/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_31/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 360
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 360
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/moving_mean"
input: "FC-DenseNet56/BatchNorm_31/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_31/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 360
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 360
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/moving_variance"
input: "FC-DenseNet56/BatchNorm_31/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_31/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_31/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock7/concat_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_31/beta/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_31/moving_mean/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_31/moving_mean"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_31/moving_variance/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_31/moving_variance"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000h\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04233337566256523
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04233337566256523
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 360
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_31/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_31/weights"
input: "FC-DenseNet56/Conv_31/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_31/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_31/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_31/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_31/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_31/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_31/biases"
input: "FC-DenseNet56/Conv_31/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_31/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_31/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock7/Relu_2"
input: "FC-DenseNet56/Conv_31/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock7/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_31/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock7/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock7/concat_1"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 372
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 372
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 372
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/beta"
input: "FC-DenseNet56/BatchNorm_32/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_32/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 372
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 372
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/moving_mean"
input: "FC-DenseNet56/BatchNorm_32/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_32/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 372
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 372
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/moving_variance"
input: "FC-DenseNet56/BatchNorm_32/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_32/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_32/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock7/concat_2"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_32/beta/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_32/moving_mean/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_32/moving_mean"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_32/moving_variance/read"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_32/moving_variance"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000t\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0416666679084301
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0416666679084301
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 372
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_32/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_32/weights"
input: "FC-DenseNet56/Conv_32/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_32/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_32/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_32/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_32/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_32/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_32/biases"
input: "FC-DenseNet56/Conv_32/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_32/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_32/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock7/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock7/Relu_3"
input: "FC-DenseNet56/Conv_32/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock7/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock7/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_32/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock7/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock7/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock7/concat_2"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock7/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock7/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/weights"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_1/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/biases"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_1/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice/stack"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice/stack_1"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1/stack"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1/stack_1"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2/stack"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2/stack_1"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul"
op: "Mul"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_1"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_2"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/stack/3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 48
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/stack"
op: "Pack"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/mul_1"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/stack/3"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_3/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_3/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_3/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_3"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/stack"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_3/stack"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_3/stack_1"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/strided_slice_3/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose"
op: "Conv2DBackpropInput"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/stack"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/read"
input: "FC-DenseNet56/denseblock7/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitionup7/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/transitionup7/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock4/concat_3"
input: "FC-DenseNet56/transitionup7/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/beta"
input: "FC-DenseNet56/BatchNorm_33/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_33/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/moving_mean"
input: "FC-DenseNet56/BatchNorm_33/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_33/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/moving_variance"
input: "FC-DenseNet56/BatchNorm_33/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_33/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_33/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitionup7/concat"
input: "FC-DenseNet56/denseblock8/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_33/beta/read"
input: "FC-DenseNet56/denseblock8/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock8/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_33/moving_mean/read"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_33/moving_mean"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_33/moving_variance/read"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_33/moving_variance"
input: "FC-DenseNet56/denseblock8/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0471404530107975
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0471404530107975
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 288
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_33/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_33/weights"
input: "FC-DenseNet56/Conv_33/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_33/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_33/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_33/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_33/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_33/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_33/biases"
input: "FC-DenseNet56/Conv_33/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_33/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_33/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock8/Relu"
input: "FC-DenseNet56/Conv_33/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock8/Conv/Conv2D"
input: "FC-DenseNet56/Conv_33/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock8/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup7/concat"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/beta"
input: "FC-DenseNet56/BatchNorm_34/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_34/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/moving_mean"
input: "FC-DenseNet56/BatchNorm_34/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_34/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/moving_variance"
input: "FC-DenseNet56/BatchNorm_34/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_34/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_34/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock8/concat"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_34/beta/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_34/moving_mean/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_34/moving_mean"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_34/moving_variance/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_34/moving_variance"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000,\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.046225015074014664
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.046225015074014664
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_34/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_34/weights"
input: "FC-DenseNet56/Conv_34/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_34/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_34/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_34/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_34/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_34/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_34/biases"
input: "FC-DenseNet56/Conv_34/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_34/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_34/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock8/Relu_1"
input: "FC-DenseNet56/Conv_34/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock8/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_34/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock8/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock8/concat"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/beta"
input: "FC-DenseNet56/BatchNorm_35/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_35/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/moving_mean"
input: "FC-DenseNet56/BatchNorm_35/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_35/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/moving_variance"
input: "FC-DenseNet56/BatchNorm_35/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_35/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_35/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock8/concat_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_35/beta/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_35/moving_mean/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_35/moving_mean"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_35/moving_variance/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_35/moving_variance"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0008\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04536092281341553
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04536092281341553
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 312
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_35/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_35/weights"
input: "FC-DenseNet56/Conv_35/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_35/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_35/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_35/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_35/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_35/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_35/biases"
input: "FC-DenseNet56/Conv_35/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_35/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_35/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock8/Relu_2"
input: "FC-DenseNet56/Conv_35/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock8/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_35/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock8/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock8/concat_1"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/beta"
input: "FC-DenseNet56/BatchNorm_36/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_36/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/moving_mean"
input: "FC-DenseNet56/BatchNorm_36/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_36/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/moving_variance"
input: "FC-DenseNet56/BatchNorm_36/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_36/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_36/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock8/concat_2"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_36/beta/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_36/moving_mean/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_36/moving_mean"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_36/moving_variance/read"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_36/moving_variance"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000D\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.044543541967868805
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.044543541967868805
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 324
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_36/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_36/weights"
input: "FC-DenseNet56/Conv_36/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_36/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_36/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_36/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_36/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_36/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_36/biases"
input: "FC-DenseNet56/Conv_36/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_36/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_36/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock8/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock8/Relu_3"
input: "FC-DenseNet56/Conv_36/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock8/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock8/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_36/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock8/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock8/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock8/concat_2"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock8/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock8/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/weights"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_2/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/biases"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_2/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice/stack"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice/stack_1"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1/stack"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1/stack_1"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2/stack"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2/stack_1"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul"
op: "Mul"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_1"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_2"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/stack/3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 48
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/stack"
op: "Pack"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/mul_1"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/stack/3"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_3/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_3/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_3/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_3"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/stack"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_3/stack"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_3/stack_1"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/strided_slice_3/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose"
op: "Conv2DBackpropInput"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/stack"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/read"
input: "FC-DenseNet56/denseblock8/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitionup8/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/transitionup8/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock3/concat_3"
input: "FC-DenseNet56/transitionup8/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/beta"
input: "FC-DenseNet56/BatchNorm_37/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_37/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/moving_mean"
input: "FC-DenseNet56/BatchNorm_37/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_37/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/moving_variance"
input: "FC-DenseNet56/BatchNorm_37/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_37/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_37/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitionup8/concat"
input: "FC-DenseNet56/denseblock9/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_37/beta/read"
input: "FC-DenseNet56/denseblock9/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock9/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_37/moving_mean/read"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_37/moving_mean"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_37/moving_variance/read"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_37/moving_variance"
input: "FC-DenseNet56/denseblock9/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\360\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05143444985151291
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05143444985151291
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 240
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_37/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_37/weights"
input: "FC-DenseNet56/Conv_37/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_37/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_37/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_37/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_37/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_37/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_37/biases"
input: "FC-DenseNet56/Conv_37/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_37/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_37/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock9/Relu"
input: "FC-DenseNet56/Conv_37/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock9/Conv/Conv2D"
input: "FC-DenseNet56/Conv_37/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock9/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup8/concat"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/beta"
input: "FC-DenseNet56/BatchNorm_38/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_38/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/moving_mean"
input: "FC-DenseNet56/BatchNorm_38/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_38/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/moving_variance"
input: "FC-DenseNet56/BatchNorm_38/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_38/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_38/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock9/concat"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_38/beta/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_38/moving_mean/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_38/moving_mean"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_38/moving_variance/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_38/moving_variance"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\374\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05025188997387886
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05025188997387886
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 252
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_38/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_38/weights"
input: "FC-DenseNet56/Conv_38/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_38/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_38/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_38/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_38/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_38/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_38/biases"
input: "FC-DenseNet56/Conv_38/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_38/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_38/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock9/Relu_1"
input: "FC-DenseNet56/Conv_38/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock9/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_38/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock9/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock9/concat"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/beta"
input: "FC-DenseNet56/BatchNorm_39/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_39/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/moving_mean"
input: "FC-DenseNet56/BatchNorm_39/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_39/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/moving_variance"
input: "FC-DenseNet56/BatchNorm_39/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_39/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_39/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock9/concat_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_39/beta/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_39/moving_mean/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_39/moving_mean"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_39/moving_variance/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_39/moving_variance"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\010\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04914731904864311
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04914731904864311
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 264
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_39/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_39/weights"
input: "FC-DenseNet56/Conv_39/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_39/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_39/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_39/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_39/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_39/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_39/biases"
input: "FC-DenseNet56/Conv_39/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_39/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_39/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock9/Relu_2"
input: "FC-DenseNet56/Conv_39/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock9/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_39/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock9/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock9/concat_1"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/beta"
input: "FC-DenseNet56/BatchNorm_40/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_40/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/moving_mean"
input: "FC-DenseNet56/BatchNorm_40/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_40/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/moving_variance"
input: "FC-DenseNet56/BatchNorm_40/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_40/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_40/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock9/concat_2"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_40/beta/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_40/moving_mean/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_40/moving_mean"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_40/moving_variance/read"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_40/moving_variance"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\024\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.048112522810697556
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.048112522810697556
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 276
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_40/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_40/weights"
input: "FC-DenseNet56/Conv_40/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_40/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_40/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_40/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_40/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_40/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_40/biases"
input: "FC-DenseNet56/Conv_40/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_40/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_40/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock9/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock9/Relu_3"
input: "FC-DenseNet56/Conv_40/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock9/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock9/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_40/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock9/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock9/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock9/concat_2"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock9/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock9/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/weights"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_3/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/biases"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_3/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice/stack"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice/stack_1"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1/stack"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1/stack_1"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2/stack"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2/stack_1"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul"
op: "Mul"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_1"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_2"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/stack/3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 48
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/stack"
op: "Pack"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/mul_1"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/stack/3"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_3/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_3/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_3/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_3"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/stack"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_3/stack"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_3/stack_1"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/strided_slice_3/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose"
op: "Conv2DBackpropInput"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/stack"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/read"
input: "FC-DenseNet56/denseblock9/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitionup9/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/transitionup9/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock2/concat_3"
input: "FC-DenseNet56/transitionup9/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/beta"
input: "FC-DenseNet56/BatchNorm_41/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_41/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/moving_mean"
input: "FC-DenseNet56/BatchNorm_41/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_41/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/moving_variance"
input: "FC-DenseNet56/BatchNorm_41/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_41/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_41/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitionup9/concat"
input: "FC-DenseNet56/denseblock10/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_41/beta/read"
input: "FC-DenseNet56/denseblock10/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock10/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_41/moving_mean/read"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_41/moving_mean"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_41/moving_variance/read"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_41/moving_variance"
input: "FC-DenseNet56/denseblock10/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.057166196405887604
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.057166196405887604
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_41/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_41/weights"
input: "FC-DenseNet56/Conv_41/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_41/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_41/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_41/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_41/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_41/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_41/biases"
input: "FC-DenseNet56/Conv_41/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_41/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_41/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock10/Relu"
input: "FC-DenseNet56/Conv_41/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock10/Conv/Conv2D"
input: "FC-DenseNet56/Conv_41/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock10/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup9/concat"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/beta"
input: "FC-DenseNet56/BatchNorm_42/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_42/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/moving_mean"
input: "FC-DenseNet56/BatchNorm_42/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_42/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/moving_variance"
input: "FC-DenseNet56/BatchNorm_42/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_42/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_42/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock10/concat"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_42/beta/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_42/moving_mean/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_42/moving_mean"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_42/moving_variance/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_42/moving_variance"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\314\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0555555559694767
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0555555559694767
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 204
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_42/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_42/weights"
input: "FC-DenseNet56/Conv_42/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_42/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_42/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_42/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_42/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_42/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_42/biases"
input: "FC-DenseNet56/Conv_42/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_42/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_42/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock10/Relu_1"
input: "FC-DenseNet56/Conv_42/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock10/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_42/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock10/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock10/concat"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/beta"
input: "FC-DenseNet56/BatchNorm_43/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_43/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/moving_mean"
input: "FC-DenseNet56/BatchNorm_43/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_43/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/moving_variance"
input: "FC-DenseNet56/BatchNorm_43/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_43/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_43/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock10/concat_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_43/beta/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_43/moving_mean/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_43/moving_mean"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_43/moving_variance/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_43/moving_variance"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05407380685210228
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05407380685210228
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 216
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_43/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_43/weights"
input: "FC-DenseNet56/Conv_43/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_43/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_43/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_43/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_43/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_43/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_43/biases"
input: "FC-DenseNet56/Conv_43/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_43/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_43/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock10/Relu_2"
input: "FC-DenseNet56/Conv_43/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock10/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_43/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock10/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock10/concat_1"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/beta"
input: "FC-DenseNet56/BatchNorm_44/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_44/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/moving_mean"
input: "FC-DenseNet56/BatchNorm_44/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_44/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/moving_variance"
input: "FC-DenseNet56/BatchNorm_44/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_44/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_44/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock10/concat_2"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_44/beta/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_44/moving_mean/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_44/moving_mean"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_44/moving_variance/read"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_44/moving_variance"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\344\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.05270462855696678
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.05270462855696678
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 228
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_44/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_44/weights"
input: "FC-DenseNet56/Conv_44/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_44/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_44/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_44/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_44/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_44/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_44/biases"
input: "FC-DenseNet56/Conv_44/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_44/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_44/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock10/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock10/Relu_3"
input: "FC-DenseNet56/Conv_44/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock10/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock10/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_44/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock10/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock10/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock10/concat_2"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock10/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock10/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0833333358168602
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/weights"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_4/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/biases"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_4/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice/stack"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice/stack_1"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1/stack"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1/stack_1"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/Shape"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2/stack"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2/stack_1"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul"
op: "Mul"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_1"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul_1"
op: "Mul"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_2"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/stack/3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 48
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/stack"
op: "Pack"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/mul_1"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/stack/3"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_3/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_3/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_3/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_3"
op: "StridedSlice"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/stack"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_3/stack"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_3/stack_1"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/strided_slice_3/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose"
op: "Conv2DBackpropInput"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/stack"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/read"
input: "FC-DenseNet56/denseblock10/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/transitionup10/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/transitionup10/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock1/concat_3"
input: "FC-DenseNet56/transitionup10/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/beta"
input: "FC-DenseNet56/BatchNorm_45/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_45/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/moving_mean"
input: "FC-DenseNet56/BatchNorm_45/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_45/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/moving_variance"
input: "FC-DenseNet56/BatchNorm_45/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_45/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_45/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/transitionup10/concat"
input: "FC-DenseNet56/denseblock11/BatchNorm/Const"
input: "FC-DenseNet56/BatchNorm_45/beta/read"
input: "FC-DenseNet56/denseblock11/BatchNorm/Const_1"
input: "FC-DenseNet56/denseblock11/BatchNorm/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_45/moving_mean/read"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_45/moving_mean"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_45/moving_variance/read"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_45/moving_variance"
input: "FC-DenseNet56/denseblock11/BatchNorm/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Relu"
op: "Relu"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0653720423579216
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0653720423579216
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_45/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_45/weights"
input: "FC-DenseNet56/Conv_45/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_45/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_45/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_45/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_45/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_45/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_45/biases"
input: "FC-DenseNet56/Conv_45/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_45/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_45/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock11/Relu"
input: "FC-DenseNet56/Conv_45/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/Conv/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock11/Conv/Conv2D"
input: "FC-DenseNet56/Conv_45/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/sub/x"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/truediv/x"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/random_uniform"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv/BiasAdd"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Dropout/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/mul"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock11/concat"
op: "ConcatV2"
input: "FC-DenseNet56/transitionup10/concat"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/beta"
input: "FC-DenseNet56/BatchNorm_46/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_46/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/moving_mean"
input: "FC-DenseNet56/BatchNorm_46/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_46/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/moving_variance"
input: "FC-DenseNet56/BatchNorm_46/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_46/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_46/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock11/concat"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/Const"
input: "FC-DenseNet56/BatchNorm_46/beta/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/Const_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_46/moving_mean/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_46/moving_mean"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_46/moving_variance/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_46/moving_variance"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Relu_1"
op: "Relu"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\234\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0629940778017044
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0629940778017044
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 156
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_46/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_46/weights"
input: "FC-DenseNet56/Conv_46/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_46/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_46/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_46/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_46/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_46/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_46/biases"
input: "FC-DenseNet56/Conv_46/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_46/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_46/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv_1/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv_1/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock11/Relu_1"
input: "FC-DenseNet56/Conv_46/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/Conv_1/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock11/Conv_1/Conv2D"
input: "FC-DenseNet56/Conv_46/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/sub/x"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/truediv/x"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/random_uniform"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv_1/BiasAdd"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock11/concat_1"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock11/concat"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/beta"
input: "FC-DenseNet56/BatchNorm_47/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_47/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/moving_mean"
input: "FC-DenseNet56/BatchNorm_47/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_47/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/moving_variance"
input: "FC-DenseNet56/BatchNorm_47/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_47/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_47/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock11/concat_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/Const"
input: "FC-DenseNet56/BatchNorm_47/beta/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/Const_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_47/moving_mean/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_47/moving_mean"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_47/moving_variance/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_47/moving_variance"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Relu_2"
op: "Relu"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\250\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.06085806339979172
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.06085806339979172
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 168
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_47/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_47/weights"
input: "FC-DenseNet56/Conv_47/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_47/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_47/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_47/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_47/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_47/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_47/biases"
input: "FC-DenseNet56/Conv_47/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_47/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_47/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv_2/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv_2/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock11/Relu_2"
input: "FC-DenseNet56/Conv_47/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/Conv_2/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock11/Conv_2/Conv2D"
input: "FC-DenseNet56/Conv_47/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/sub/x"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/truediv/x"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/random_uniform"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv_2/BiasAdd"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock11/concat_2"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock11/concat_1"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/beta"
input: "FC-DenseNet56/BatchNorm_48/beta/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_48/beta"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_mean/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_mean"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_mean/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/moving_mean"
input: "FC-DenseNet56/BatchNorm_48/moving_mean/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_mean/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_48/moving_mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_variance/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_variance"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_variance/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/moving_variance"
input: "FC-DenseNet56/BatchNorm_48/moving_variance/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_48/moving_variance/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_48/moving_variance"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3"
op: "FusedBatchNormV3"
input: "FC-DenseNet56/denseblock11/concat_2"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/Const"
input: "FC-DenseNet56/BatchNorm_48/beta/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/Const_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_48/moving_mean/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_48/moving_mean"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/sub/x"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/sub/x"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/sub_1"
op: "Sub"
input: "FC-DenseNet56/BatchNorm_48/moving_variance/read"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/sub_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}

name: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1"
op: "AssignSub"
input: "FC-DenseNet56/BatchNorm_48/moving_variance"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/AssignMovingAvg_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Relu_3"
op: "Relu"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\264\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.0589255653321743
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0589255653321743
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 180
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_48/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_48/weights"
input: "FC-DenseNet56/Conv_48/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_48/weights/read"
op: "Identity"
input: "FC-DenseNet56/Conv_48/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_48/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_48/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_48/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_48/biases"
input: "FC-DenseNet56/Conv_48/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_48/biases/read"
op: "Identity"
input: "FC-DenseNet56/Conv_48/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv_3/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/denseblock11/Conv_3/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock11/Relu_3"
input: "FC-DenseNet56/Conv_48/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/denseblock11/Conv_3/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/denseblock11/Conv_3/Conv2D"
input: "FC-DenseNet56/Conv_48/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/min"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/max"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/max"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/RandomUniform"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform"
op: "Add"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/mul"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/sub/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/sub"
op: "Sub"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/sub/x"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/truediv/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/truediv"
op: "RealDiv"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/truediv/x"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/GreaterEqual"
op: "GreaterEqual"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/random_uniform"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/rate"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv_3/BiasAdd"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/Cast"
op: "Cast"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/GreaterEqual"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "FC-DenseNet56/denseblock11/concat_3/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock11/concat_3"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock11/concat_2"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/concat_3/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/denseblock11/concat_4/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "FC-DenseNet56/denseblock11/concat_4"
op: "ConcatV2"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1"
input: "FC-DenseNet56/denseblock11/concat_4/axis"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/logits/weights/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}

name: "FC-DenseNet56/logits/weights/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.16366341710090637
    }
  }
}

name: "FC-DenseNet56/logits/weights/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.16366341710090637
    }
  }
}

name: "FC-DenseNet56/logits/weights/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 0
  }
}
attr {
  key: "seed2"
  value {
    i: 0
  }
}

name: "FC-DenseNet56/logits/weights/Initializer/random_uniform/sub"
op: "Sub"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform/max"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}

name: "FC-DenseNet56/logits/weights/Initializer/random_uniform/mul"
op: "Mul"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform/RandomUniform"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}

name: "FC-DenseNet56/logits/weights/Initializer/random_uniform"
op: "Add"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform/mul"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}

name: "FC-DenseNet56/logits/weights"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/logits/weights/Assign"
op: "Assign"
input: "FC-DenseNet56/logits/weights"
input: "FC-DenseNet56/logits/weights/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/logits/weights/read"
op: "Identity"
input: "FC-DenseNet56/logits/weights"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}

name: "FC-DenseNet56/logits/biases/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/logits/biases"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/logits/biases/Assign"
op: "Assign"
input: "FC-DenseNet56/logits/biases"
input: "FC-DenseNet56/logits/biases/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/logits/biases/read"
op: "Identity"
input: "FC-DenseNet56/logits/biases"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}

name: "FC-DenseNet56/logits/dilation_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000"
    }
  }
}

name: "FC-DenseNet56/logits/Conv2D"
op: "Conv2D"
input: "FC-DenseNet56/denseblock11/concat_3"
input: "FC-DenseNet56/logits/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "FC-DenseNet56/logits/BiasAdd"
op: "BiasAdd"
input: "FC-DenseNet56/logits/Conv2D"
input: "FC-DenseNet56/logits/biases/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
op: "StopGradient"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "softmax_cross_entropy_with_logits_sg/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Shape"
op: "Shape"
input: "FC-DenseNet56/logits/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Shape_1"
op: "Shape"
input: "FC-DenseNet56/logits/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Sub"
op: "Sub"
input: "softmax_cross_entropy_with_logits_sg/Rank_1"
input: "softmax_cross_entropy_with_logits_sg/Sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice/begin"
op: "Pack"
input: "softmax_cross_entropy_with_logits_sg/Sub"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice/size"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice"
op: "Slice"
input: "softmax_cross_entropy_with_logits_sg/Shape_1"
input: "softmax_cross_entropy_with_logits_sg/Slice/begin"
input: "softmax_cross_entropy_with_logits_sg/Slice/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/concat"
op: "ConcatV2"
input: "softmax_cross_entropy_with_logits_sg/concat/values_0"
input: "softmax_cross_entropy_with_logits_sg/Slice"
input: "softmax_cross_entropy_with_logits_sg/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Reshape"
op: "Reshape"
input: "FC-DenseNet56/logits/BiasAdd"
input: "softmax_cross_entropy_with_logits_sg/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Rank_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Shape_2"
op: "Shape"
input: "softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Sub_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Sub_1"
op: "Sub"
input: "softmax_cross_entropy_with_logits_sg/Rank_2"
input: "softmax_cross_entropy_with_logits_sg/Sub_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice_1/begin"
op: "Pack"
input: "softmax_cross_entropy_with_logits_sg/Sub_1"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice_1/size"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice_1"
op: "Slice"
input: "softmax_cross_entropy_with_logits_sg/Shape_2"
input: "softmax_cross_entropy_with_logits_sg/Slice_1/begin"
input: "softmax_cross_entropy_with_logits_sg/Slice_1/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/concat_1/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/concat_1"
op: "ConcatV2"
input: "softmax_cross_entropy_with_logits_sg/concat_1/values_0"
input: "softmax_cross_entropy_with_logits_sg/Slice_1"
input: "softmax_cross_entropy_with_logits_sg/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Reshape_1"
op: "Reshape"
input: "softmax_cross_entropy_with_logits_sg/labels_stop_gradient"
input: "softmax_cross_entropy_with_logits_sg/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg"
op: "SoftmaxCrossEntropyWithLogits"
input: "softmax_cross_entropy_with_logits_sg/Reshape"
input: "softmax_cross_entropy_with_logits_sg/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "softmax_cross_entropy_with_logits_sg/Sub_2/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Sub_2"
op: "Sub"
input: "softmax_cross_entropy_with_logits_sg/Rank"
input: "softmax_cross_entropy_with_logits_sg/Sub_2/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice_2/begin"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice_2/size"
op: "Pack"
input: "softmax_cross_entropy_with_logits_sg/Sub_2"
attr {
  key: "N"
  value {
    i: 1
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}

name: "softmax_cross_entropy_with_logits_sg/Slice_2"
op: "Slice"
input: "softmax_cross_entropy_with_logits_sg/Shape"
input: "softmax_cross_entropy_with_logits_sg/Slice_2/begin"
input: "softmax_cross_entropy_with_logits_sg/Slice_2/size"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "softmax_cross_entropy_with_logits_sg/Reshape_2"
op: "Reshape"
input: "softmax_cross_entropy_with_logits_sg"
input: "softmax_cross_entropy_with_logits_sg/Slice_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
    }
  }
}

name: "Mean"
op: "Mean"
input: "softmax_cross_entropy_with_logits_sg/Reshape_2"
input: "Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "gradients/grad_ys_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "gradients/Fill"
op: "Fill"
input: "gradients/Shape"
input: "gradients/grad_ys_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/Mean_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}

name: "gradients/Mean_grad/Reshape"
op: "Reshape"
input: "gradients/Fill"
input: "gradients/Mean_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/Mean_grad/Shape"
op: "Shape"
input: "softmax_cross_entropy_with_logits_sg/Reshape_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/Mean_grad/Tile"
op: "Tile"
input: "gradients/Mean_grad/Reshape"
input: "gradients/Mean_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}

name: "gradients/Mean_grad/Shape_1"
op: "Shape"
input: "softmax_cross_entropy_with_logits_sg/Reshape_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/Mean_grad/Shape_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}

name: "gradients/Mean_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "gradients/Mean_grad/Prod"
op: "Prod"
input: "gradients/Mean_grad/Shape_1"
input: "gradients/Mean_grad/Const"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/Mean_grad/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}

name: "gradients/Mean_grad/Prod_1"
op: "Prod"
input: "gradients/Mean_grad/Shape_2"
input: "gradients/Mean_grad/Const_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/Mean_grad/Maximum/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}

name: "gradients/Mean_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_grad/Prod_1"
input: "gradients/Mean_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/Mean_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_grad/Prod"
input: "gradients/Mean_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/Mean_grad/Cast"
op: "Cast"
input: "gradients/Mean_grad/floordiv"
attr {
  key: "DstT"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "SrcT"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Truncate"
  value {
    b: false
  }
}

name: "gradients/Mean_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_grad/Tile"
input: "gradients/Mean_grad/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
op: "Shape"
input: "softmax_cross_entropy_with_logits_sg"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/Mean_grad/truediv"
input: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/zeros_like"
op: "ZerosLike"
input: "softmax_cross_entropy_with_logits_sg:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/mul"
op: "Mul"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims"
input: "softmax_cross_entropy_with_logits_sg:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
op: "LogSoftmax"
input: "softmax_cross_entropy_with_logits_sg/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/Neg"
op: "Neg"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/LogSoftmax"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_2_grad/Reshape"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/mul_1"
op: "Mul"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/ExpandDims_1"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/Neg"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/softmax_cross_entropy_with_logits_sg_grad/mul"
input: "^gradients/softmax_cross_entropy_with_logits_sg_grad/mul_1"

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/mul"
input: "^gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/softmax_cross_entropy_with_logits_sg_grad/mul"
    }
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/mul_1"
input: "^gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/softmax_cross_entropy_with_logits_sg_grad/mul_1"
    }
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/logits/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/softmax_cross_entropy_with_logits_sg_grad/tuple/control_dependency"
input: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/logits/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/logits/BiasAdd_grad/BiasAddGrad"
input: "^gradients/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"

name: "gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
input: "^gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/softmax_cross_entropy_with_logits_sg/Reshape_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/logits/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/logits/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/logits/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/concat_3"
input: "FC-DenseNet56/logits/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/logits/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/logits/weights/read"
input: "gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock11/concat_3"
input: "gradients/FC-DenseNet56/logits/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/logits/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock11/concat_3/axis"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/concat_2"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/mod"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/Relu_3"
input: "FC-DenseNet56/Conv_48/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_48/weights/read"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock11/Relu_3"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_1"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_2"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_3"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_4"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_5"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock11/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock11/concat_2"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock11/concat_3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock11/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/concat_1"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice"
op: "Slice"
input: "gradients/AddN"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/AddN"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/Relu_2"
input: "FC-DenseNet56/Conv_47/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_47/weights/read"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock11/Relu_2"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_6"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_7"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_8"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_9"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_10"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock11/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock11/concat_1"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_1"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock11/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock11/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/concat"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_1"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_1"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/Relu_1"
input: "FC-DenseNet56/Conv_46/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_46/weights/read"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock11/Relu_1"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_11"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_12"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_13"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_14"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_15"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock11/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock11/concat"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_2"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock11/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock11/concat/axis"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup10/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup10/concat"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_2"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_2"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock11/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock11/Relu"
input: "FC-DenseNet56/Conv_45/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_45/weights/read"
input: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock11/Relu"
input: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock11/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_16"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_17"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_18"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_19"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_20"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock11/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitionup10/concat"
input: "FC-DenseNet56/denseblock11/BatchNorm/Const"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_3"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock11/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock11/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/transitionup10/concat/axis"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock1/concat_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/mod"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_3"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_3"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup10/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup10/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup10/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup10/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup10/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Shape"
input: "FC-DenseNet56/denseblock10/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
op: "Conv2D"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock10/concat_4/axis"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/mod"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN:2"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN:3"
attr {
  key: "N"
  value {
    i: 4
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_2"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ConcatOffset:2"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN:2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_3"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ConcatOffset:3"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/ShapeN:3"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_3"

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_3"
input: "^gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency_3"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock10/Relu_3"
input: "FC-DenseNet56/Conv_44/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_44/weights/read"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock10/Relu_3"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_21"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_22"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_23"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_24"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_25"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock10/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock10/concat_2"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock10/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock10/concat_1"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock10/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_4"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency_2"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_4"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/mul"
input: "gradients/AddN_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock10/Relu_2"
input: "FC-DenseNet56/Conv_43/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_43/weights/read"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock10/Relu_2"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_26"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_27"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_28"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_29"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_30"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock10/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock10/concat_1"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_5"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock10/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock10/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock10/concat"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_5"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_5"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock10/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_6"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_6"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/mul"
input: "gradients/AddN_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock10/Relu_1"
input: "FC-DenseNet56/Conv_42/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_42/weights/read"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock10/Relu_1"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_31"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_32"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_33"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_34"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_35"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock10/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock10/concat"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_7"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock10/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock10/concat/axis"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup9/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup9/concat"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_7"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_7"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock10/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock10/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_8"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock10/concat_4_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_8"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/mul"
input: "gradients/AddN_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock10/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock10/Relu"
input: "FC-DenseNet56/Conv_41/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_41/weights/read"
input: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock10/Relu"
input: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock10/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_36"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_37"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_38"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_39"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_40"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock10/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitionup9/concat"
input: "FC-DenseNet56/denseblock10/BatchNorm/Const"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_9"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock10/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock10/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/transitionup9/concat/axis"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock2/concat_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/mod"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_9"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_9"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup9/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup9/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup9/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup9/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup9/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Shape"
input: "FC-DenseNet56/denseblock9/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
op: "Conv2D"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock9/concat_4/axis"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/mod"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN:2"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN:3"
attr {
  key: "N"
  value {
    i: 4
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_2"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ConcatOffset:2"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN:2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_3"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ConcatOffset:3"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/ShapeN:3"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_3"

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_3"
input: "^gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency_3"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock9/Relu_3"
input: "FC-DenseNet56/Conv_40/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_40/weights/read"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock9/Relu_3"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_41"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_42"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_43"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_44"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_45"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock9/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock9/concat_2"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock9/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock9/concat_1"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock9/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_10"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency_2"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_10"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/mul"
input: "gradients/AddN_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock9/Relu_2"
input: "FC-DenseNet56/Conv_39/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_39/weights/read"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock9/Relu_2"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_46"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_47"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_48"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_49"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_50"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock9/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock9/concat_1"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_11"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock9/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock9/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock9/concat"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_11"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_11"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock9/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_12"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_12"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/mul"
input: "gradients/AddN_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock9/Relu_1"
input: "FC-DenseNet56/Conv_38/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_38/weights/read"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock9/Relu_1"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_51"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_52"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_53"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_54"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_55"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock9/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock9/concat"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_13"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock9/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock9/concat/axis"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup8/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup8/concat"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_13"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_13"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock9/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock9/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_14"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock9/concat_4_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_14"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/mul"
input: "gradients/AddN_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock9/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock9/Relu"
input: "FC-DenseNet56/Conv_37/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_37/weights/read"
input: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock9/Relu"
input: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock9/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_56"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_57"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_58"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_59"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_60"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock9/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitionup8/concat"
input: "FC-DenseNet56/denseblock9/BatchNorm/Const"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_15"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock9/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock9/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/transitionup8/concat/axis"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock3/concat_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/mod"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_15"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_15"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup8/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup8/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup8/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup8/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup8/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Shape"
input: "FC-DenseNet56/denseblock8/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
op: "Conv2D"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock8/concat_4/axis"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/mod"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN:2"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN:3"
attr {
  key: "N"
  value {
    i: 4
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_2"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ConcatOffset:2"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN:2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_3"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ConcatOffset:3"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/ShapeN:3"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_3"

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_3"
input: "^gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency_3"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock8/Relu_3"
input: "FC-DenseNet56/Conv_36/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_36/weights/read"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock8/Relu_3"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_61"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_62"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_63"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_64"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_65"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock8/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock8/concat_2"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock8/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock8/concat_1"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock8/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_16"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency_2"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_16"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/mul"
input: "gradients/AddN_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock8/Relu_2"
input: "FC-DenseNet56/Conv_35/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_35/weights/read"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock8/Relu_2"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_66"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_67"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_68"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_69"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_70"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock8/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock8/concat_1"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_17"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock8/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock8/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock8/concat"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_17"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_17"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock8/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_18"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_18"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/mul"
input: "gradients/AddN_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock8/Relu_1"
input: "FC-DenseNet56/Conv_34/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_34/weights/read"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock8/Relu_1"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_71"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_72"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_73"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_74"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_75"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock8/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock8/concat"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_19"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock8/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock8/concat/axis"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup7/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup7/concat"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_19"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_19"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock8/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock8/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_20"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock8/concat_4_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_20"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/mul"
input: "gradients/AddN_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock8/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock8/Relu"
input: "FC-DenseNet56/Conv_33/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_33/weights/read"
input: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock8/Relu"
input: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock8/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_76"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_77"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_78"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_79"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_80"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock8/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitionup7/concat"
input: "FC-DenseNet56/denseblock8/BatchNorm/Const"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_21"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock8/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock8/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/transitionup7/concat/axis"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock4/concat_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/mod"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_21"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_21"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup7/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup7/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup7/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup7/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup7/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Shape"
input: "FC-DenseNet56/denseblock7/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
op: "Conv2D"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/Conv2D"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock7/concat_4/axis"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/mod"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN:2"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN:3"
attr {
  key: "N"
  value {
    i: 4
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_2"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ConcatOffset:2"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN:2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_3"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ConcatOffset:3"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/ShapeN:3"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_3"

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_3"
input: "^gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency_3"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock7/Relu_3"
input: "FC-DenseNet56/Conv_32/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_32/weights/read"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock7/Relu_3"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_81"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_82"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_83"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_84"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_85"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock7/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock7/concat_2"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock7/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock7/concat_1"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock7/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_22"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency_2"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_22"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/mul"
input: "gradients/AddN_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock7/Relu_2"
input: "FC-DenseNet56/Conv_31/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_31/weights/read"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock7/Relu_2"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_86"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_87"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_88"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_89"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_90"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock7/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock7/concat_1"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_23"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock7/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock7/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock7/concat"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_23"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_23"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock7/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_24"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_24"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/mul"
input: "gradients/AddN_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock7/Relu_1"
input: "FC-DenseNet56/Conv_30/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_30/weights/read"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock7/Relu_1"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_91"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_92"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_93"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_94"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_95"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock7/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock7/concat"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_25"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock7/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock7/concat/axis"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup6/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup6/concat"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_25"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_25"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock7/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock7/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_26"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock7/concat_4_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_26"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/mul"
input: "gradients/AddN_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock7/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock7/Relu"
input: "FC-DenseNet56/Conv_29/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_29/weights/read"
input: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock7/Relu"
input: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock7/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_96"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_97"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_98"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_99"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_100"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock7/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitionup6/concat"
input: "FC-DenseNet56/denseblock7/BatchNorm/Const"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_27"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock7/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock7/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/transitionup6/concat/axis"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd"
input: "FC-DenseNet56/denseblock5/concat_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/mod"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_27"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_27"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup6/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup6/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup6/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup6/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup6/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Shape"
input: "FC-DenseNet56/denseblock6/concat_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2D"
op: "Conv2D"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency"
input: "FC-DenseNet56/Conv2d_transpose/weights/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2DBackpropFilter"

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2D"
input: "^gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/Conv2D"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock6/concat_4/axis"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 4
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/mod"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN:2"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN:3"
attr {
  key: "N"
  value {
    i: 4
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_2"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ConcatOffset:2"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN:2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_3"
op: "Slice"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ConcatOffset:3"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/ShapeN:3"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_3"

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_2"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_3"
input: "^gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency_3"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock6/Relu_3"
input: "FC-DenseNet56/Conv_28/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_28/weights/read"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock6/Relu_3"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_101"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_102"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_103"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_104"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_105"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock6/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock6/concat_2"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock6/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock6/concat_1"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock6/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_28"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency_2"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_2"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_28"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/mul"
input: "gradients/AddN_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock6/Relu_2"
input: "FC-DenseNet56/Conv_27/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_27/weights/read"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock6/Relu_2"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_106"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_107"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_108"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_109"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_110"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock6/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock6/concat_1"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_29"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock6/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock6/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock6/concat"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_29"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_29"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock6/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_30"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_30"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/mul"
input: "gradients/AddN_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock6/Relu_1"
input: "FC-DenseNet56/Conv_26/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_26/weights/read"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock6/Relu_1"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_111"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_112"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_113"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_114"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_115"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock6/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock6/concat"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_31"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock6/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock6/concat/axis"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown5/max_pool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown5/max_pool"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_31"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_31"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock6/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock6/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_grad/Slice_1"
    }
  }
}

name: "gradients/AddN_32"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock6/concat_4_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_4_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/AddN_32"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/mul"
input: "gradients/AddN_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock6/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock6/Relu"
input: "FC-DenseNet56/Conv_25/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_25/weights/read"
input: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock6/Relu"
input: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock6/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_116"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_117"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_118"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_119"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_120"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock6/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitiondown5/max_pool"
input: "FC-DenseNet56/denseblock6/BatchNorm/Const"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_33"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock6/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock6/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/max_pool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1"
input: "FC-DenseNet56/transitiondown5/max_pool"
input: "gradients/AddN_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown5/max_pool_grad/MaxPoolGrad"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/transitiondown5/max_pool_grad/MaxPoolGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown5/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown5/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown5/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown5/Relu"
input: "FC-DenseNet56/Conv_24/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_24/weights/read"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/transitiondown5/Relu"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown5/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_121"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_122"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_123"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_124"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_125"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/transitiondown5/Relu_grad/ReluGrad"
input: "FC-DenseNet56/denseblock5/concat_3"
input: "FC-DenseNet56/transitiondown5/BatchNorm/Const"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_34"
op: "AddN"
input: "gradients/FC-DenseNet56/transitionup6/concat_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup6/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock5/concat_3/axis"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock5/concat_2"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/mod"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice"
op: "Slice"
input: "gradients/AddN_34"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_34"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock5/Relu_3"
input: "FC-DenseNet56/Conv_23/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_23/weights/read"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock5/Relu_3"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_126"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_127"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_128"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_129"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_130"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock5/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock5/concat_2"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_35"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock5/concat_3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock5/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock5/concat_1"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice"
op: "Slice"
input: "gradients/AddN_35"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_35"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock5/Relu_2"
input: "FC-DenseNet56/Conv_22/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_22/weights/read"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock5/Relu_2"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_131"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_132"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_133"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_134"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_135"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock5/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock5/concat_1"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_36"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock5/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock5/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock5/concat"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_36"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_36"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock5/Relu_1"
input: "FC-DenseNet56/Conv_21/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_21/weights/read"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock5/Relu_1"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_136"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_137"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_138"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_139"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_140"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock5/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock5/concat"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_37"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock5/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock5/concat/axis"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown4/max_pool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown4/max_pool"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_37"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_37"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock5/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock5/Relu"
input: "FC-DenseNet56/Conv_20/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_20/weights/read"
input: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock5/Relu"
input: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock5/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_141"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_142"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_143"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_144"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_145"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock5/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitiondown4/max_pool"
input: "FC-DenseNet56/denseblock5/BatchNorm/Const"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_38"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock5/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock5/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/max_pool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1"
input: "FC-DenseNet56/transitiondown4/max_pool"
input: "gradients/AddN_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown4/max_pool_grad/MaxPoolGrad"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/transitiondown4/max_pool_grad/MaxPoolGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown4/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown4/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown4/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown4/Relu"
input: "FC-DenseNet56/Conv_19/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_19/weights/read"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/transitiondown4/Relu"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown4/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_146"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_147"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_148"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_149"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_150"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/transitiondown4/Relu_grad/ReluGrad"
input: "FC-DenseNet56/denseblock4/concat_3"
input: "FC-DenseNet56/transitiondown4/BatchNorm/Const"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_39"
op: "AddN"
input: "gradients/FC-DenseNet56/transitionup7/concat_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup7/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock4/concat_3/axis"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock4/concat_2"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/mod"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice"
op: "Slice"
input: "gradients/AddN_39"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_39"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock4/Relu_3"
input: "FC-DenseNet56/Conv_18/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_18/weights/read"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock4/Relu_3"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_151"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_152"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_153"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_154"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_155"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock4/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock4/concat_2"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_40"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock4/concat_3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock4/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock4/concat_1"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice"
op: "Slice"
input: "gradients/AddN_40"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_40"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock4/Relu_2"
input: "FC-DenseNet56/Conv_17/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_17/weights/read"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock4/Relu_2"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_156"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_157"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_158"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_159"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_160"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock4/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock4/concat_1"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_41"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock4/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock4/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock4/concat"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_41"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_41"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock4/Relu_1"
input: "FC-DenseNet56/Conv_16/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_16/weights/read"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock4/Relu_1"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_161"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_162"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_163"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_164"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_165"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock4/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock4/concat"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_42"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock4/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock4/concat/axis"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown3/max_pool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown3/max_pool"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_42"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_42"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock4/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock4/Relu"
input: "FC-DenseNet56/Conv_15/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_15/weights/read"
input: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock4/Relu"
input: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock4/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_166"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_167"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_168"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_169"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_170"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock4/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitiondown3/max_pool"
input: "FC-DenseNet56/denseblock4/BatchNorm/Const"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_43"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock4/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock4/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/max_pool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1"
input: "FC-DenseNet56/transitiondown3/max_pool"
input: "gradients/AddN_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown3/max_pool_grad/MaxPoolGrad"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/transitiondown3/max_pool_grad/MaxPoolGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown3/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown3/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown3/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown3/Relu"
input: "FC-DenseNet56/Conv_14/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_14/weights/read"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/transitiondown3/Relu"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown3/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_171"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_172"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_173"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_174"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_175"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/transitiondown3/Relu_grad/ReluGrad"
input: "FC-DenseNet56/denseblock3/concat_3"
input: "FC-DenseNet56/transitiondown3/BatchNorm/Const"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_44"
op: "AddN"
input: "gradients/FC-DenseNet56/transitionup8/concat_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup8/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock3/concat_3/axis"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock3/concat_2"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/mod"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice"
op: "Slice"
input: "gradients/AddN_44"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_44"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock3/Relu_3"
input: "FC-DenseNet56/Conv_13/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_13/weights/read"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock3/Relu_3"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_176"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_177"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_178"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_179"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_180"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock3/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock3/concat_2"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_45"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock3/concat_3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock3/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock3/concat_1"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice"
op: "Slice"
input: "gradients/AddN_45"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_45"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock3/Relu_2"
input: "FC-DenseNet56/Conv_12/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_12/weights/read"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock3/Relu_2"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_181"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_182"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_183"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_184"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_185"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock3/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock3/concat_1"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_46"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock3/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock3/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock3/concat"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_46"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_46"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock3/Relu_1"
input: "FC-DenseNet56/Conv_11/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_11/weights/read"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock3/Relu_1"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_186"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_187"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_188"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_189"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_190"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock3/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock3/concat"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_47"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock3/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock3/concat/axis"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown2/max_pool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown2/max_pool"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_47"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_47"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock3/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock3/Relu"
input: "FC-DenseNet56/Conv_10/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_10/weights/read"
input: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock3/Relu"
input: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock3/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_191"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_192"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_193"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_194"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_195"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock3/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitiondown2/max_pool"
input: "FC-DenseNet56/denseblock3/BatchNorm/Const"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_48"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock3/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock3/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/max_pool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1"
input: "FC-DenseNet56/transitiondown2/max_pool"
input: "gradients/AddN_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown2/max_pool_grad/MaxPoolGrad"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/transitiondown2/max_pool_grad/MaxPoolGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown2/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown2/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown2/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown2/Relu"
input: "FC-DenseNet56/Conv_9/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_9/weights/read"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/transitiondown2/Relu"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_196"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_197"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_198"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_199"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_200"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/transitiondown2/Relu_grad/ReluGrad"
input: "FC-DenseNet56/denseblock2/concat_3"
input: "FC-DenseNet56/transitiondown2/BatchNorm/Const"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_49"
op: "AddN"
input: "gradients/FC-DenseNet56/transitionup9/concat_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup9/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock2/concat_3/axis"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock2/concat_2"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/mod"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice"
op: "Slice"
input: "gradients/AddN_49"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_49"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock2/Relu_3"
input: "FC-DenseNet56/Conv_8/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_8/weights/read"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock2/Relu_3"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_201"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_202"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_203"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_204"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_205"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock2/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock2/concat_2"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_50"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock2/concat_3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock2/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock2/concat_1"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice"
op: "Slice"
input: "gradients/AddN_50"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_50"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock2/Relu_2"
input: "FC-DenseNet56/Conv_7/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_7/weights/read"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock2/Relu_2"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_206"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_207"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_208"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_209"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_210"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock2/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock2/concat_1"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_51"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock2/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock2/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock2/concat"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_51"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_51"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock2/Relu_1"
input: "FC-DenseNet56/Conv_6/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_6/weights/read"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock2/Relu_1"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_211"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_212"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_213"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_214"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_215"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock2/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock2/concat"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_52"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock2/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock2/concat/axis"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown1/max_pool"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown1/max_pool"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_52"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_52"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock2/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock2/Relu"
input: "FC-DenseNet56/Conv_5/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_5/weights/read"
input: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock2/Relu"
input: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock2/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_216"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_217"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_218"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_219"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_220"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock2/Relu_grad/ReluGrad"
input: "FC-DenseNet56/transitiondown1/max_pool"
input: "FC-DenseNet56/denseblock2/BatchNorm/Const"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_53"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock2/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock2/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/max_pool_grad/MaxPoolGrad"
op: "MaxPoolGrad"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1"
input: "FC-DenseNet56/transitiondown1/max_pool"
input: "gradients/AddN_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "ksize"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}
attr {
  key: "padding"
  value {
    s: "VALID"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 2
      i: 2
      i: 1
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown1/max_pool_grad/MaxPoolGrad"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/mul"
input: "gradients/FC-DenseNet56/transitiondown1/max_pool_grad/MaxPoolGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/transitiondown1/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown1/Dropout/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/transitiondown1/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Dropout/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/transitiondown1/Relu"
input: "FC-DenseNet56/Conv_4/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_4/weights/read"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/transitiondown1/Relu"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/transitiondown1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_221"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_222"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_223"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_224"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_225"
op: "ZerosLike"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/transitiondown1/Relu_grad/ReluGrad"
input: "FC-DenseNet56/denseblock1/concat_3"
input: "FC-DenseNet56/transitiondown1/BatchNorm/Const"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_54"
op: "AddN"
input: "gradients/FC-DenseNet56/transitionup10/concat_grad/tuple/control_dependency_1"
input: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/transitionup10/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock1/concat_3/axis"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock1/concat_2"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/mod"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice"
op: "Slice"
input: "gradients/AddN_54"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_54"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv_3/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Dropout_3/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv_3/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_3/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock1/Relu_3"
input: "FC-DenseNet56/Conv_3/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_3/weights/read"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock1/Relu_3"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Relu_3_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Relu_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_226"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_227"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_228"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_229"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_230"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock1/Relu_3_grad/ReluGrad"
input: "FC-DenseNet56/denseblock1/concat_2"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/Const"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_55"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock1/concat_3_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_3_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock1/concat_2/axis"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/concat_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock1/concat_1"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/mod"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice"
op: "Slice"
input: "gradients/AddN_55"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_55"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv_2/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Dropout_2/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv_2/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_2/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock1/Relu_2"
input: "FC-DenseNet56/Conv_2/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_2/weights/read"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock1/Relu_2"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Relu_2_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Relu_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_231"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_232"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_233"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_234"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_235"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock1/Relu_2_grad/ReluGrad"
input: "FC-DenseNet56/denseblock1/concat_1"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/Const"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_56"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock1/concat_2_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_2_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock1/concat_1/axis"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock1/concat"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/mod"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice"
op: "Slice"
input: "gradients/AddN_56"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_56"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Dropout_1/dropout/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv_1/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout_1/dropout/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock1/Relu_1"
input: "FC-DenseNet56/Conv_1/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv_1/weights/read"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock1/Relu_1"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Relu_1_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Relu_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_236"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_237"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_238"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_239"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_240"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock1/Relu_1_grad/ReluGrad"
input: "FC-DenseNet56/denseblock1/concat"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/Const"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_57"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock1/concat_1_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_1_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/mod"
op: "FloorMod"
input: "FC-DenseNet56/denseblock1/concat/axis"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/first_conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/first_conv/BiasAdd"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/mod"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/ShapeN"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/ShapeN:1"
attr {
  key: "N"
  value {
    i: 2
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/Slice"
op: "Slice"
input: "gradients/AddN_57"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/ConcatOffset"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/ShapeN"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/Slice_1"
op: "Slice"
input: "gradients/AddN_57"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/ConcatOffset:1"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/ShapeN:1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_grad/Slice_1"

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/Slice"
input: "^gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/Slice_1"
input: "^gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_grad/Slice_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/control_dependency_1"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/Cast"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/mul"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Shape"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Conv/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Shape_1"
op: "Shape"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Shape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Mul"
op: "Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Dropout/dropout_1/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Sum"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Mul"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Mul_1"
op: "Mul"
input: "FC-DenseNet56/denseblock1/Conv/BiasAdd"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Sum_1"
op: "Sum"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Mul_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Sum_1"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape_1"

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape_1"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape_1"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/control_dependency"

name: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/tuple/control_dependency"
input: "^gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Dropout/dropout_1/mul_grad/Reshape"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "FC-DenseNet56/denseblock1/Relu"
input: "FC-DenseNet56/Conv/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/Conv/weights/read"
input: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "FC-DenseNet56/denseblock1/Relu"
input: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/Relu_grad/ReluGrad"
op: "ReluGrad"
input: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/tuple/control_dependency"
input: "FC-DenseNet56/denseblock1/Relu"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_241"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_242"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_243"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_244"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/zeros_like_245"
op: "ZerosLike"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
op: "FusedBatchNormGradV3"
input: "gradients/FC-DenseNet56/denseblock1/Relu_grad/ReluGrad"
input: "FC-DenseNet56/first_conv/BiasAdd"
input: "FC-DenseNet56/denseblock1/BatchNorm/Const"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:3"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:4"
input: "FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "U"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "epsilon"
  value {
    f: 0.0010000000474974513
  }
}
attr {
  key: "is_training"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:1"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:2"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:3"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3:4"
input: "^gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/FusedBatchNormGradV3"
    }
  }
}

name: "gradients/AddN_58"
op: "AddN"
input: "gradients/FC-DenseNet56/denseblock1/concat_grad/tuple/control_dependency"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/AddN_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}

name: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/AddN_58"
input: "^gradients/FC-DenseNet56/first_conv/BiasAdd_grad/BiasAddGrad"

name: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/AddN_58"
input: "^gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/denseblock1/concat_grad/Slice"
    }
  }
}

name: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/BiasAddGrad"
input: "^gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/first_conv/BiasAdd_grad/BiasAddGrad"
    }
  }
}

name: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/ShapeN"
op: "ShapeN"
input: "Placeholder"
input: "FC-DenseNet56/first_conv/weights/read"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}

name: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropInput"
op: "Conv2DBackpropInput"
input: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/ShapeN"
input: "FC-DenseNet56/first_conv/weights/read"
input: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropFilter"
op: "Conv2DBackpropFilter"
input: "Placeholder"
input: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/ShapeN:1"
input: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
attr {
  key: "dilations"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "explicit_paddings"
  value {
    list {
    }
  }
}
attr {
  key: "padding"
  value {
    s: "SAME"
  }
}
attr {
  key: "strides"
  value {
    list {
      i: 1
      i: 1
      i: 1
      i: 1
    }
  }
}
attr {
  key: "use_cudnn_on_gpu"
  value {
    b: true
  }
}

name: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropInput"

name: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropInput"
input: "^gradients/FC-DenseNet56/first_conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropInput"
    }
  }
}

name: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropFilter"
input: "^gradients/FC-DenseNet56/first_conv/Conv2D_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/FC-DenseNet56/first_conv/Conv2D_grad/Conv2DBackpropFilter"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/first_conv/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/first_conv/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/first_conv/weights/RMSProp"
input: "FC-DenseNet56/first_conv/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/first_conv/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\003\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/first_conv/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/first_conv/biases/RMSProp"
input: "FC-DenseNet56/first_conv/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/first_conv/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/first_conv/biases/RMSProp_1"
input: "FC-DenseNet56/first_conv/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/first_conv/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/first_conv/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv/weights/RMSProp"
input: "FC-DenseNet56/Conv/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv/weights/RMSProp_1"
input: "FC-DenseNet56/Conv/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv/biases/RMSProp"
input: "FC-DenseNet56/Conv/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv/biases/RMSProp_1"
input: "FC-DenseNet56/Conv/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 60
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 60
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 60
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 60
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000<\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_1/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_1/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 60
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_1/weights/RMSProp"
input: "FC-DenseNet56/Conv_1/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_1/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000<\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 60
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_1/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_1/biases/RMSProp"
input: "FC-DenseNet56/Conv_1/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_1/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_1/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_1/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 72
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 72
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 72
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 72
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000H\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_2/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_2/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 72
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_2/weights/RMSProp"
input: "FC-DenseNet56/Conv_2/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_2/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000H\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 72
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_2/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_2/biases/RMSProp"
input: "FC-DenseNet56/Conv_2/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_2/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_2/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_2/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 84
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 84
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 84
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 84
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000T\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_3/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_3/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 84
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_3/weights/RMSProp"
input: "FC-DenseNet56/Conv_3/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_3/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000T\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 84
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_3/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_3/biases/RMSProp"
input: "FC-DenseNet56/Conv_3/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_3/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_3/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_3/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_4/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_4/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_4/weights/RMSProp"
input: "FC-DenseNet56/Conv_4/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_4/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000`\000\000\000`\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 96
      }
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_4/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_4/biases/RMSProp"
input: "FC-DenseNet56/Conv_4/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_4/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_4/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_4/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 96
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 96
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_5/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_5/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 96
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_5/weights/RMSProp"
input: "FC-DenseNet56/Conv_5/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_5/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000`\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 96
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_5/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_5/biases/RMSProp"
input: "FC-DenseNet56/Conv_5/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_5/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_5/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_5/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 108
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 108
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 108
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 108
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_6/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_6/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 108
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_6/weights/RMSProp"
input: "FC-DenseNet56/Conv_6/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_6/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000l\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 108
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_6/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_6/biases/RMSProp"
input: "FC-DenseNet56/Conv_6/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_6/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_6/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_6/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 120
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 120
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 120
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 120
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000x\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_7/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_7/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 120
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_7/weights/RMSProp"
input: "FC-DenseNet56/Conv_7/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_7/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000x\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 120
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_7/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_7/biases/RMSProp"
input: "FC-DenseNet56/Conv_7/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_7/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_7/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_7/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 132
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 132
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 132
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 132
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\204\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_8/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_8/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 132
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_8/weights/RMSProp"
input: "FC-DenseNet56/Conv_8/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_8/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\204\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 132
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_8/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_8/biases/RMSProp"
input: "FC-DenseNet56/Conv_8/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_8/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_8/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_8/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\220\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_9/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_9/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_9/weights/RMSProp"
input: "FC-DenseNet56/Conv_9/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_9/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\220\000\000\000\220\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 144
      }
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_9/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_9/biases/RMSProp"
input: "FC-DenseNet56/Conv_9/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_9/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_9/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_9/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_10/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_10/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_10/weights/RMSProp"
input: "FC-DenseNet56/Conv_10/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_10/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_10/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_10/biases/RMSProp"
input: "FC-DenseNet56/Conv_10/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_10/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_10/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_10/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\234\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_11/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_11/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 156
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_11/weights/RMSProp"
input: "FC-DenseNet56/Conv_11/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_11/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\234\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 156
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_11/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_11/biases/RMSProp"
input: "FC-DenseNet56/Conv_11/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_11/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_11/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_11/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\250\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_12/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_12/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 168
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_12/weights/RMSProp"
input: "FC-DenseNet56/Conv_12/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_12/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\250\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 168
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_12/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_12/biases/RMSProp"
input: "FC-DenseNet56/Conv_12/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_12/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_12/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_12/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\264\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_13/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_13/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 180
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_13/weights/RMSProp"
input: "FC-DenseNet56/Conv_13/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_13/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\264\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 180
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_13/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_13/biases/RMSProp"
input: "FC-DenseNet56/Conv_13/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_13/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_13/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_13/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_14/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_14/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_14/weights/RMSProp"
input: "FC-DenseNet56/Conv_14/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_14/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000\300\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_14/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_14/biases/RMSProp"
input: "FC-DenseNet56/Conv_14/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_14/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_14/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_14/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_15/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_15/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_15/weights/RMSProp"
input: "FC-DenseNet56/Conv_15/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_15/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_15/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_15/biases/RMSProp"
input: "FC-DenseNet56/Conv_15/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_15/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_15/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_15/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\314\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_16/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_16/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 204
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_16/weights/RMSProp"
input: "FC-DenseNet56/Conv_16/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_16/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\314\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 204
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_16/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_16/biases/RMSProp"
input: "FC-DenseNet56/Conv_16/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_16/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_16/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_16/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_17/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_17/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 216
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_17/weights/RMSProp"
input: "FC-DenseNet56/Conv_17/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_17/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 216
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_17/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_17/biases/RMSProp"
input: "FC-DenseNet56/Conv_17/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_17/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_17/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_17/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\344\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_18/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_18/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 228
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_18/weights/RMSProp"
input: "FC-DenseNet56/Conv_18/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_18/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\344\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 228
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_18/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_18/biases/RMSProp"
input: "FC-DenseNet56/Conv_18/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_18/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_18/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_18/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\360\000\000\000\360\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_19/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_19/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 240
      }
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_19/weights/RMSProp"
input: "FC-DenseNet56/Conv_19/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_19/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\360\000\000\000\360\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 240
      }
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_19/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_19/biases/RMSProp"
input: "FC-DenseNet56/Conv_19/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_19/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_19/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_19/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\360\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_20/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_20/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 240
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_20/weights/RMSProp"
input: "FC-DenseNet56/Conv_20/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_20/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\360\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 240
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_20/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_20/biases/RMSProp"
input: "FC-DenseNet56/Conv_20/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_20/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_20/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_20/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\374\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_21/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_21/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 252
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_21/weights/RMSProp"
input: "FC-DenseNet56/Conv_21/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_21/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\374\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 252
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_21/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_21/biases/RMSProp"
input: "FC-DenseNet56/Conv_21/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_21/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_21/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_21/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\010\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_22/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_22/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 264
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_22/weights/RMSProp"
input: "FC-DenseNet56/Conv_22/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_22/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\010\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 264
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_22/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_22/biases/RMSProp"
input: "FC-DenseNet56/Conv_22/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_22/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_22/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_22/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\024\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_23/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_23/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 276
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_23/weights/RMSProp"
input: "FC-DenseNet56/Conv_23/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_23/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\024\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 276
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_23/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_23/biases/RMSProp"
input: "FC-DenseNet56/Conv_23/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_23/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_23/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_23/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000 \001\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_24/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_24/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 288
      }
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_24/weights/RMSProp"
input: "FC-DenseNet56/Conv_24/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_24/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000 \001\000\000 \001\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 288
      }
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_24/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_24/biases/RMSProp"
input: "FC-DenseNet56/Conv_24/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_24/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_24/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_24/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_25/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_25/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 288
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_25/weights/RMSProp"
input: "FC-DenseNet56/Conv_25/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_25/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 288
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_25/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_25/biases/RMSProp"
input: "FC-DenseNet56/Conv_25/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_25/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_25/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_25/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000,\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_26/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_26/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_26/weights/RMSProp"
input: "FC-DenseNet56/Conv_26/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_26/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000,\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_26/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_26/biases/RMSProp"
input: "FC-DenseNet56/Conv_26/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_26/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_26/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_26/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0008\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_27/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_27/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 312
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_27/weights/RMSProp"
input: "FC-DenseNet56/Conv_27/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_27/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0008\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 312
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_27/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_27/biases/RMSProp"
input: "FC-DenseNet56/Conv_27/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_27/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_27/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_27/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000D\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_28/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_28/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 324
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_28/weights/RMSProp"
input: "FC-DenseNet56/Conv_28/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_28/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000D\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 324
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_28/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_28/biases/RMSProp"
input: "FC-DenseNet56/Conv_28/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_28/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_28/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_28/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 336
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 336
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 336
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 336
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_29/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_29/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 336
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_29/weights/RMSProp"
input: "FC-DenseNet56/Conv_29/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_29/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000P\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 336
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_29/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_29/biases/RMSProp"
input: "FC-DenseNet56/Conv_29/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_29/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_29/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_29/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 348
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 348
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 348
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 348
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\\\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_30/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_30/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 348
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_30/weights/RMSProp"
input: "FC-DenseNet56/Conv_30/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_30/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\\\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 348
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_30/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_30/biases/RMSProp"
input: "FC-DenseNet56/Conv_30/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_30/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_30/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_30/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 360
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 360
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 360
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 360
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000h\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_31/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_31/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 360
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_31/weights/RMSProp"
input: "FC-DenseNet56/Conv_31/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_31/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000h\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 360
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_31/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_31/biases/RMSProp"
input: "FC-DenseNet56/Conv_31/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_31/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_31/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_31/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 372
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 372
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 372
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 372
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000t\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_32/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_32/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 372
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_32/weights/RMSProp"
input: "FC-DenseNet56/Conv_32/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_32/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000t\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 372
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_32/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_32/biases/RMSProp"
input: "FC-DenseNet56/Conv_32/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_32/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_32/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_32/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 288
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 288
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_33/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_33/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 288
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_33/weights/RMSProp"
input: "FC-DenseNet56/Conv_33/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_33/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000 \001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 288
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_33/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_33/biases/RMSProp"
input: "FC-DenseNet56/Conv_33/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_33/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_33/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_33/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 300
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 300
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000,\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_34/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_34/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_34/weights/RMSProp"
input: "FC-DenseNet56/Conv_34/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_34/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000,\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 300
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_34/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_34/biases/RMSProp"
input: "FC-DenseNet56/Conv_34/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_34/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_34/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_34/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 312
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 312
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0008\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_35/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_35/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 312
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_35/weights/RMSProp"
input: "FC-DenseNet56/Conv_35/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_35/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0008\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 312
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_35/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_35/biases/RMSProp"
input: "FC-DenseNet56/Conv_35/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_35/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_35/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_35/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 324
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 324
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000D\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_36/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_36/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 324
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_36/weights/RMSProp"
input: "FC-DenseNet56/Conv_36/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_36/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000D\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 324
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_36/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_36/biases/RMSProp"
input: "FC-DenseNet56/Conv_36/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_36/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_36/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_36/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 240
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 240
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\360\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_37/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_37/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 240
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_37/weights/RMSProp"
input: "FC-DenseNet56/Conv_37/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_37/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\360\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 240
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_37/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_37/biases/RMSProp"
input: "FC-DenseNet56/Conv_37/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_37/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_37/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_37/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 252
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 252
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\374\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_38/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_38/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 252
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_38/weights/RMSProp"
input: "FC-DenseNet56/Conv_38/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_38/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\374\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 252
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_38/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_38/biases/RMSProp"
input: "FC-DenseNet56/Conv_38/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_38/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_38/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_38/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 264
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 264
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\010\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_39/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_39/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 264
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_39/weights/RMSProp"
input: "FC-DenseNet56/Conv_39/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_39/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\010\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 264
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_39/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_39/biases/RMSProp"
input: "FC-DenseNet56/Conv_39/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_39/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_39/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_39/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 276
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 276
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\024\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_40/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_40/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 276
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_40/weights/RMSProp"
input: "FC-DenseNet56/Conv_40/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_40/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\024\001\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 276
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_40/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_40/biases/RMSProp"
input: "FC-DenseNet56/Conv_40/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_40/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_40/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_40/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 192
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 192
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_41/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_41/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_41/weights/RMSProp"
input: "FC-DenseNet56/Conv_41/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_41/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\300\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 192
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_41/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_41/biases/RMSProp"
input: "FC-DenseNet56/Conv_41/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_41/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_41/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_41/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 204
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 204
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\314\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_42/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_42/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 204
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_42/weights/RMSProp"
input: "FC-DenseNet56/Conv_42/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_42/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\314\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 204
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_42/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_42/biases/RMSProp"
input: "FC-DenseNet56/Conv_42/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_42/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_42/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_42/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 216
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 216
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_43/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_43/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 216
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_43/weights/RMSProp"
input: "FC-DenseNet56/Conv_43/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_43/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\330\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 216
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_43/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_43/biases/RMSProp"
input: "FC-DenseNet56/Conv_43/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_43/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_43/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_43/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 228
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 228
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\344\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_44/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_44/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 228
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_44/weights/RMSProp"
input: "FC-DenseNet56/Conv_44/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_44/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\344\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 228
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_44/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_44/biases/RMSProp"
input: "FC-DenseNet56/Conv_44/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_44/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_44/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_44/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\0000\000\000\0000\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 48
      }
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 48
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 48
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 144
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 144
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_45/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_45/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_45/weights/RMSProp"
input: "FC-DenseNet56/Conv_45/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_45/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\220\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 144
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_45/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_45/biases/RMSProp"
input: "FC-DenseNet56/Conv_45/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_45/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_45/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_45/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 156
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 156
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\234\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_46/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_46/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 156
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_46/weights/RMSProp"
input: "FC-DenseNet56/Conv_46/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_46/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\234\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 156
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_46/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_46/biases/RMSProp"
input: "FC-DenseNet56/Conv_46/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_46/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_46/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_46/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 168
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 168
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\250\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_47/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_47/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 168
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_47/weights/RMSProp"
input: "FC-DenseNet56/Conv_47/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_47/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\250\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 168
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_47/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_47/biases/RMSProp"
input: "FC-DenseNet56/Conv_47/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_47/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_47/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_47/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 180
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 180
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\264\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/Conv_48/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/Conv_48/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 180
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_48/weights/RMSProp"
input: "FC-DenseNet56/Conv_48/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_48/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\003\000\000\000\003\000\000\000\264\000\000\000\014\000\000\000"
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
      dim {
        size: 3
      }
      dim {
        size: 180
      }
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_48/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_48/biases/RMSProp"
input: "FC-DenseNet56/Conv_48/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/Conv_48/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 12
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_48/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/Conv_48/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp/Initializer/ones/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp/Initializer/ones/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp/Initializer/ones"
op: "Fill"
input: "FC-DenseNet56/logits/weights/RMSProp/Initializer/ones/shape_as_tensor"
input: "FC-DenseNet56/logits/weights/RMSProp/Initializer/ones/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/logits/weights/RMSProp"
input: "FC-DenseNet56/logits/weights/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/logits/weights/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\300\000\000\000 \000\000\000"
    }
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp_1/Initializer/zeros"
op: "Fill"
input: "FC-DenseNet56/logits/weights/RMSProp_1/Initializer/zeros/shape_as_tensor"
input: "FC-DenseNet56/logits/weights/RMSProp_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 1
      }
      dim {
        size: 1
      }
      dim {
        size: 192
      }
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/logits/weights/RMSProp_1"
input: "FC-DenseNet56/logits/weights/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/logits/weights/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/logits/weights/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp/Initializer/ones"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 1.0
    }
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp/Assign"
op: "Assign"
input: "FC-DenseNet56/logits/biases/RMSProp"
input: "FC-DenseNet56/logits/biases/RMSProp/Initializer/ones"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp/read"
op: "Identity"
input: "FC-DenseNet56/logits/biases/RMSProp"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 32
        }
      }
      float_val: 0.0
    }
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 32
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp_1/Assign"
op: "Assign"
input: "FC-DenseNet56/logits/biases/RMSProp_1"
input: "FC-DenseNet56/logits/biases/RMSProp_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "FC-DenseNet56/logits/biases/RMSProp_1/read"
op: "Identity"
input: "FC-DenseNet56/logits/biases/RMSProp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}

name: "RMSProp/learning_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-05
    }
  }
}

name: "RMSProp/decay"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9950000047683716
    }
  }
}

name: "RMSProp/momentum"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}

name: "RMSProp/epsilon"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.000000013351432e-10
    }
  }
}

name: "RMSProp/update_FC-DenseNet56/first_conv/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/first_conv/weights"
input: "FC-DenseNet56/first_conv/weights/RMSProp"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/first_conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/first_conv/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/first_conv/biases"
input: "FC-DenseNet56/first_conv/biases/RMSProp"
input: "FC-DenseNet56/first_conv/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/first_conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm/beta"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv/weights"
input: "FC-DenseNet56/Conv/weights/RMSProp"
input: "FC-DenseNet56/Conv/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv/biases"
input: "FC-DenseNet56/Conv/biases/RMSProp"
input: "FC-DenseNet56/Conv/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_1/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_1/beta"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_1/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_1/weights"
input: "FC-DenseNet56/Conv_1/weights/RMSProp"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_1/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_1/biases"
input: "FC-DenseNet56/Conv_1/biases/RMSProp"
input: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_2/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_2/beta"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_2/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_2/weights"
input: "FC-DenseNet56/Conv_2/weights/RMSProp"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_2/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_2/biases"
input: "FC-DenseNet56/Conv_2/biases/RMSProp"
input: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_3/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_3/beta"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_3/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_3/weights"
input: "FC-DenseNet56/Conv_3/weights/RMSProp"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_3/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_3/biases"
input: "FC-DenseNet56/Conv_3/biases/RMSProp"
input: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock1/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_4/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_4/beta"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown1/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_4/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_4/weights"
input: "FC-DenseNet56/Conv_4/weights/RMSProp"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_4/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_4/biases"
input: "FC-DenseNet56/Conv_4/biases/RMSProp"
input: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown1/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_5/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_5/beta"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_5/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_5/weights"
input: "FC-DenseNet56/Conv_5/weights/RMSProp"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_5/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_5/biases"
input: "FC-DenseNet56/Conv_5/biases/RMSProp"
input: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_6/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_6/beta"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_6/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_6/weights"
input: "FC-DenseNet56/Conv_6/weights/RMSProp"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_6/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_6/biases"
input: "FC-DenseNet56/Conv_6/biases/RMSProp"
input: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_7/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_7/beta"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_7/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_7/weights"
input: "FC-DenseNet56/Conv_7/weights/RMSProp"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_7/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_7/biases"
input: "FC-DenseNet56/Conv_7/biases/RMSProp"
input: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_8/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_8/beta"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_8/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_8/weights"
input: "FC-DenseNet56/Conv_8/weights/RMSProp"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_8/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_8/biases"
input: "FC-DenseNet56/Conv_8/biases/RMSProp"
input: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock2/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_9/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_9/beta"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown2/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_9/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_9/weights"
input: "FC-DenseNet56/Conv_9/weights/RMSProp"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_9/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_9/biases"
input: "FC-DenseNet56/Conv_9/biases/RMSProp"
input: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown2/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_10/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_10/beta"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_10/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_10/weights"
input: "FC-DenseNet56/Conv_10/weights/RMSProp"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_10/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_10/biases"
input: "FC-DenseNet56/Conv_10/biases/RMSProp"
input: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_11/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_11/beta"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_11/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_11/weights"
input: "FC-DenseNet56/Conv_11/weights/RMSProp"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_11/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_11/biases"
input: "FC-DenseNet56/Conv_11/biases/RMSProp"
input: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_12/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_12/beta"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_12/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_12/weights"
input: "FC-DenseNet56/Conv_12/weights/RMSProp"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_12/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_12/biases"
input: "FC-DenseNet56/Conv_12/biases/RMSProp"
input: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_13/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_13/beta"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_13/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_13/weights"
input: "FC-DenseNet56/Conv_13/weights/RMSProp"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_13/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_13/biases"
input: "FC-DenseNet56/Conv_13/biases/RMSProp"
input: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock3/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_14/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_14/beta"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown3/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_14/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_14/weights"
input: "FC-DenseNet56/Conv_14/weights/RMSProp"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_14/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_14/biases"
input: "FC-DenseNet56/Conv_14/biases/RMSProp"
input: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown3/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_15/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_15/beta"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_15/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_15/weights"
input: "FC-DenseNet56/Conv_15/weights/RMSProp"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_15/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_15/biases"
input: "FC-DenseNet56/Conv_15/biases/RMSProp"
input: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_16/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_16/beta"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_16/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_16/weights"
input: "FC-DenseNet56/Conv_16/weights/RMSProp"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_16/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_16/biases"
input: "FC-DenseNet56/Conv_16/biases/RMSProp"
input: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_17/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_17/beta"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_17/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_17/weights"
input: "FC-DenseNet56/Conv_17/weights/RMSProp"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_17/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_17/biases"
input: "FC-DenseNet56/Conv_17/biases/RMSProp"
input: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_18/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_18/beta"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_18/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_18/weights"
input: "FC-DenseNet56/Conv_18/weights/RMSProp"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_18/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_18/biases"
input: "FC-DenseNet56/Conv_18/biases/RMSProp"
input: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock4/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_19/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_19/beta"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown4/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_19/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_19/weights"
input: "FC-DenseNet56/Conv_19/weights/RMSProp"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_19/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_19/biases"
input: "FC-DenseNet56/Conv_19/biases/RMSProp"
input: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown4/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_20/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_20/beta"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_20/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_20/weights"
input: "FC-DenseNet56/Conv_20/weights/RMSProp"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_20/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_20/biases"
input: "FC-DenseNet56/Conv_20/biases/RMSProp"
input: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_21/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_21/beta"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_21/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_21/weights"
input: "FC-DenseNet56/Conv_21/weights/RMSProp"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_21/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_21/biases"
input: "FC-DenseNet56/Conv_21/biases/RMSProp"
input: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_22/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_22/beta"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_22/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_22/weights"
input: "FC-DenseNet56/Conv_22/weights/RMSProp"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_22/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_22/biases"
input: "FC-DenseNet56/Conv_22/biases/RMSProp"
input: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_23/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_23/beta"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_23/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_23/weights"
input: "FC-DenseNet56/Conv_23/weights/RMSProp"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_23/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_23/biases"
input: "FC-DenseNet56/Conv_23/biases/RMSProp"
input: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock5/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_24/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_24/beta"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown5/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_24/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_24/weights"
input: "FC-DenseNet56/Conv_24/weights/RMSProp"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_24/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_24/biases"
input: "FC-DenseNet56/Conv_24/biases/RMSProp"
input: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitiondown5/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_25/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_25/beta"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_25/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_25/weights"
input: "FC-DenseNet56/Conv_25/weights/RMSProp"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_25/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_25/biases"
input: "FC-DenseNet56/Conv_25/biases/RMSProp"
input: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_26/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_26/beta"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_26/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_26/weights"
input: "FC-DenseNet56/Conv_26/weights/RMSProp"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_26/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_26/biases"
input: "FC-DenseNet56/Conv_26/biases/RMSProp"
input: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_27/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_27/beta"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_27/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_27/weights"
input: "FC-DenseNet56/Conv_27/weights/RMSProp"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_27/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_27/biases"
input: "FC-DenseNet56/Conv_27/biases/RMSProp"
input: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_28/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_28/beta"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_28/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_28/weights"
input: "FC-DenseNet56/Conv_28/weights/RMSProp"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_28/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_28/biases"
input: "FC-DenseNet56/Conv_28/biases/RMSProp"
input: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock6/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose/weights"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/conv2d_transpose_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose/biases"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup6/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_29/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_29/beta"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_29/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_29/weights"
input: "FC-DenseNet56/Conv_29/weights/RMSProp"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_29/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_29/biases"
input: "FC-DenseNet56/Conv_29/biases/RMSProp"
input: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_30/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_30/beta"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_30/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_30/weights"
input: "FC-DenseNet56/Conv_30/weights/RMSProp"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_30/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_30/biases"
input: "FC-DenseNet56/Conv_30/biases/RMSProp"
input: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_31/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_31/beta"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_31/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_31/weights"
input: "FC-DenseNet56/Conv_31/weights/RMSProp"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_31/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_31/biases"
input: "FC-DenseNet56/Conv_31/biases/RMSProp"
input: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_32/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_32/beta"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_32/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_32/weights"
input: "FC-DenseNet56/Conv_32/weights/RMSProp"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_32/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_32/biases"
input: "FC-DenseNet56/Conv_32/biases/RMSProp"
input: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock7/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_1/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/weights"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_1/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/biases"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup7/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_33/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_33/beta"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_33/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_33/weights"
input: "FC-DenseNet56/Conv_33/weights/RMSProp"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_33/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_33/biases"
input: "FC-DenseNet56/Conv_33/biases/RMSProp"
input: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_34/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_34/beta"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_34/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_34/weights"
input: "FC-DenseNet56/Conv_34/weights/RMSProp"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_34/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_34/biases"
input: "FC-DenseNet56/Conv_34/biases/RMSProp"
input: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_35/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_35/beta"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_35/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_35/weights"
input: "FC-DenseNet56/Conv_35/weights/RMSProp"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_35/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_35/biases"
input: "FC-DenseNet56/Conv_35/biases/RMSProp"
input: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_36/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_36/beta"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_36/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_36/weights"
input: "FC-DenseNet56/Conv_36/weights/RMSProp"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_36/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_36/biases"
input: "FC-DenseNet56/Conv_36/biases/RMSProp"
input: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock8/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_2/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/weights"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_2/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/biases"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup8/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_37/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_37/beta"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_37/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_37/weights"
input: "FC-DenseNet56/Conv_37/weights/RMSProp"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_37/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_37/biases"
input: "FC-DenseNet56/Conv_37/biases/RMSProp"
input: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_38/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_38/beta"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_38/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_38/weights"
input: "FC-DenseNet56/Conv_38/weights/RMSProp"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_38/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_38/biases"
input: "FC-DenseNet56/Conv_38/biases/RMSProp"
input: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_39/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_39/beta"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_39/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_39/weights"
input: "FC-DenseNet56/Conv_39/weights/RMSProp"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_39/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_39/biases"
input: "FC-DenseNet56/Conv_39/biases/RMSProp"
input: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_40/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_40/beta"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_40/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_40/weights"
input: "FC-DenseNet56/Conv_40/weights/RMSProp"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_40/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_40/biases"
input: "FC-DenseNet56/Conv_40/biases/RMSProp"
input: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock9/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_3/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/weights"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_3/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/biases"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup9/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_41/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_41/beta"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_41/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_41/weights"
input: "FC-DenseNet56/Conv_41/weights/RMSProp"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_41/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_41/biases"
input: "FC-DenseNet56/Conv_41/biases/RMSProp"
input: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_42/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_42/beta"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_42/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_42/weights"
input: "FC-DenseNet56/Conv_42/weights/RMSProp"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_42/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_42/biases"
input: "FC-DenseNet56/Conv_42/biases/RMSProp"
input: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_43/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_43/beta"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_43/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_43/weights"
input: "FC-DenseNet56/Conv_43/weights/RMSProp"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_43/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_43/biases"
input: "FC-DenseNet56/Conv_43/biases/RMSProp"
input: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_44/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_44/beta"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_44/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_44/weights"
input: "FC-DenseNet56/Conv_44/weights/RMSProp"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_44/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_44/biases"
input: "FC-DenseNet56/Conv_44/biases/RMSProp"
input: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock10/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_4/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/weights"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/conv2d_transpose_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv2d_transpose_4/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/biases"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/transitionup10/Conv2d_transpose/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_45/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_45/beta"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_45/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_45/weights"
input: "FC-DenseNet56/Conv_45/weights/RMSProp"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_45/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_45/biases"
input: "FC-DenseNet56/Conv_45/biases/RMSProp"
input: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_46/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_46/beta"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_1/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_46/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_46/weights"
input: "FC-DenseNet56/Conv_46/weights/RMSProp"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_46/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_46/biases"
input: "FC-DenseNet56/Conv_46/biases/RMSProp"
input: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_47/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_47/beta"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_2/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_47/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_47/weights"
input: "FC-DenseNet56/Conv_47/weights/RMSProp"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_47/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_47/biases"
input: "FC-DenseNet56/Conv_47/biases/RMSProp"
input: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv_2/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/BatchNorm_48/beta/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/BatchNorm_48/beta"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/BatchNorm_3/FusedBatchNormV3_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_48/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_48/weights"
input: "FC-DenseNet56/Conv_48/weights/RMSProp"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/Conv_48/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/Conv_48/biases"
input: "FC-DenseNet56/Conv_48/biases/RMSProp"
input: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/denseblock11/Conv_3/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/logits/weights/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/logits/weights"
input: "FC-DenseNet56/logits/weights/RMSProp"
input: "FC-DenseNet56/logits/weights/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/logits/Conv2D_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp/update_FC-DenseNet56/logits/biases/ApplyRMSProp"
op: "ApplyRMSProp"
input: "FC-DenseNet56/logits/biases"
input: "FC-DenseNet56/logits/biases/RMSProp"
input: "FC-DenseNet56/logits/biases/RMSProp_1"
input: "RMSProp/learning_rate"
input: "RMSProp/decay"
input: "RMSProp/momentum"
input: "RMSProp/epsilon"
input: "gradients/FC-DenseNet56/logits/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}

name: "RMSProp"
op: "NoOp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_1/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_10/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_11/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_12/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_13/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_14/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_15/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_16/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_17/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_18/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_19/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_2/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_20/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_21/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_22/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_23/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_24/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_25/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_26/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_27/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_28/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_29/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_3/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_30/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_31/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_32/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_33/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_34/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_35/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_36/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_37/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_38/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_39/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_4/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_40/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_41/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_42/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_43/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_44/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_45/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_46/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_47/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_48/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_5/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_6/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_7/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_8/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/BatchNorm_9/beta/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_1/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_1/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_2/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_2/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_3/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_3/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_4/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv2d_transpose_4/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_1/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_1/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_10/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_10/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_11/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_11/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_12/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_12/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_13/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_13/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_14/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_14/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_15/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_15/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_16/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_16/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_17/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_17/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_18/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_18/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_19/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_19/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_2/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_2/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_20/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_20/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_21/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_21/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_22/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_22/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_23/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_23/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_24/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_24/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_25/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_25/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_26/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_26/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_27/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_27/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_28/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_28/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_29/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_29/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_3/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_3/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_30/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_30/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_31/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_31/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_32/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_32/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_33/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_33/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_34/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_34/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_35/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_35/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_36/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_36/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_37/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_37/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_38/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_38/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_39/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_39/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_4/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_4/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_40/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_40/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_41/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_41/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_42/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_42/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_43/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_43/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_44/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_44/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_45/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_45/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_46/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_46/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_47/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_47/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_48/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_48/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_5/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_5/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_6/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_6/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_7/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_7/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_8/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_8/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_9/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/Conv_9/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/first_conv/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/first_conv/weights/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/logits/biases/ApplyRMSProp"
input: "^RMSProp/update_FC-DenseNet56/logits/weights/ApplyRMSProp"

name: "save/filename/input"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}

name: "save/filename"
op: "PlaceholderWithDefault"
input: "save/filename/input"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

name: "save/Const"
op: "PlaceholderWithDefault"
input: "save/filename"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}

name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 581
        }
      }
      string_val: "FC-DenseNet56/BatchNorm/beta"
      string_val: "FC-DenseNet56/BatchNorm/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_1/beta"
      string_val: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_1/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_1/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_10/beta"
      string_val: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_10/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_10/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_11/beta"
      string_val: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_11/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_11/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_12/beta"
      string_val: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_12/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_12/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_13/beta"
      string_val: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_13/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_13/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_14/beta"
      string_val: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_14/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_14/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_15/beta"
      string_val: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_15/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_15/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_16/beta"
      string_val: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_16/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_16/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_17/beta"
      string_val: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_17/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_17/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_18/beta"
      string_val: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_18/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_18/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_19/beta"
      string_val: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_19/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_19/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_2/beta"
      string_val: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_2/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_2/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_20/beta"
      string_val: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_20/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_20/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_21/beta"
      string_val: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_21/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_21/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_22/beta"
      string_val: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_22/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_22/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_23/beta"
      string_val: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_23/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_23/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_24/beta"
      string_val: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_24/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_24/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_25/beta"
      string_val: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_25/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_25/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_26/beta"
      string_val: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_26/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_26/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_27/beta"
      string_val: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_27/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_27/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_28/beta"
      string_val: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_28/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_28/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_29/beta"
      string_val: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_29/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_29/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_3/beta"
      string_val: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_3/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_3/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_30/beta"
      string_val: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_30/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_30/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_31/beta"
      string_val: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_31/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_31/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_32/beta"
      string_val: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_32/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_32/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_33/beta"
      string_val: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_33/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_33/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_34/beta"
      string_val: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_34/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_34/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_35/beta"
      string_val: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_35/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_35/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_36/beta"
      string_val: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_36/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_36/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_37/beta"
      string_val: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_37/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_37/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_38/beta"
      string_val: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_38/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_38/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_39/beta"
      string_val: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_39/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_39/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_4/beta"
      string_val: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_4/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_4/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_40/beta"
      string_val: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_40/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_40/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_41/beta"
      string_val: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_41/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_41/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_42/beta"
      string_val: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_42/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_42/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_43/beta"
      string_val: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_43/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_43/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_44/beta"
      string_val: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_44/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_44/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_45/beta"
      string_val: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_45/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_45/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_46/beta"
      string_val: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_46/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_46/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_47/beta"
      string_val: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_47/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_47/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_48/beta"
      string_val: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_48/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_48/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_5/beta"
      string_val: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_5/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_5/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_6/beta"
      string_val: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_6/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_6/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_7/beta"
      string_val: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_7/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_7/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_8/beta"
      string_val: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_8/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_8/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_9/beta"
      string_val: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_9/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_9/moving_variance"
      string_val: "FC-DenseNet56/Conv/biases"
      string_val: "FC-DenseNet56/Conv/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv/weights"
      string_val: "FC-DenseNet56/Conv/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_1/biases"
      string_val: "FC-DenseNet56/Conv_1/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_1/weights"
      string_val: "FC-DenseNet56/Conv_1/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_10/biases"
      string_val: "FC-DenseNet56/Conv_10/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_10/weights"
      string_val: "FC-DenseNet56/Conv_10/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_11/biases"
      string_val: "FC-DenseNet56/Conv_11/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_11/weights"
      string_val: "FC-DenseNet56/Conv_11/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_12/biases"
      string_val: "FC-DenseNet56/Conv_12/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_12/weights"
      string_val: "FC-DenseNet56/Conv_12/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_13/biases"
      string_val: "FC-DenseNet56/Conv_13/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_13/weights"
      string_val: "FC-DenseNet56/Conv_13/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_14/biases"
      string_val: "FC-DenseNet56/Conv_14/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_14/weights"
      string_val: "FC-DenseNet56/Conv_14/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_15/biases"
      string_val: "FC-DenseNet56/Conv_15/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_15/weights"
      string_val: "FC-DenseNet56/Conv_15/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_16/biases"
      string_val: "FC-DenseNet56/Conv_16/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_16/weights"
      string_val: "FC-DenseNet56/Conv_16/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_17/biases"
      string_val: "FC-DenseNet56/Conv_17/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_17/weights"
      string_val: "FC-DenseNet56/Conv_17/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_18/biases"
      string_val: "FC-DenseNet56/Conv_18/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_18/weights"
      string_val: "FC-DenseNet56/Conv_18/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_19/biases"
      string_val: "FC-DenseNet56/Conv_19/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_19/weights"
      string_val: "FC-DenseNet56/Conv_19/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_2/biases"
      string_val: "FC-DenseNet56/Conv_2/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_2/weights"
      string_val: "FC-DenseNet56/Conv_2/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_20/biases"
      string_val: "FC-DenseNet56/Conv_20/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_20/weights"
      string_val: "FC-DenseNet56/Conv_20/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_21/biases"
      string_val: "FC-DenseNet56/Conv_21/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_21/weights"
      string_val: "FC-DenseNet56/Conv_21/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_22/biases"
      string_val: "FC-DenseNet56/Conv_22/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_22/weights"
      string_val: "FC-DenseNet56/Conv_22/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_23/biases"
      string_val: "FC-DenseNet56/Conv_23/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_23/weights"
      string_val: "FC-DenseNet56/Conv_23/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_24/biases"
      string_val: "FC-DenseNet56/Conv_24/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_24/weights"
      string_val: "FC-DenseNet56/Conv_24/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_25/biases"
      string_val: "FC-DenseNet56/Conv_25/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_25/weights"
      string_val: "FC-DenseNet56/Conv_25/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_26/biases"
      string_val: "FC-DenseNet56/Conv_26/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_26/weights"
      string_val: "FC-DenseNet56/Conv_26/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_27/biases"
      string_val: "FC-DenseNet56/Conv_27/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_27/weights"
      string_val: "FC-DenseNet56/Conv_27/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_28/biases"
      string_val: "FC-DenseNet56/Conv_28/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_28/weights"
      string_val: "FC-DenseNet56/Conv_28/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_29/biases"
      string_val: "FC-DenseNet56/Conv_29/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_29/weights"
      string_val: "FC-DenseNet56/Conv_29/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_3/biases"
      string_val: "FC-DenseNet56/Conv_3/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_3/weights"
      string_val: "FC-DenseNet56/Conv_3/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_30/biases"
      string_val: "FC-DenseNet56/Conv_30/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_30/weights"
      string_val: "FC-DenseNet56/Conv_30/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_31/biases"
      string_val: "FC-DenseNet56/Conv_31/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_31/weights"
      string_val: "FC-DenseNet56/Conv_31/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_32/biases"
      string_val: "FC-DenseNet56/Conv_32/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_32/weights"
      string_val: "FC-DenseNet56/Conv_32/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_33/biases"
      string_val: "FC-DenseNet56/Conv_33/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_33/weights"
      string_val: "FC-DenseNet56/Conv_33/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_34/biases"
      string_val: "FC-DenseNet56/Conv_34/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_34/weights"
      string_val: "FC-DenseNet56/Conv_34/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_35/biases"
      string_val: "FC-DenseNet56/Conv_35/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_35/weights"
      string_val: "FC-DenseNet56/Conv_35/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_36/biases"
      string_val: "FC-DenseNet56/Conv_36/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_36/weights"
      string_val: "FC-DenseNet56/Conv_36/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_37/biases"
      string_val: "FC-DenseNet56/Conv_37/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_37/weights"
      string_val: "FC-DenseNet56/Conv_37/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_38/biases"
      string_val: "FC-DenseNet56/Conv_38/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_38/weights"
      string_val: "FC-DenseNet56/Conv_38/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_39/biases"
      string_val: "FC-DenseNet56/Conv_39/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_39/weights"
      string_val: "FC-DenseNet56/Conv_39/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_4/biases"
      string_val: "FC-DenseNet56/Conv_4/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_4/weights"
      string_val: "FC-DenseNet56/Conv_4/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_40/biases"
      string_val: "FC-DenseNet56/Conv_40/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_40/weights"
      string_val: "FC-DenseNet56/Conv_40/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_41/biases"
      string_val: "FC-DenseNet56/Conv_41/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_41/weights"
      string_val: "FC-DenseNet56/Conv_41/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_42/biases"
      string_val: "FC-DenseNet56/Conv_42/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_42/weights"
      string_val: "FC-DenseNet56/Conv_42/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_43/biases"
      string_val: "FC-DenseNet56/Conv_43/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_43/weights"
      string_val: "FC-DenseNet56/Conv_43/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_44/biases"
      string_val: "FC-DenseNet56/Conv_44/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_44/weights"
      string_val: "FC-DenseNet56/Conv_44/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_45/biases"
      string_val: "FC-DenseNet56/Conv_45/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_45/weights"
      string_val: "FC-DenseNet56/Conv_45/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_46/biases"
      string_val: "FC-DenseNet56/Conv_46/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_46/weights"
      string_val: "FC-DenseNet56/Conv_46/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_47/biases"
      string_val: "FC-DenseNet56/Conv_47/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_47/weights"
      string_val: "FC-DenseNet56/Conv_47/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_48/biases"
      string_val: "FC-DenseNet56/Conv_48/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_48/weights"
      string_val: "FC-DenseNet56/Conv_48/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_5/biases"
      string_val: "FC-DenseNet56/Conv_5/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_5/weights"
      string_val: "FC-DenseNet56/Conv_5/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_6/biases"
      string_val: "FC-DenseNet56/Conv_6/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_6/weights"
      string_val: "FC-DenseNet56/Conv_6/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_7/biases"
      string_val: "FC-DenseNet56/Conv_7/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_7/weights"
      string_val: "FC-DenseNet56/Conv_7/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_8/biases"
      string_val: "FC-DenseNet56/Conv_8/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_8/weights"
      string_val: "FC-DenseNet56/Conv_8/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_9/biases"
      string_val: "FC-DenseNet56/Conv_9/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_9/weights"
      string_val: "FC-DenseNet56/Conv_9/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
      string_val: "FC-DenseNet56/first_conv/biases"
      string_val: "FC-DenseNet56/first_conv/biases/RMSProp"
      string_val: "FC-DenseNet56/first_conv/biases/RMSProp_1"
      string_val: "FC-DenseNet56/first_conv/weights"
      string_val: "FC-DenseNet56/first_conv/weights/RMSProp"
      string_val: "FC-DenseNet56/first_conv/weights/RMSProp_1"
      string_val: "FC-DenseNet56/logits/biases"
      string_val: "FC-DenseNet56/logits/biases/RMSProp"
      string_val: "FC-DenseNet56/logits/biases/RMSProp_1"
      string_val: "FC-DenseNet56/logits/weights"
      string_val: "FC-DenseNet56/logits/weights/RMSProp"
      string_val: "FC-DenseNet56/logits/weights/RMSProp_1"
    }
  }
}

name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 581
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}

name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "FC-DenseNet56/BatchNorm/beta"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm/moving_mean"
input: "FC-DenseNet56/BatchNorm/moving_variance"
input: "FC-DenseNet56/BatchNorm_1/beta"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_1/moving_mean"
input: "FC-DenseNet56/BatchNorm_1/moving_variance"
input: "FC-DenseNet56/BatchNorm_10/beta"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_10/moving_mean"
input: "FC-DenseNet56/BatchNorm_10/moving_variance"
input: "FC-DenseNet56/BatchNorm_11/beta"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_11/moving_mean"
input: "FC-DenseNet56/BatchNorm_11/moving_variance"
input: "FC-DenseNet56/BatchNorm_12/beta"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_12/moving_mean"
input: "FC-DenseNet56/BatchNorm_12/moving_variance"
input: "FC-DenseNet56/BatchNorm_13/beta"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_13/moving_mean"
input: "FC-DenseNet56/BatchNorm_13/moving_variance"
input: "FC-DenseNet56/BatchNorm_14/beta"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_14/moving_mean"
input: "FC-DenseNet56/BatchNorm_14/moving_variance"
input: "FC-DenseNet56/BatchNorm_15/beta"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_15/moving_mean"
input: "FC-DenseNet56/BatchNorm_15/moving_variance"
input: "FC-DenseNet56/BatchNorm_16/beta"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_16/moving_mean"
input: "FC-DenseNet56/BatchNorm_16/moving_variance"
input: "FC-DenseNet56/BatchNorm_17/beta"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_17/moving_mean"
input: "FC-DenseNet56/BatchNorm_17/moving_variance"
input: "FC-DenseNet56/BatchNorm_18/beta"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_18/moving_mean"
input: "FC-DenseNet56/BatchNorm_18/moving_variance"
input: "FC-DenseNet56/BatchNorm_19/beta"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_19/moving_mean"
input: "FC-DenseNet56/BatchNorm_19/moving_variance"
input: "FC-DenseNet56/BatchNorm_2/beta"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_2/moving_mean"
input: "FC-DenseNet56/BatchNorm_2/moving_variance"
input: "FC-DenseNet56/BatchNorm_20/beta"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_20/moving_mean"
input: "FC-DenseNet56/BatchNorm_20/moving_variance"
input: "FC-DenseNet56/BatchNorm_21/beta"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_21/moving_mean"
input: "FC-DenseNet56/BatchNorm_21/moving_variance"
input: "FC-DenseNet56/BatchNorm_22/beta"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_22/moving_mean"
input: "FC-DenseNet56/BatchNorm_22/moving_variance"
input: "FC-DenseNet56/BatchNorm_23/beta"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_23/moving_mean"
input: "FC-DenseNet56/BatchNorm_23/moving_variance"
input: "FC-DenseNet56/BatchNorm_24/beta"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_24/moving_mean"
input: "FC-DenseNet56/BatchNorm_24/moving_variance"
input: "FC-DenseNet56/BatchNorm_25/beta"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_25/moving_mean"
input: "FC-DenseNet56/BatchNorm_25/moving_variance"
input: "FC-DenseNet56/BatchNorm_26/beta"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_26/moving_mean"
input: "FC-DenseNet56/BatchNorm_26/moving_variance"
input: "FC-DenseNet56/BatchNorm_27/beta"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_27/moving_mean"
input: "FC-DenseNet56/BatchNorm_27/moving_variance"
input: "FC-DenseNet56/BatchNorm_28/beta"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_28/moving_mean"
input: "FC-DenseNet56/BatchNorm_28/moving_variance"
input: "FC-DenseNet56/BatchNorm_29/beta"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_29/moving_mean"
input: "FC-DenseNet56/BatchNorm_29/moving_variance"
input: "FC-DenseNet56/BatchNorm_3/beta"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_3/moving_mean"
input: "FC-DenseNet56/BatchNorm_3/moving_variance"
input: "FC-DenseNet56/BatchNorm_30/beta"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_30/moving_mean"
input: "FC-DenseNet56/BatchNorm_30/moving_variance"
input: "FC-DenseNet56/BatchNorm_31/beta"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_31/moving_mean"
input: "FC-DenseNet56/BatchNorm_31/moving_variance"
input: "FC-DenseNet56/BatchNorm_32/beta"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_32/moving_mean"
input: "FC-DenseNet56/BatchNorm_32/moving_variance"
input: "FC-DenseNet56/BatchNorm_33/beta"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_33/moving_mean"
input: "FC-DenseNet56/BatchNorm_33/moving_variance"
input: "FC-DenseNet56/BatchNorm_34/beta"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_34/moving_mean"
input: "FC-DenseNet56/BatchNorm_34/moving_variance"
input: "FC-DenseNet56/BatchNorm_35/beta"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_35/moving_mean"
input: "FC-DenseNet56/BatchNorm_35/moving_variance"
input: "FC-DenseNet56/BatchNorm_36/beta"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_36/moving_mean"
input: "FC-DenseNet56/BatchNorm_36/moving_variance"
input: "FC-DenseNet56/BatchNorm_37/beta"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_37/moving_mean"
input: "FC-DenseNet56/BatchNorm_37/moving_variance"
input: "FC-DenseNet56/BatchNorm_38/beta"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_38/moving_mean"
input: "FC-DenseNet56/BatchNorm_38/moving_variance"
input: "FC-DenseNet56/BatchNorm_39/beta"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_39/moving_mean"
input: "FC-DenseNet56/BatchNorm_39/moving_variance"
input: "FC-DenseNet56/BatchNorm_4/beta"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_4/moving_mean"
input: "FC-DenseNet56/BatchNorm_4/moving_variance"
input: "FC-DenseNet56/BatchNorm_40/beta"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_40/moving_mean"
input: "FC-DenseNet56/BatchNorm_40/moving_variance"
input: "FC-DenseNet56/BatchNorm_41/beta"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_41/moving_mean"
input: "FC-DenseNet56/BatchNorm_41/moving_variance"
input: "FC-DenseNet56/BatchNorm_42/beta"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_42/moving_mean"
input: "FC-DenseNet56/BatchNorm_42/moving_variance"
input: "FC-DenseNet56/BatchNorm_43/beta"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_43/moving_mean"
input: "FC-DenseNet56/BatchNorm_43/moving_variance"
input: "FC-DenseNet56/BatchNorm_44/beta"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_44/moving_mean"
input: "FC-DenseNet56/BatchNorm_44/moving_variance"
input: "FC-DenseNet56/BatchNorm_45/beta"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_45/moving_mean"
input: "FC-DenseNet56/BatchNorm_45/moving_variance"
input: "FC-DenseNet56/BatchNorm_46/beta"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_46/moving_mean"
input: "FC-DenseNet56/BatchNorm_46/moving_variance"
input: "FC-DenseNet56/BatchNorm_47/beta"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_47/moving_mean"
input: "FC-DenseNet56/BatchNorm_47/moving_variance"
input: "FC-DenseNet56/BatchNorm_48/beta"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_48/moving_mean"
input: "FC-DenseNet56/BatchNorm_48/moving_variance"
input: "FC-DenseNet56/BatchNorm_5/beta"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_5/moving_mean"
input: "FC-DenseNet56/BatchNorm_5/moving_variance"
input: "FC-DenseNet56/BatchNorm_6/beta"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_6/moving_mean"
input: "FC-DenseNet56/BatchNorm_6/moving_variance"
input: "FC-DenseNet56/BatchNorm_7/beta"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_7/moving_mean"
input: "FC-DenseNet56/BatchNorm_7/moving_variance"
input: "FC-DenseNet56/BatchNorm_8/beta"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_8/moving_mean"
input: "FC-DenseNet56/BatchNorm_8/moving_variance"
input: "FC-DenseNet56/BatchNorm_9/beta"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
input: "FC-DenseNet56/BatchNorm_9/moving_mean"
input: "FC-DenseNet56/BatchNorm_9/moving_variance"
input: "FC-DenseNet56/Conv/biases"
input: "FC-DenseNet56/Conv/biases/RMSProp"
input: "FC-DenseNet56/Conv/biases/RMSProp_1"
input: "FC-DenseNet56/Conv/weights"
input: "FC-DenseNet56/Conv/weights/RMSProp"
input: "FC-DenseNet56/Conv/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose/biases"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose/weights"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_1/biases"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_1/weights"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_2/biases"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_2/weights"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_3/biases"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_3/weights"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_4/biases"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
input: "FC-DenseNet56/Conv2d_transpose_4/weights"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_1/biases"
input: "FC-DenseNet56/Conv_1/biases/RMSProp"
input: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_1/weights"
input: "FC-DenseNet56/Conv_1/weights/RMSProp"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_10/biases"
input: "FC-DenseNet56/Conv_10/biases/RMSProp"
input: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_10/weights"
input: "FC-DenseNet56/Conv_10/weights/RMSProp"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_11/biases"
input: "FC-DenseNet56/Conv_11/biases/RMSProp"
input: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_11/weights"
input: "FC-DenseNet56/Conv_11/weights/RMSProp"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_12/biases"
input: "FC-DenseNet56/Conv_12/biases/RMSProp"
input: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_12/weights"
input: "FC-DenseNet56/Conv_12/weights/RMSProp"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_13/biases"
input: "FC-DenseNet56/Conv_13/biases/RMSProp"
input: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_13/weights"
input: "FC-DenseNet56/Conv_13/weights/RMSProp"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_14/biases"
input: "FC-DenseNet56/Conv_14/biases/RMSProp"
input: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_14/weights"
input: "FC-DenseNet56/Conv_14/weights/RMSProp"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_15/biases"
input: "FC-DenseNet56/Conv_15/biases/RMSProp"
input: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_15/weights"
input: "FC-DenseNet56/Conv_15/weights/RMSProp"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_16/biases"
input: "FC-DenseNet56/Conv_16/biases/RMSProp"
input: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_16/weights"
input: "FC-DenseNet56/Conv_16/weights/RMSProp"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_17/biases"
input: "FC-DenseNet56/Conv_17/biases/RMSProp"
input: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_17/weights"
input: "FC-DenseNet56/Conv_17/weights/RMSProp"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_18/biases"
input: "FC-DenseNet56/Conv_18/biases/RMSProp"
input: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_18/weights"
input: "FC-DenseNet56/Conv_18/weights/RMSProp"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_19/biases"
input: "FC-DenseNet56/Conv_19/biases/RMSProp"
input: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_19/weights"
input: "FC-DenseNet56/Conv_19/weights/RMSProp"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_2/biases"
input: "FC-DenseNet56/Conv_2/biases/RMSProp"
input: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_2/weights"
input: "FC-DenseNet56/Conv_2/weights/RMSProp"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_20/biases"
input: "FC-DenseNet56/Conv_20/biases/RMSProp"
input: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_20/weights"
input: "FC-DenseNet56/Conv_20/weights/RMSProp"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_21/biases"
input: "FC-DenseNet56/Conv_21/biases/RMSProp"
input: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_21/weights"
input: "FC-DenseNet56/Conv_21/weights/RMSProp"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_22/biases"
input: "FC-DenseNet56/Conv_22/biases/RMSProp"
input: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_22/weights"
input: "FC-DenseNet56/Conv_22/weights/RMSProp"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_23/biases"
input: "FC-DenseNet56/Conv_23/biases/RMSProp"
input: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_23/weights"
input: "FC-DenseNet56/Conv_23/weights/RMSProp"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_24/biases"
input: "FC-DenseNet56/Conv_24/biases/RMSProp"
input: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_24/weights"
input: "FC-DenseNet56/Conv_24/weights/RMSProp"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_25/biases"
input: "FC-DenseNet56/Conv_25/biases/RMSProp"
input: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_25/weights"
input: "FC-DenseNet56/Conv_25/weights/RMSProp"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_26/biases"
input: "FC-DenseNet56/Conv_26/biases/RMSProp"
input: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_26/weights"
input: "FC-DenseNet56/Conv_26/weights/RMSProp"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_27/biases"
input: "FC-DenseNet56/Conv_27/biases/RMSProp"
input: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_27/weights"
input: "FC-DenseNet56/Conv_27/weights/RMSProp"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_28/biases"
input: "FC-DenseNet56/Conv_28/biases/RMSProp"
input: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_28/weights"
input: "FC-DenseNet56/Conv_28/weights/RMSProp"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_29/biases"
input: "FC-DenseNet56/Conv_29/biases/RMSProp"
input: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_29/weights"
input: "FC-DenseNet56/Conv_29/weights/RMSProp"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_3/biases"
input: "FC-DenseNet56/Conv_3/biases/RMSProp"
input: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_3/weights"
input: "FC-DenseNet56/Conv_3/weights/RMSProp"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_30/biases"
input: "FC-DenseNet56/Conv_30/biases/RMSProp"
input: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_30/weights"
input: "FC-DenseNet56/Conv_30/weights/RMSProp"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_31/biases"
input: "FC-DenseNet56/Conv_31/biases/RMSProp"
input: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_31/weights"
input: "FC-DenseNet56/Conv_31/weights/RMSProp"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_32/biases"
input: "FC-DenseNet56/Conv_32/biases/RMSProp"
input: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_32/weights"
input: "FC-DenseNet56/Conv_32/weights/RMSProp"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_33/biases"
input: "FC-DenseNet56/Conv_33/biases/RMSProp"
input: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_33/weights"
input: "FC-DenseNet56/Conv_33/weights/RMSProp"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_34/biases"
input: "FC-DenseNet56/Conv_34/biases/RMSProp"
input: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_34/weights"
input: "FC-DenseNet56/Conv_34/weights/RMSProp"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_35/biases"
input: "FC-DenseNet56/Conv_35/biases/RMSProp"
input: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_35/weights"
input: "FC-DenseNet56/Conv_35/weights/RMSProp"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_36/biases"
input: "FC-DenseNet56/Conv_36/biases/RMSProp"
input: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_36/weights"
input: "FC-DenseNet56/Conv_36/weights/RMSProp"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_37/biases"
input: "FC-DenseNet56/Conv_37/biases/RMSProp"
input: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_37/weights"
input: "FC-DenseNet56/Conv_37/weights/RMSProp"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_38/biases"
input: "FC-DenseNet56/Conv_38/biases/RMSProp"
input: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_38/weights"
input: "FC-DenseNet56/Conv_38/weights/RMSProp"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_39/biases"
input: "FC-DenseNet56/Conv_39/biases/RMSProp"
input: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_39/weights"
input: "FC-DenseNet56/Conv_39/weights/RMSProp"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_4/biases"
input: "FC-DenseNet56/Conv_4/biases/RMSProp"
input: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_4/weights"
input: "FC-DenseNet56/Conv_4/weights/RMSProp"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_40/biases"
input: "FC-DenseNet56/Conv_40/biases/RMSProp"
input: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_40/weights"
input: "FC-DenseNet56/Conv_40/weights/RMSProp"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_41/biases"
input: "FC-DenseNet56/Conv_41/biases/RMSProp"
input: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_41/weights"
input: "FC-DenseNet56/Conv_41/weights/RMSProp"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_42/biases"
input: "FC-DenseNet56/Conv_42/biases/RMSProp"
input: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_42/weights"
input: "FC-DenseNet56/Conv_42/weights/RMSProp"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_43/biases"
input: "FC-DenseNet56/Conv_43/biases/RMSProp"
input: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_43/weights"
input: "FC-DenseNet56/Conv_43/weights/RMSProp"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_44/biases"
input: "FC-DenseNet56/Conv_44/biases/RMSProp"
input: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_44/weights"
input: "FC-DenseNet56/Conv_44/weights/RMSProp"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_45/biases"
input: "FC-DenseNet56/Conv_45/biases/RMSProp"
input: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_45/weights"
input: "FC-DenseNet56/Conv_45/weights/RMSProp"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_46/biases"
input: "FC-DenseNet56/Conv_46/biases/RMSProp"
input: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_46/weights"
input: "FC-DenseNet56/Conv_46/weights/RMSProp"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_47/biases"
input: "FC-DenseNet56/Conv_47/biases/RMSProp"
input: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_47/weights"
input: "FC-DenseNet56/Conv_47/weights/RMSProp"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_48/biases"
input: "FC-DenseNet56/Conv_48/biases/RMSProp"
input: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_48/weights"
input: "FC-DenseNet56/Conv_48/weights/RMSProp"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_5/biases"
input: "FC-DenseNet56/Conv_5/biases/RMSProp"
input: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_5/weights"
input: "FC-DenseNet56/Conv_5/weights/RMSProp"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_6/biases"
input: "FC-DenseNet56/Conv_6/biases/RMSProp"
input: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_6/weights"
input: "FC-DenseNet56/Conv_6/weights/RMSProp"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_7/biases"
input: "FC-DenseNet56/Conv_7/biases/RMSProp"
input: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_7/weights"
input: "FC-DenseNet56/Conv_7/weights/RMSProp"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_8/biases"
input: "FC-DenseNet56/Conv_8/biases/RMSProp"
input: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_8/weights"
input: "FC-DenseNet56/Conv_8/weights/RMSProp"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
input: "FC-DenseNet56/Conv_9/biases"
input: "FC-DenseNet56/Conv_9/biases/RMSProp"
input: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
input: "FC-DenseNet56/Conv_9/weights"
input: "FC-DenseNet56/Conv_9/weights/RMSProp"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
input: "FC-DenseNet56/first_conv/biases"
input: "FC-DenseNet56/first_conv/biases/RMSProp"
input: "FC-DenseNet56/first_conv/biases/RMSProp_1"
input: "FC-DenseNet56/first_conv/weights"
input: "FC-DenseNet56/first_conv/weights/RMSProp"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1"
input: "FC-DenseNet56/logits/biases"
input: "FC-DenseNet56/logits/biases/RMSProp"
input: "FC-DenseNet56/logits/biases/RMSProp_1"
input: "FC-DenseNet56/logits/weights"
input: "FC-DenseNet56/logits/weights/RMSProp"
input: "FC-DenseNet56/logits/weights/RMSProp_1"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}

name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}

name: "save/RestoreV2/tensor_names"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 581
        }
      }
      string_val: "FC-DenseNet56/BatchNorm/beta"
      string_val: "FC-DenseNet56/BatchNorm/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_1/beta"
      string_val: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_1/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_1/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_10/beta"
      string_val: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_10/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_10/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_11/beta"
      string_val: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_11/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_11/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_12/beta"
      string_val: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_12/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_12/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_13/beta"
      string_val: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_13/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_13/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_14/beta"
      string_val: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_14/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_14/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_15/beta"
      string_val: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_15/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_15/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_16/beta"
      string_val: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_16/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_16/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_17/beta"
      string_val: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_17/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_17/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_18/beta"
      string_val: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_18/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_18/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_19/beta"
      string_val: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_19/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_19/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_2/beta"
      string_val: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_2/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_2/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_20/beta"
      string_val: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_20/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_20/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_21/beta"
      string_val: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_21/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_21/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_22/beta"
      string_val: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_22/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_22/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_23/beta"
      string_val: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_23/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_23/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_24/beta"
      string_val: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_24/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_24/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_25/beta"
      string_val: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_25/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_25/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_26/beta"
      string_val: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_26/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_26/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_27/beta"
      string_val: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_27/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_27/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_28/beta"
      string_val: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_28/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_28/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_29/beta"
      string_val: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_29/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_29/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_3/beta"
      string_val: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_3/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_3/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_30/beta"
      string_val: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_30/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_30/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_31/beta"
      string_val: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_31/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_31/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_32/beta"
      string_val: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_32/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_32/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_33/beta"
      string_val: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_33/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_33/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_34/beta"
      string_val: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_34/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_34/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_35/beta"
      string_val: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_35/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_35/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_36/beta"
      string_val: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_36/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_36/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_37/beta"
      string_val: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_37/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_37/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_38/beta"
      string_val: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_38/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_38/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_39/beta"
      string_val: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_39/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_39/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_4/beta"
      string_val: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_4/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_4/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_40/beta"
      string_val: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_40/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_40/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_41/beta"
      string_val: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_41/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_41/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_42/beta"
      string_val: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_42/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_42/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_43/beta"
      string_val: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_43/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_43/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_44/beta"
      string_val: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_44/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_44/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_45/beta"
      string_val: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_45/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_45/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_46/beta"
      string_val: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_46/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_46/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_47/beta"
      string_val: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_47/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_47/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_48/beta"
      string_val: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_48/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_48/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_5/beta"
      string_val: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_5/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_5/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_6/beta"
      string_val: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_6/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_6/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_7/beta"
      string_val: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_7/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_7/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_8/beta"
      string_val: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_8/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_8/moving_variance"
      string_val: "FC-DenseNet56/BatchNorm_9/beta"
      string_val: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
      string_val: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
      string_val: "FC-DenseNet56/BatchNorm_9/moving_mean"
      string_val: "FC-DenseNet56/BatchNorm_9/moving_variance"
      string_val: "FC-DenseNet56/Conv/biases"
      string_val: "FC-DenseNet56/Conv/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv/weights"
      string_val: "FC-DenseNet56/Conv/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/biases"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/weights"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_1/biases"
      string_val: "FC-DenseNet56/Conv_1/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_1/weights"
      string_val: "FC-DenseNet56/Conv_1/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_10/biases"
      string_val: "FC-DenseNet56/Conv_10/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_10/weights"
      string_val: "FC-DenseNet56/Conv_10/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_11/biases"
      string_val: "FC-DenseNet56/Conv_11/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_11/weights"
      string_val: "FC-DenseNet56/Conv_11/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_12/biases"
      string_val: "FC-DenseNet56/Conv_12/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_12/weights"
      string_val: "FC-DenseNet56/Conv_12/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_13/biases"
      string_val: "FC-DenseNet56/Conv_13/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_13/weights"
      string_val: "FC-DenseNet56/Conv_13/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_14/biases"
      string_val: "FC-DenseNet56/Conv_14/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_14/weights"
      string_val: "FC-DenseNet56/Conv_14/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_15/biases"
      string_val: "FC-DenseNet56/Conv_15/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_15/weights"
      string_val: "FC-DenseNet56/Conv_15/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_16/biases"
      string_val: "FC-DenseNet56/Conv_16/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_16/weights"
      string_val: "FC-DenseNet56/Conv_16/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_17/biases"
      string_val: "FC-DenseNet56/Conv_17/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_17/weights"
      string_val: "FC-DenseNet56/Conv_17/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_18/biases"
      string_val: "FC-DenseNet56/Conv_18/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_18/weights"
      string_val: "FC-DenseNet56/Conv_18/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_19/biases"
      string_val: "FC-DenseNet56/Conv_19/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_19/weights"
      string_val: "FC-DenseNet56/Conv_19/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_2/biases"
      string_val: "FC-DenseNet56/Conv_2/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_2/weights"
      string_val: "FC-DenseNet56/Conv_2/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_20/biases"
      string_val: "FC-DenseNet56/Conv_20/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_20/weights"
      string_val: "FC-DenseNet56/Conv_20/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_21/biases"
      string_val: "FC-DenseNet56/Conv_21/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_21/weights"
      string_val: "FC-DenseNet56/Conv_21/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_22/biases"
      string_val: "FC-DenseNet56/Conv_22/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_22/weights"
      string_val: "FC-DenseNet56/Conv_22/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_23/biases"
      string_val: "FC-DenseNet56/Conv_23/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_23/weights"
      string_val: "FC-DenseNet56/Conv_23/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_24/biases"
      string_val: "FC-DenseNet56/Conv_24/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_24/weights"
      string_val: "FC-DenseNet56/Conv_24/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_25/biases"
      string_val: "FC-DenseNet56/Conv_25/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_25/weights"
      string_val: "FC-DenseNet56/Conv_25/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_26/biases"
      string_val: "FC-DenseNet56/Conv_26/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_26/weights"
      string_val: "FC-DenseNet56/Conv_26/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_27/biases"
      string_val: "FC-DenseNet56/Conv_27/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_27/weights"
      string_val: "FC-DenseNet56/Conv_27/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_28/biases"
      string_val: "FC-DenseNet56/Conv_28/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_28/weights"
      string_val: "FC-DenseNet56/Conv_28/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_29/biases"
      string_val: "FC-DenseNet56/Conv_29/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_29/weights"
      string_val: "FC-DenseNet56/Conv_29/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_3/biases"
      string_val: "FC-DenseNet56/Conv_3/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_3/weights"
      string_val: "FC-DenseNet56/Conv_3/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_30/biases"
      string_val: "FC-DenseNet56/Conv_30/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_30/weights"
      string_val: "FC-DenseNet56/Conv_30/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_31/biases"
      string_val: "FC-DenseNet56/Conv_31/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_31/weights"
      string_val: "FC-DenseNet56/Conv_31/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_32/biases"
      string_val: "FC-DenseNet56/Conv_32/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_32/weights"
      string_val: "FC-DenseNet56/Conv_32/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_33/biases"
      string_val: "FC-DenseNet56/Conv_33/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_33/weights"
      string_val: "FC-DenseNet56/Conv_33/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_34/biases"
      string_val: "FC-DenseNet56/Conv_34/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_34/weights"
      string_val: "FC-DenseNet56/Conv_34/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_35/biases"
      string_val: "FC-DenseNet56/Conv_35/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_35/weights"
      string_val: "FC-DenseNet56/Conv_35/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_36/biases"
      string_val: "FC-DenseNet56/Conv_36/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_36/weights"
      string_val: "FC-DenseNet56/Conv_36/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_37/biases"
      string_val: "FC-DenseNet56/Conv_37/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_37/weights"
      string_val: "FC-DenseNet56/Conv_37/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_38/biases"
      string_val: "FC-DenseNet56/Conv_38/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_38/weights"
      string_val: "FC-DenseNet56/Conv_38/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_39/biases"
      string_val: "FC-DenseNet56/Conv_39/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_39/weights"
      string_val: "FC-DenseNet56/Conv_39/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_4/biases"
      string_val: "FC-DenseNet56/Conv_4/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_4/weights"
      string_val: "FC-DenseNet56/Conv_4/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_40/biases"
      string_val: "FC-DenseNet56/Conv_40/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_40/weights"
      string_val: "FC-DenseNet56/Conv_40/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_41/biases"
      string_val: "FC-DenseNet56/Conv_41/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_41/weights"
      string_val: "FC-DenseNet56/Conv_41/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_42/biases"
      string_val: "FC-DenseNet56/Conv_42/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_42/weights"
      string_val: "FC-DenseNet56/Conv_42/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_43/biases"
      string_val: "FC-DenseNet56/Conv_43/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_43/weights"
      string_val: "FC-DenseNet56/Conv_43/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_44/biases"
      string_val: "FC-DenseNet56/Conv_44/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_44/weights"
      string_val: "FC-DenseNet56/Conv_44/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_45/biases"
      string_val: "FC-DenseNet56/Conv_45/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_45/weights"
      string_val: "FC-DenseNet56/Conv_45/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_46/biases"
      string_val: "FC-DenseNet56/Conv_46/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_46/weights"
      string_val: "FC-DenseNet56/Conv_46/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_47/biases"
      string_val: "FC-DenseNet56/Conv_47/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_47/weights"
      string_val: "FC-DenseNet56/Conv_47/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_48/biases"
      string_val: "FC-DenseNet56/Conv_48/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_48/weights"
      string_val: "FC-DenseNet56/Conv_48/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_5/biases"
      string_val: "FC-DenseNet56/Conv_5/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_5/weights"
      string_val: "FC-DenseNet56/Conv_5/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_6/biases"
      string_val: "FC-DenseNet56/Conv_6/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_6/weights"
      string_val: "FC-DenseNet56/Conv_6/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_7/biases"
      string_val: "FC-DenseNet56/Conv_7/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_7/weights"
      string_val: "FC-DenseNet56/Conv_7/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_8/biases"
      string_val: "FC-DenseNet56/Conv_8/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_8/weights"
      string_val: "FC-DenseNet56/Conv_8/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_9/biases"
      string_val: "FC-DenseNet56/Conv_9/biases/RMSProp"
      string_val: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
      string_val: "FC-DenseNet56/Conv_9/weights"
      string_val: "FC-DenseNet56/Conv_9/weights/RMSProp"
      string_val: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
      string_val: "FC-DenseNet56/first_conv/biases"
      string_val: "FC-DenseNet56/first_conv/biases/RMSProp"
      string_val: "FC-DenseNet56/first_conv/biases/RMSProp_1"
      string_val: "FC-DenseNet56/first_conv/weights"
      string_val: "FC-DenseNet56/first_conv/weights/RMSProp"
      string_val: "FC-DenseNet56/first_conv/weights/RMSProp_1"
      string_val: "FC-DenseNet56/logits/biases"
      string_val: "FC-DenseNet56/logits/biases/RMSProp"
      string_val: "FC-DenseNet56/logits/biases/RMSProp_1"
      string_val: "FC-DenseNet56/logits/weights"
      string_val: "FC-DenseNet56/logits/weights/RMSProp"
      string_val: "FC-DenseNet56/logits/weights/RMSProp_1"
    }
  }
}

name: "save/RestoreV2/shape_and_slices"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 581
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}

name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
device: "/device:CPU:0"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}

name: "save/Assign"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/beta"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_1"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp"
input: "save/RestoreV2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_2"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/beta/RMSProp_1"
input: "save/RestoreV2:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_3"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/moving_mean"
input: "save/RestoreV2:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_4"
op: "Assign"
input: "FC-DenseNet56/BatchNorm/moving_variance"
input: "save/RestoreV2:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_5"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/beta"
input: "save/RestoreV2:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_6"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp"
input: "save/RestoreV2:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_7"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/beta/RMSProp_1"
input: "save/RestoreV2:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_8"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/moving_mean"
input: "save/RestoreV2:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_9"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_1/moving_variance"
input: "save/RestoreV2:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_1/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_10"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/beta"
input: "save/RestoreV2:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_11"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp"
input: "save/RestoreV2:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_12"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/beta/RMSProp_1"
input: "save/RestoreV2:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_13"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/moving_mean"
input: "save/RestoreV2:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_14"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_10/moving_variance"
input: "save/RestoreV2:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_10/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_15"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/beta"
input: "save/RestoreV2:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_16"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp"
input: "save/RestoreV2:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_17"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/beta/RMSProp_1"
input: "save/RestoreV2:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_18"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/moving_mean"
input: "save/RestoreV2:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_19"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_11/moving_variance"
input: "save/RestoreV2:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_11/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_20"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/beta"
input: "save/RestoreV2:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_21"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp"
input: "save/RestoreV2:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_22"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/beta/RMSProp_1"
input: "save/RestoreV2:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_23"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/moving_mean"
input: "save/RestoreV2:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_24"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_12/moving_variance"
input: "save/RestoreV2:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_12/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_25"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/beta"
input: "save/RestoreV2:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_26"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp"
input: "save/RestoreV2:26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_27"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/beta/RMSProp_1"
input: "save/RestoreV2:27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_28"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/moving_mean"
input: "save/RestoreV2:28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_29"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_13/moving_variance"
input: "save/RestoreV2:29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_13/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_30"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/beta"
input: "save/RestoreV2:30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_31"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp"
input: "save/RestoreV2:31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_32"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/beta/RMSProp_1"
input: "save/RestoreV2:32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_33"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/moving_mean"
input: "save/RestoreV2:33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_34"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_14/moving_variance"
input: "save/RestoreV2:34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_14/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_35"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/beta"
input: "save/RestoreV2:35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_36"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp"
input: "save/RestoreV2:36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_37"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/beta/RMSProp_1"
input: "save/RestoreV2:37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_38"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/moving_mean"
input: "save/RestoreV2:38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_39"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_15/moving_variance"
input: "save/RestoreV2:39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_15/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_40"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/beta"
input: "save/RestoreV2:40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_41"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp"
input: "save/RestoreV2:41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_42"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/beta/RMSProp_1"
input: "save/RestoreV2:42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_43"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/moving_mean"
input: "save/RestoreV2:43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_44"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_16/moving_variance"
input: "save/RestoreV2:44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_16/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_45"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/beta"
input: "save/RestoreV2:45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_46"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp"
input: "save/RestoreV2:46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_47"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/beta/RMSProp_1"
input: "save/RestoreV2:47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_48"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/moving_mean"
input: "save/RestoreV2:48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_49"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_17/moving_variance"
input: "save/RestoreV2:49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_17/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_50"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/beta"
input: "save/RestoreV2:50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_51"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp"
input: "save/RestoreV2:51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_52"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/beta/RMSProp_1"
input: "save/RestoreV2:52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_53"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/moving_mean"
input: "save/RestoreV2:53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_54"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_18/moving_variance"
input: "save/RestoreV2:54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_18/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_55"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/beta"
input: "save/RestoreV2:55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_56"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp"
input: "save/RestoreV2:56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_57"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/beta/RMSProp_1"
input: "save/RestoreV2:57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_58"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/moving_mean"
input: "save/RestoreV2:58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_59"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_19/moving_variance"
input: "save/RestoreV2:59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_19/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_60"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/beta"
input: "save/RestoreV2:60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_61"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp"
input: "save/RestoreV2:61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_62"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/beta/RMSProp_1"
input: "save/RestoreV2:62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_63"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/moving_mean"
input: "save/RestoreV2:63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_64"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_2/moving_variance"
input: "save/RestoreV2:64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_2/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_65"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/beta"
input: "save/RestoreV2:65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_66"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp"
input: "save/RestoreV2:66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_67"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/beta/RMSProp_1"
input: "save/RestoreV2:67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_68"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/moving_mean"
input: "save/RestoreV2:68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_69"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_20/moving_variance"
input: "save/RestoreV2:69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_20/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_70"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/beta"
input: "save/RestoreV2:70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_71"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp"
input: "save/RestoreV2:71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_72"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/beta/RMSProp_1"
input: "save/RestoreV2:72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_73"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/moving_mean"
input: "save/RestoreV2:73"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_74"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_21/moving_variance"
input: "save/RestoreV2:74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_21/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_75"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/beta"
input: "save/RestoreV2:75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_76"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp"
input: "save/RestoreV2:76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_77"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/beta/RMSProp_1"
input: "save/RestoreV2:77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_78"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/moving_mean"
input: "save/RestoreV2:78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_79"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_22/moving_variance"
input: "save/RestoreV2:79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_22/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_80"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/beta"
input: "save/RestoreV2:80"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_81"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp"
input: "save/RestoreV2:81"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_82"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/beta/RMSProp_1"
input: "save/RestoreV2:82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_83"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/moving_mean"
input: "save/RestoreV2:83"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_84"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_23/moving_variance"
input: "save/RestoreV2:84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_23/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_85"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/beta"
input: "save/RestoreV2:85"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_86"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp"
input: "save/RestoreV2:86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_87"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/beta/RMSProp_1"
input: "save/RestoreV2:87"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_88"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/moving_mean"
input: "save/RestoreV2:88"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_89"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_24/moving_variance"
input: "save/RestoreV2:89"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_24/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_90"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/beta"
input: "save/RestoreV2:90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_91"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp"
input: "save/RestoreV2:91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_92"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/beta/RMSProp_1"
input: "save/RestoreV2:92"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_93"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/moving_mean"
input: "save/RestoreV2:93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_94"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_25/moving_variance"
input: "save/RestoreV2:94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_25/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_95"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/beta"
input: "save/RestoreV2:95"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_96"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp"
input: "save/RestoreV2:96"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_97"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/beta/RMSProp_1"
input: "save/RestoreV2:97"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_98"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/moving_mean"
input: "save/RestoreV2:98"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_99"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_26/moving_variance"
input: "save/RestoreV2:99"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_26/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_100"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/beta"
input: "save/RestoreV2:100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_101"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp"
input: "save/RestoreV2:101"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_102"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/beta/RMSProp_1"
input: "save/RestoreV2:102"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_103"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/moving_mean"
input: "save/RestoreV2:103"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_104"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_27/moving_variance"
input: "save/RestoreV2:104"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_27/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_105"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/beta"
input: "save/RestoreV2:105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_106"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp"
input: "save/RestoreV2:106"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_107"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/beta/RMSProp_1"
input: "save/RestoreV2:107"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_108"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/moving_mean"
input: "save/RestoreV2:108"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_109"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_28/moving_variance"
input: "save/RestoreV2:109"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_28/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_110"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/beta"
input: "save/RestoreV2:110"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_111"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp"
input: "save/RestoreV2:111"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_112"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/beta/RMSProp_1"
input: "save/RestoreV2:112"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_113"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/moving_mean"
input: "save/RestoreV2:113"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_114"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_29/moving_variance"
input: "save/RestoreV2:114"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_29/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_115"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/beta"
input: "save/RestoreV2:115"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_116"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp"
input: "save/RestoreV2:116"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_117"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/beta/RMSProp_1"
input: "save/RestoreV2:117"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_118"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/moving_mean"
input: "save/RestoreV2:118"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_119"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_3/moving_variance"
input: "save/RestoreV2:119"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_3/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_120"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/beta"
input: "save/RestoreV2:120"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_121"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp"
input: "save/RestoreV2:121"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_122"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/beta/RMSProp_1"
input: "save/RestoreV2:122"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_123"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/moving_mean"
input: "save/RestoreV2:123"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_124"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_30/moving_variance"
input: "save/RestoreV2:124"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_30/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_125"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/beta"
input: "save/RestoreV2:125"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_126"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp"
input: "save/RestoreV2:126"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_127"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/beta/RMSProp_1"
input: "save/RestoreV2:127"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_128"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/moving_mean"
input: "save/RestoreV2:128"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_129"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_31/moving_variance"
input: "save/RestoreV2:129"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_31/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_130"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/beta"
input: "save/RestoreV2:130"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_131"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp"
input: "save/RestoreV2:131"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_132"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/beta/RMSProp_1"
input: "save/RestoreV2:132"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_133"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/moving_mean"
input: "save/RestoreV2:133"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_134"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_32/moving_variance"
input: "save/RestoreV2:134"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_32/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_135"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/beta"
input: "save/RestoreV2:135"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_136"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp"
input: "save/RestoreV2:136"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_137"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/beta/RMSProp_1"
input: "save/RestoreV2:137"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_138"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/moving_mean"
input: "save/RestoreV2:138"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_139"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_33/moving_variance"
input: "save/RestoreV2:139"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_33/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_140"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/beta"
input: "save/RestoreV2:140"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_141"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp"
input: "save/RestoreV2:141"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_142"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/beta/RMSProp_1"
input: "save/RestoreV2:142"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_143"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/moving_mean"
input: "save/RestoreV2:143"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_144"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_34/moving_variance"
input: "save/RestoreV2:144"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_34/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_145"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/beta"
input: "save/RestoreV2:145"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_146"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp"
input: "save/RestoreV2:146"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_147"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/beta/RMSProp_1"
input: "save/RestoreV2:147"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_148"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/moving_mean"
input: "save/RestoreV2:148"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_149"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_35/moving_variance"
input: "save/RestoreV2:149"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_35/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_150"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/beta"
input: "save/RestoreV2:150"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_151"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp"
input: "save/RestoreV2:151"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_152"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/beta/RMSProp_1"
input: "save/RestoreV2:152"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_153"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/moving_mean"
input: "save/RestoreV2:153"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_154"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_36/moving_variance"
input: "save/RestoreV2:154"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_36/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_155"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/beta"
input: "save/RestoreV2:155"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_156"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp"
input: "save/RestoreV2:156"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_157"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/beta/RMSProp_1"
input: "save/RestoreV2:157"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_158"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/moving_mean"
input: "save/RestoreV2:158"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_159"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_37/moving_variance"
input: "save/RestoreV2:159"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_37/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_160"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/beta"
input: "save/RestoreV2:160"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_161"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp"
input: "save/RestoreV2:161"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_162"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/beta/RMSProp_1"
input: "save/RestoreV2:162"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_163"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/moving_mean"
input: "save/RestoreV2:163"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_164"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_38/moving_variance"
input: "save/RestoreV2:164"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_38/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_165"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/beta"
input: "save/RestoreV2:165"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_166"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp"
input: "save/RestoreV2:166"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_167"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/beta/RMSProp_1"
input: "save/RestoreV2:167"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_168"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/moving_mean"
input: "save/RestoreV2:168"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_169"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_39/moving_variance"
input: "save/RestoreV2:169"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_39/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_170"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/beta"
input: "save/RestoreV2:170"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_171"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp"
input: "save/RestoreV2:171"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_172"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/beta/RMSProp_1"
input: "save/RestoreV2:172"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_173"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/moving_mean"
input: "save/RestoreV2:173"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_174"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_4/moving_variance"
input: "save/RestoreV2:174"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_4/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_175"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/beta"
input: "save/RestoreV2:175"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_176"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp"
input: "save/RestoreV2:176"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_177"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/beta/RMSProp_1"
input: "save/RestoreV2:177"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_178"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/moving_mean"
input: "save/RestoreV2:178"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_179"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_40/moving_variance"
input: "save/RestoreV2:179"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_40/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_180"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/beta"
input: "save/RestoreV2:180"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_181"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp"
input: "save/RestoreV2:181"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_182"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/beta/RMSProp_1"
input: "save/RestoreV2:182"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_183"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/moving_mean"
input: "save/RestoreV2:183"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_184"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_41/moving_variance"
input: "save/RestoreV2:184"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_41/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_185"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/beta"
input: "save/RestoreV2:185"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_186"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp"
input: "save/RestoreV2:186"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_187"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/beta/RMSProp_1"
input: "save/RestoreV2:187"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_188"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/moving_mean"
input: "save/RestoreV2:188"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_189"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_42/moving_variance"
input: "save/RestoreV2:189"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_42/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_190"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/beta"
input: "save/RestoreV2:190"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_191"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp"
input: "save/RestoreV2:191"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_192"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/beta/RMSProp_1"
input: "save/RestoreV2:192"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_193"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/moving_mean"
input: "save/RestoreV2:193"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_194"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_43/moving_variance"
input: "save/RestoreV2:194"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_43/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_195"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/beta"
input: "save/RestoreV2:195"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_196"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp"
input: "save/RestoreV2:196"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_197"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/beta/RMSProp_1"
input: "save/RestoreV2:197"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_198"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/moving_mean"
input: "save/RestoreV2:198"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_199"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_44/moving_variance"
input: "save/RestoreV2:199"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_44/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_200"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/beta"
input: "save/RestoreV2:200"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_201"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp"
input: "save/RestoreV2:201"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_202"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/beta/RMSProp_1"
input: "save/RestoreV2:202"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_203"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/moving_mean"
input: "save/RestoreV2:203"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_204"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_45/moving_variance"
input: "save/RestoreV2:204"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_45/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_205"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/beta"
input: "save/RestoreV2:205"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_206"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp"
input: "save/RestoreV2:206"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_207"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/beta/RMSProp_1"
input: "save/RestoreV2:207"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_208"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/moving_mean"
input: "save/RestoreV2:208"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_209"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_46/moving_variance"
input: "save/RestoreV2:209"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_46/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_210"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/beta"
input: "save/RestoreV2:210"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_211"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp"
input: "save/RestoreV2:211"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_212"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/beta/RMSProp_1"
input: "save/RestoreV2:212"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_213"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/moving_mean"
input: "save/RestoreV2:213"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_214"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_47/moving_variance"
input: "save/RestoreV2:214"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_47/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_215"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/beta"
input: "save/RestoreV2:215"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_216"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp"
input: "save/RestoreV2:216"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_217"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/beta/RMSProp_1"
input: "save/RestoreV2:217"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_218"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/moving_mean"
input: "save/RestoreV2:218"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_219"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_48/moving_variance"
input: "save/RestoreV2:219"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_48/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_220"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/beta"
input: "save/RestoreV2:220"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_221"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp"
input: "save/RestoreV2:221"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_222"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/beta/RMSProp_1"
input: "save/RestoreV2:222"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_223"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/moving_mean"
input: "save/RestoreV2:223"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_224"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_5/moving_variance"
input: "save/RestoreV2:224"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_5/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_225"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/beta"
input: "save/RestoreV2:225"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_226"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp"
input: "save/RestoreV2:226"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_227"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/beta/RMSProp_1"
input: "save/RestoreV2:227"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_228"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/moving_mean"
input: "save/RestoreV2:228"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_229"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_6/moving_variance"
input: "save/RestoreV2:229"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_6/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_230"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/beta"
input: "save/RestoreV2:230"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_231"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp"
input: "save/RestoreV2:231"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_232"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/beta/RMSProp_1"
input: "save/RestoreV2:232"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_233"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/moving_mean"
input: "save/RestoreV2:233"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_234"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_7/moving_variance"
input: "save/RestoreV2:234"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_7/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_235"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/beta"
input: "save/RestoreV2:235"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_236"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp"
input: "save/RestoreV2:236"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_237"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/beta/RMSProp_1"
input: "save/RestoreV2:237"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_238"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/moving_mean"
input: "save/RestoreV2:238"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_239"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_8/moving_variance"
input: "save/RestoreV2:239"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_8/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_240"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/beta"
input: "save/RestoreV2:240"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_241"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp"
input: "save/RestoreV2:241"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_242"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/beta/RMSProp_1"
input: "save/RestoreV2:242"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/beta"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_243"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/moving_mean"
input: "save/RestoreV2:243"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_mean"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_244"
op: "Assign"
input: "FC-DenseNet56/BatchNorm_9/moving_variance"
input: "save/RestoreV2:244"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/BatchNorm_9/moving_variance"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_245"
op: "Assign"
input: "FC-DenseNet56/Conv/biases"
input: "save/RestoreV2:245"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_246"
op: "Assign"
input: "FC-DenseNet56/Conv/biases/RMSProp"
input: "save/RestoreV2:246"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_247"
op: "Assign"
input: "FC-DenseNet56/Conv/biases/RMSProp_1"
input: "save/RestoreV2:247"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_248"
op: "Assign"
input: "FC-DenseNet56/Conv/weights"
input: "save/RestoreV2:248"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_249"
op: "Assign"
input: "FC-DenseNet56/Conv/weights/RMSProp"
input: "save/RestoreV2:249"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_250"
op: "Assign"
input: "FC-DenseNet56/Conv/weights/RMSProp_1"
input: "save/RestoreV2:250"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_251"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/biases"
input: "save/RestoreV2:251"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_252"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp"
input: "save/RestoreV2:252"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_253"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1"
input: "save/RestoreV2:253"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_254"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/weights"
input: "save/RestoreV2:254"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_255"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp"
input: "save/RestoreV2:255"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_256"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1"
input: "save/RestoreV2:256"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_257"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/biases"
input: "save/RestoreV2:257"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_258"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp"
input: "save/RestoreV2:258"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_259"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1"
input: "save/RestoreV2:259"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_260"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/weights"
input: "save/RestoreV2:260"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_261"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp"
input: "save/RestoreV2:261"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_262"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1"
input: "save/RestoreV2:262"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_263"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/biases"
input: "save/RestoreV2:263"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_264"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp"
input: "save/RestoreV2:264"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_265"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1"
input: "save/RestoreV2:265"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_266"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/weights"
input: "save/RestoreV2:266"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_267"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp"
input: "save/RestoreV2:267"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_268"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1"
input: "save/RestoreV2:268"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_269"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/biases"
input: "save/RestoreV2:269"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_270"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp"
input: "save/RestoreV2:270"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_271"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1"
input: "save/RestoreV2:271"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_272"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/weights"
input: "save/RestoreV2:272"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_273"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp"
input: "save/RestoreV2:273"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_274"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1"
input: "save/RestoreV2:274"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_275"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/biases"
input: "save/RestoreV2:275"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_276"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp"
input: "save/RestoreV2:276"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_277"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1"
input: "save/RestoreV2:277"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_278"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/weights"
input: "save/RestoreV2:278"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_279"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp"
input: "save/RestoreV2:279"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_280"
op: "Assign"
input: "FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1"
input: "save/RestoreV2:280"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv2d_transpose_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_281"
op: "Assign"
input: "FC-DenseNet56/Conv_1/biases"
input: "save/RestoreV2:281"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_282"
op: "Assign"
input: "FC-DenseNet56/Conv_1/biases/RMSProp"
input: "save/RestoreV2:282"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_283"
op: "Assign"
input: "FC-DenseNet56/Conv_1/biases/RMSProp_1"
input: "save/RestoreV2:283"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_284"
op: "Assign"
input: "FC-DenseNet56/Conv_1/weights"
input: "save/RestoreV2:284"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_285"
op: "Assign"
input: "FC-DenseNet56/Conv_1/weights/RMSProp"
input: "save/RestoreV2:285"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_286"
op: "Assign"
input: "FC-DenseNet56/Conv_1/weights/RMSProp_1"
input: "save/RestoreV2:286"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_1/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_287"
op: "Assign"
input: "FC-DenseNet56/Conv_10/biases"
input: "save/RestoreV2:287"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_288"
op: "Assign"
input: "FC-DenseNet56/Conv_10/biases/RMSProp"
input: "save/RestoreV2:288"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_289"
op: "Assign"
input: "FC-DenseNet56/Conv_10/biases/RMSProp_1"
input: "save/RestoreV2:289"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_290"
op: "Assign"
input: "FC-DenseNet56/Conv_10/weights"
input: "save/RestoreV2:290"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_291"
op: "Assign"
input: "FC-DenseNet56/Conv_10/weights/RMSProp"
input: "save/RestoreV2:291"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_292"
op: "Assign"
input: "FC-DenseNet56/Conv_10/weights/RMSProp_1"
input: "save/RestoreV2:292"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_10/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_293"
op: "Assign"
input: "FC-DenseNet56/Conv_11/biases"
input: "save/RestoreV2:293"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_294"
op: "Assign"
input: "FC-DenseNet56/Conv_11/biases/RMSProp"
input: "save/RestoreV2:294"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_295"
op: "Assign"
input: "FC-DenseNet56/Conv_11/biases/RMSProp_1"
input: "save/RestoreV2:295"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_296"
op: "Assign"
input: "FC-DenseNet56/Conv_11/weights"
input: "save/RestoreV2:296"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_297"
op: "Assign"
input: "FC-DenseNet56/Conv_11/weights/RMSProp"
input: "save/RestoreV2:297"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_298"
op: "Assign"
input: "FC-DenseNet56/Conv_11/weights/RMSProp_1"
input: "save/RestoreV2:298"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_11/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_299"
op: "Assign"
input: "FC-DenseNet56/Conv_12/biases"
input: "save/RestoreV2:299"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_300"
op: "Assign"
input: "FC-DenseNet56/Conv_12/biases/RMSProp"
input: "save/RestoreV2:300"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_301"
op: "Assign"
input: "FC-DenseNet56/Conv_12/biases/RMSProp_1"
input: "save/RestoreV2:301"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_302"
op: "Assign"
input: "FC-DenseNet56/Conv_12/weights"
input: "save/RestoreV2:302"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_303"
op: "Assign"
input: "FC-DenseNet56/Conv_12/weights/RMSProp"
input: "save/RestoreV2:303"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_304"
op: "Assign"
input: "FC-DenseNet56/Conv_12/weights/RMSProp_1"
input: "save/RestoreV2:304"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_12/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_305"
op: "Assign"
input: "FC-DenseNet56/Conv_13/biases"
input: "save/RestoreV2:305"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_306"
op: "Assign"
input: "FC-DenseNet56/Conv_13/biases/RMSProp"
input: "save/RestoreV2:306"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_307"
op: "Assign"
input: "FC-DenseNet56/Conv_13/biases/RMSProp_1"
input: "save/RestoreV2:307"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_308"
op: "Assign"
input: "FC-DenseNet56/Conv_13/weights"
input: "save/RestoreV2:308"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_309"
op: "Assign"
input: "FC-DenseNet56/Conv_13/weights/RMSProp"
input: "save/RestoreV2:309"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_310"
op: "Assign"
input: "FC-DenseNet56/Conv_13/weights/RMSProp_1"
input: "save/RestoreV2:310"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_13/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_311"
op: "Assign"
input: "FC-DenseNet56/Conv_14/biases"
input: "save/RestoreV2:311"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_312"
op: "Assign"
input: "FC-DenseNet56/Conv_14/biases/RMSProp"
input: "save/RestoreV2:312"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_313"
op: "Assign"
input: "FC-DenseNet56/Conv_14/biases/RMSProp_1"
input: "save/RestoreV2:313"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_314"
op: "Assign"
input: "FC-DenseNet56/Conv_14/weights"
input: "save/RestoreV2:314"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_315"
op: "Assign"
input: "FC-DenseNet56/Conv_14/weights/RMSProp"
input: "save/RestoreV2:315"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_316"
op: "Assign"
input: "FC-DenseNet56/Conv_14/weights/RMSProp_1"
input: "save/RestoreV2:316"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_14/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_317"
op: "Assign"
input: "FC-DenseNet56/Conv_15/biases"
input: "save/RestoreV2:317"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_318"
op: "Assign"
input: "FC-DenseNet56/Conv_15/biases/RMSProp"
input: "save/RestoreV2:318"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_319"
op: "Assign"
input: "FC-DenseNet56/Conv_15/biases/RMSProp_1"
input: "save/RestoreV2:319"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_320"
op: "Assign"
input: "FC-DenseNet56/Conv_15/weights"
input: "save/RestoreV2:320"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_321"
op: "Assign"
input: "FC-DenseNet56/Conv_15/weights/RMSProp"
input: "save/RestoreV2:321"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_322"
op: "Assign"
input: "FC-DenseNet56/Conv_15/weights/RMSProp_1"
input: "save/RestoreV2:322"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_15/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_323"
op: "Assign"
input: "FC-DenseNet56/Conv_16/biases"
input: "save/RestoreV2:323"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_324"
op: "Assign"
input: "FC-DenseNet56/Conv_16/biases/RMSProp"
input: "save/RestoreV2:324"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_325"
op: "Assign"
input: "FC-DenseNet56/Conv_16/biases/RMSProp_1"
input: "save/RestoreV2:325"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_326"
op: "Assign"
input: "FC-DenseNet56/Conv_16/weights"
input: "save/RestoreV2:326"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_327"
op: "Assign"
input: "FC-DenseNet56/Conv_16/weights/RMSProp"
input: "save/RestoreV2:327"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_328"
op: "Assign"
input: "FC-DenseNet56/Conv_16/weights/RMSProp_1"
input: "save/RestoreV2:328"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_16/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_329"
op: "Assign"
input: "FC-DenseNet56/Conv_17/biases"
input: "save/RestoreV2:329"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_330"
op: "Assign"
input: "FC-DenseNet56/Conv_17/biases/RMSProp"
input: "save/RestoreV2:330"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_331"
op: "Assign"
input: "FC-DenseNet56/Conv_17/biases/RMSProp_1"
input: "save/RestoreV2:331"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_332"
op: "Assign"
input: "FC-DenseNet56/Conv_17/weights"
input: "save/RestoreV2:332"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_333"
op: "Assign"
input: "FC-DenseNet56/Conv_17/weights/RMSProp"
input: "save/RestoreV2:333"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_334"
op: "Assign"
input: "FC-DenseNet56/Conv_17/weights/RMSProp_1"
input: "save/RestoreV2:334"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_17/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_335"
op: "Assign"
input: "FC-DenseNet56/Conv_18/biases"
input: "save/RestoreV2:335"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_336"
op: "Assign"
input: "FC-DenseNet56/Conv_18/biases/RMSProp"
input: "save/RestoreV2:336"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_337"
op: "Assign"
input: "FC-DenseNet56/Conv_18/biases/RMSProp_1"
input: "save/RestoreV2:337"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_338"
op: "Assign"
input: "FC-DenseNet56/Conv_18/weights"
input: "save/RestoreV2:338"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_339"
op: "Assign"
input: "FC-DenseNet56/Conv_18/weights/RMSProp"
input: "save/RestoreV2:339"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_340"
op: "Assign"
input: "FC-DenseNet56/Conv_18/weights/RMSProp_1"
input: "save/RestoreV2:340"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_18/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_341"
op: "Assign"
input: "FC-DenseNet56/Conv_19/biases"
input: "save/RestoreV2:341"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_342"
op: "Assign"
input: "FC-DenseNet56/Conv_19/biases/RMSProp"
input: "save/RestoreV2:342"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_343"
op: "Assign"
input: "FC-DenseNet56/Conv_19/biases/RMSProp_1"
input: "save/RestoreV2:343"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_344"
op: "Assign"
input: "FC-DenseNet56/Conv_19/weights"
input: "save/RestoreV2:344"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_345"
op: "Assign"
input: "FC-DenseNet56/Conv_19/weights/RMSProp"
input: "save/RestoreV2:345"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_346"
op: "Assign"
input: "FC-DenseNet56/Conv_19/weights/RMSProp_1"
input: "save/RestoreV2:346"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_19/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_347"
op: "Assign"
input: "FC-DenseNet56/Conv_2/biases"
input: "save/RestoreV2:347"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_348"
op: "Assign"
input: "FC-DenseNet56/Conv_2/biases/RMSProp"
input: "save/RestoreV2:348"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_349"
op: "Assign"
input: "FC-DenseNet56/Conv_2/biases/RMSProp_1"
input: "save/RestoreV2:349"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_350"
op: "Assign"
input: "FC-DenseNet56/Conv_2/weights"
input: "save/RestoreV2:350"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_351"
op: "Assign"
input: "FC-DenseNet56/Conv_2/weights/RMSProp"
input: "save/RestoreV2:351"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_352"
op: "Assign"
input: "FC-DenseNet56/Conv_2/weights/RMSProp_1"
input: "save/RestoreV2:352"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_2/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_353"
op: "Assign"
input: "FC-DenseNet56/Conv_20/biases"
input: "save/RestoreV2:353"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_354"
op: "Assign"
input: "FC-DenseNet56/Conv_20/biases/RMSProp"
input: "save/RestoreV2:354"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_355"
op: "Assign"
input: "FC-DenseNet56/Conv_20/biases/RMSProp_1"
input: "save/RestoreV2:355"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_356"
op: "Assign"
input: "FC-DenseNet56/Conv_20/weights"
input: "save/RestoreV2:356"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_357"
op: "Assign"
input: "FC-DenseNet56/Conv_20/weights/RMSProp"
input: "save/RestoreV2:357"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_358"
op: "Assign"
input: "FC-DenseNet56/Conv_20/weights/RMSProp_1"
input: "save/RestoreV2:358"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_20/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_359"
op: "Assign"
input: "FC-DenseNet56/Conv_21/biases"
input: "save/RestoreV2:359"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_360"
op: "Assign"
input: "FC-DenseNet56/Conv_21/biases/RMSProp"
input: "save/RestoreV2:360"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_361"
op: "Assign"
input: "FC-DenseNet56/Conv_21/biases/RMSProp_1"
input: "save/RestoreV2:361"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_362"
op: "Assign"
input: "FC-DenseNet56/Conv_21/weights"
input: "save/RestoreV2:362"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_363"
op: "Assign"
input: "FC-DenseNet56/Conv_21/weights/RMSProp"
input: "save/RestoreV2:363"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_364"
op: "Assign"
input: "FC-DenseNet56/Conv_21/weights/RMSProp_1"
input: "save/RestoreV2:364"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_21/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_365"
op: "Assign"
input: "FC-DenseNet56/Conv_22/biases"
input: "save/RestoreV2:365"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_366"
op: "Assign"
input: "FC-DenseNet56/Conv_22/biases/RMSProp"
input: "save/RestoreV2:366"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_367"
op: "Assign"
input: "FC-DenseNet56/Conv_22/biases/RMSProp_1"
input: "save/RestoreV2:367"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_368"
op: "Assign"
input: "FC-DenseNet56/Conv_22/weights"
input: "save/RestoreV2:368"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_369"
op: "Assign"
input: "FC-DenseNet56/Conv_22/weights/RMSProp"
input: "save/RestoreV2:369"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_370"
op: "Assign"
input: "FC-DenseNet56/Conv_22/weights/RMSProp_1"
input: "save/RestoreV2:370"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_22/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_371"
op: "Assign"
input: "FC-DenseNet56/Conv_23/biases"
input: "save/RestoreV2:371"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_372"
op: "Assign"
input: "FC-DenseNet56/Conv_23/biases/RMSProp"
input: "save/RestoreV2:372"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_373"
op: "Assign"
input: "FC-DenseNet56/Conv_23/biases/RMSProp_1"
input: "save/RestoreV2:373"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_374"
op: "Assign"
input: "FC-DenseNet56/Conv_23/weights"
input: "save/RestoreV2:374"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_375"
op: "Assign"
input: "FC-DenseNet56/Conv_23/weights/RMSProp"
input: "save/RestoreV2:375"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_376"
op: "Assign"
input: "FC-DenseNet56/Conv_23/weights/RMSProp_1"
input: "save/RestoreV2:376"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_23/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_377"
op: "Assign"
input: "FC-DenseNet56/Conv_24/biases"
input: "save/RestoreV2:377"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_378"
op: "Assign"
input: "FC-DenseNet56/Conv_24/biases/RMSProp"
input: "save/RestoreV2:378"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_379"
op: "Assign"
input: "FC-DenseNet56/Conv_24/biases/RMSProp_1"
input: "save/RestoreV2:379"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_380"
op: "Assign"
input: "FC-DenseNet56/Conv_24/weights"
input: "save/RestoreV2:380"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_381"
op: "Assign"
input: "FC-DenseNet56/Conv_24/weights/RMSProp"
input: "save/RestoreV2:381"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_382"
op: "Assign"
input: "FC-DenseNet56/Conv_24/weights/RMSProp_1"
input: "save/RestoreV2:382"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_24/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_383"
op: "Assign"
input: "FC-DenseNet56/Conv_25/biases"
input: "save/RestoreV2:383"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_384"
op: "Assign"
input: "FC-DenseNet56/Conv_25/biases/RMSProp"
input: "save/RestoreV2:384"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_385"
op: "Assign"
input: "FC-DenseNet56/Conv_25/biases/RMSProp_1"
input: "save/RestoreV2:385"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_386"
op: "Assign"
input: "FC-DenseNet56/Conv_25/weights"
input: "save/RestoreV2:386"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_387"
op: "Assign"
input: "FC-DenseNet56/Conv_25/weights/RMSProp"
input: "save/RestoreV2:387"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_388"
op: "Assign"
input: "FC-DenseNet56/Conv_25/weights/RMSProp_1"
input: "save/RestoreV2:388"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_25/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_389"
op: "Assign"
input: "FC-DenseNet56/Conv_26/biases"
input: "save/RestoreV2:389"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_390"
op: "Assign"
input: "FC-DenseNet56/Conv_26/biases/RMSProp"
input: "save/RestoreV2:390"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_391"
op: "Assign"
input: "FC-DenseNet56/Conv_26/biases/RMSProp_1"
input: "save/RestoreV2:391"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_392"
op: "Assign"
input: "FC-DenseNet56/Conv_26/weights"
input: "save/RestoreV2:392"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_393"
op: "Assign"
input: "FC-DenseNet56/Conv_26/weights/RMSProp"
input: "save/RestoreV2:393"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_394"
op: "Assign"
input: "FC-DenseNet56/Conv_26/weights/RMSProp_1"
input: "save/RestoreV2:394"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_26/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_395"
op: "Assign"
input: "FC-DenseNet56/Conv_27/biases"
input: "save/RestoreV2:395"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_396"
op: "Assign"
input: "FC-DenseNet56/Conv_27/biases/RMSProp"
input: "save/RestoreV2:396"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_397"
op: "Assign"
input: "FC-DenseNet56/Conv_27/biases/RMSProp_1"
input: "save/RestoreV2:397"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_398"
op: "Assign"
input: "FC-DenseNet56/Conv_27/weights"
input: "save/RestoreV2:398"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_399"
op: "Assign"
input: "FC-DenseNet56/Conv_27/weights/RMSProp"
input: "save/RestoreV2:399"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_400"
op: "Assign"
input: "FC-DenseNet56/Conv_27/weights/RMSProp_1"
input: "save/RestoreV2:400"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_27/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_401"
op: "Assign"
input: "FC-DenseNet56/Conv_28/biases"
input: "save/RestoreV2:401"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_402"
op: "Assign"
input: "FC-DenseNet56/Conv_28/biases/RMSProp"
input: "save/RestoreV2:402"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_403"
op: "Assign"
input: "FC-DenseNet56/Conv_28/biases/RMSProp_1"
input: "save/RestoreV2:403"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_404"
op: "Assign"
input: "FC-DenseNet56/Conv_28/weights"
input: "save/RestoreV2:404"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_405"
op: "Assign"
input: "FC-DenseNet56/Conv_28/weights/RMSProp"
input: "save/RestoreV2:405"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_406"
op: "Assign"
input: "FC-DenseNet56/Conv_28/weights/RMSProp_1"
input: "save/RestoreV2:406"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_28/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_407"
op: "Assign"
input: "FC-DenseNet56/Conv_29/biases"
input: "save/RestoreV2:407"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_408"
op: "Assign"
input: "FC-DenseNet56/Conv_29/biases/RMSProp"
input: "save/RestoreV2:408"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_409"
op: "Assign"
input: "FC-DenseNet56/Conv_29/biases/RMSProp_1"
input: "save/RestoreV2:409"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_410"
op: "Assign"
input: "FC-DenseNet56/Conv_29/weights"
input: "save/RestoreV2:410"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_411"
op: "Assign"
input: "FC-DenseNet56/Conv_29/weights/RMSProp"
input: "save/RestoreV2:411"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_412"
op: "Assign"
input: "FC-DenseNet56/Conv_29/weights/RMSProp_1"
input: "save/RestoreV2:412"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_29/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_413"
op: "Assign"
input: "FC-DenseNet56/Conv_3/biases"
input: "save/RestoreV2:413"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_414"
op: "Assign"
input: "FC-DenseNet56/Conv_3/biases/RMSProp"
input: "save/RestoreV2:414"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_415"
op: "Assign"
input: "FC-DenseNet56/Conv_3/biases/RMSProp_1"
input: "save/RestoreV2:415"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_416"
op: "Assign"
input: "FC-DenseNet56/Conv_3/weights"
input: "save/RestoreV2:416"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_417"
op: "Assign"
input: "FC-DenseNet56/Conv_3/weights/RMSProp"
input: "save/RestoreV2:417"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_418"
op: "Assign"
input: "FC-DenseNet56/Conv_3/weights/RMSProp_1"
input: "save/RestoreV2:418"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_3/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_419"
op: "Assign"
input: "FC-DenseNet56/Conv_30/biases"
input: "save/RestoreV2:419"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_420"
op: "Assign"
input: "FC-DenseNet56/Conv_30/biases/RMSProp"
input: "save/RestoreV2:420"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_421"
op: "Assign"
input: "FC-DenseNet56/Conv_30/biases/RMSProp_1"
input: "save/RestoreV2:421"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_422"
op: "Assign"
input: "FC-DenseNet56/Conv_30/weights"
input: "save/RestoreV2:422"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_423"
op: "Assign"
input: "FC-DenseNet56/Conv_30/weights/RMSProp"
input: "save/RestoreV2:423"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_424"
op: "Assign"
input: "FC-DenseNet56/Conv_30/weights/RMSProp_1"
input: "save/RestoreV2:424"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_30/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_425"
op: "Assign"
input: "FC-DenseNet56/Conv_31/biases"
input: "save/RestoreV2:425"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_426"
op: "Assign"
input: "FC-DenseNet56/Conv_31/biases/RMSProp"
input: "save/RestoreV2:426"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_427"
op: "Assign"
input: "FC-DenseNet56/Conv_31/biases/RMSProp_1"
input: "save/RestoreV2:427"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_428"
op: "Assign"
input: "FC-DenseNet56/Conv_31/weights"
input: "save/RestoreV2:428"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_429"
op: "Assign"
input: "FC-DenseNet56/Conv_31/weights/RMSProp"
input: "save/RestoreV2:429"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_430"
op: "Assign"
input: "FC-DenseNet56/Conv_31/weights/RMSProp_1"
input: "save/RestoreV2:430"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_31/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_431"
op: "Assign"
input: "FC-DenseNet56/Conv_32/biases"
input: "save/RestoreV2:431"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_432"
op: "Assign"
input: "FC-DenseNet56/Conv_32/biases/RMSProp"
input: "save/RestoreV2:432"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_433"
op: "Assign"
input: "FC-DenseNet56/Conv_32/biases/RMSProp_1"
input: "save/RestoreV2:433"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_434"
op: "Assign"
input: "FC-DenseNet56/Conv_32/weights"
input: "save/RestoreV2:434"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_435"
op: "Assign"
input: "FC-DenseNet56/Conv_32/weights/RMSProp"
input: "save/RestoreV2:435"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_436"
op: "Assign"
input: "FC-DenseNet56/Conv_32/weights/RMSProp_1"
input: "save/RestoreV2:436"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_32/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_437"
op: "Assign"
input: "FC-DenseNet56/Conv_33/biases"
input: "save/RestoreV2:437"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_438"
op: "Assign"
input: "FC-DenseNet56/Conv_33/biases/RMSProp"
input: "save/RestoreV2:438"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_439"
op: "Assign"
input: "FC-DenseNet56/Conv_33/biases/RMSProp_1"
input: "save/RestoreV2:439"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_440"
op: "Assign"
input: "FC-DenseNet56/Conv_33/weights"
input: "save/RestoreV2:440"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_441"
op: "Assign"
input: "FC-DenseNet56/Conv_33/weights/RMSProp"
input: "save/RestoreV2:441"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_442"
op: "Assign"
input: "FC-DenseNet56/Conv_33/weights/RMSProp_1"
input: "save/RestoreV2:442"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_33/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_443"
op: "Assign"
input: "FC-DenseNet56/Conv_34/biases"
input: "save/RestoreV2:443"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_444"
op: "Assign"
input: "FC-DenseNet56/Conv_34/biases/RMSProp"
input: "save/RestoreV2:444"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_445"
op: "Assign"
input: "FC-DenseNet56/Conv_34/biases/RMSProp_1"
input: "save/RestoreV2:445"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_446"
op: "Assign"
input: "FC-DenseNet56/Conv_34/weights"
input: "save/RestoreV2:446"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_447"
op: "Assign"
input: "FC-DenseNet56/Conv_34/weights/RMSProp"
input: "save/RestoreV2:447"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_448"
op: "Assign"
input: "FC-DenseNet56/Conv_34/weights/RMSProp_1"
input: "save/RestoreV2:448"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_34/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_449"
op: "Assign"
input: "FC-DenseNet56/Conv_35/biases"
input: "save/RestoreV2:449"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_450"
op: "Assign"
input: "FC-DenseNet56/Conv_35/biases/RMSProp"
input: "save/RestoreV2:450"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_451"
op: "Assign"
input: "FC-DenseNet56/Conv_35/biases/RMSProp_1"
input: "save/RestoreV2:451"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_452"
op: "Assign"
input: "FC-DenseNet56/Conv_35/weights"
input: "save/RestoreV2:452"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_453"
op: "Assign"
input: "FC-DenseNet56/Conv_35/weights/RMSProp"
input: "save/RestoreV2:453"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_454"
op: "Assign"
input: "FC-DenseNet56/Conv_35/weights/RMSProp_1"
input: "save/RestoreV2:454"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_35/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_455"
op: "Assign"
input: "FC-DenseNet56/Conv_36/biases"
input: "save/RestoreV2:455"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_456"
op: "Assign"
input: "FC-DenseNet56/Conv_36/biases/RMSProp"
input: "save/RestoreV2:456"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_457"
op: "Assign"
input: "FC-DenseNet56/Conv_36/biases/RMSProp_1"
input: "save/RestoreV2:457"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_458"
op: "Assign"
input: "FC-DenseNet56/Conv_36/weights"
input: "save/RestoreV2:458"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_459"
op: "Assign"
input: "FC-DenseNet56/Conv_36/weights/RMSProp"
input: "save/RestoreV2:459"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_460"
op: "Assign"
input: "FC-DenseNet56/Conv_36/weights/RMSProp_1"
input: "save/RestoreV2:460"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_36/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_461"
op: "Assign"
input: "FC-DenseNet56/Conv_37/biases"
input: "save/RestoreV2:461"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_462"
op: "Assign"
input: "FC-DenseNet56/Conv_37/biases/RMSProp"
input: "save/RestoreV2:462"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_463"
op: "Assign"
input: "FC-DenseNet56/Conv_37/biases/RMSProp_1"
input: "save/RestoreV2:463"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_464"
op: "Assign"
input: "FC-DenseNet56/Conv_37/weights"
input: "save/RestoreV2:464"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_465"
op: "Assign"
input: "FC-DenseNet56/Conv_37/weights/RMSProp"
input: "save/RestoreV2:465"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_466"
op: "Assign"
input: "FC-DenseNet56/Conv_37/weights/RMSProp_1"
input: "save/RestoreV2:466"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_37/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_467"
op: "Assign"
input: "FC-DenseNet56/Conv_38/biases"
input: "save/RestoreV2:467"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_468"
op: "Assign"
input: "FC-DenseNet56/Conv_38/biases/RMSProp"
input: "save/RestoreV2:468"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_469"
op: "Assign"
input: "FC-DenseNet56/Conv_38/biases/RMSProp_1"
input: "save/RestoreV2:469"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_470"
op: "Assign"
input: "FC-DenseNet56/Conv_38/weights"
input: "save/RestoreV2:470"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_471"
op: "Assign"
input: "FC-DenseNet56/Conv_38/weights/RMSProp"
input: "save/RestoreV2:471"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_472"
op: "Assign"
input: "FC-DenseNet56/Conv_38/weights/RMSProp_1"
input: "save/RestoreV2:472"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_38/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_473"
op: "Assign"
input: "FC-DenseNet56/Conv_39/biases"
input: "save/RestoreV2:473"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_474"
op: "Assign"
input: "FC-DenseNet56/Conv_39/biases/RMSProp"
input: "save/RestoreV2:474"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_475"
op: "Assign"
input: "FC-DenseNet56/Conv_39/biases/RMSProp_1"
input: "save/RestoreV2:475"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_476"
op: "Assign"
input: "FC-DenseNet56/Conv_39/weights"
input: "save/RestoreV2:476"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_477"
op: "Assign"
input: "FC-DenseNet56/Conv_39/weights/RMSProp"
input: "save/RestoreV2:477"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_478"
op: "Assign"
input: "FC-DenseNet56/Conv_39/weights/RMSProp_1"
input: "save/RestoreV2:478"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_39/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_479"
op: "Assign"
input: "FC-DenseNet56/Conv_4/biases"
input: "save/RestoreV2:479"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_480"
op: "Assign"
input: "FC-DenseNet56/Conv_4/biases/RMSProp"
input: "save/RestoreV2:480"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_481"
op: "Assign"
input: "FC-DenseNet56/Conv_4/biases/RMSProp_1"
input: "save/RestoreV2:481"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_482"
op: "Assign"
input: "FC-DenseNet56/Conv_4/weights"
input: "save/RestoreV2:482"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_483"
op: "Assign"
input: "FC-DenseNet56/Conv_4/weights/RMSProp"
input: "save/RestoreV2:483"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_484"
op: "Assign"
input: "FC-DenseNet56/Conv_4/weights/RMSProp_1"
input: "save/RestoreV2:484"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_4/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_485"
op: "Assign"
input: "FC-DenseNet56/Conv_40/biases"
input: "save/RestoreV2:485"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_486"
op: "Assign"
input: "FC-DenseNet56/Conv_40/biases/RMSProp"
input: "save/RestoreV2:486"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_487"
op: "Assign"
input: "FC-DenseNet56/Conv_40/biases/RMSProp_1"
input: "save/RestoreV2:487"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_488"
op: "Assign"
input: "FC-DenseNet56/Conv_40/weights"
input: "save/RestoreV2:488"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_489"
op: "Assign"
input: "FC-DenseNet56/Conv_40/weights/RMSProp"
input: "save/RestoreV2:489"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_490"
op: "Assign"
input: "FC-DenseNet56/Conv_40/weights/RMSProp_1"
input: "save/RestoreV2:490"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_40/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_491"
op: "Assign"
input: "FC-DenseNet56/Conv_41/biases"
input: "save/RestoreV2:491"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_492"
op: "Assign"
input: "FC-DenseNet56/Conv_41/biases/RMSProp"
input: "save/RestoreV2:492"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_493"
op: "Assign"
input: "FC-DenseNet56/Conv_41/biases/RMSProp_1"
input: "save/RestoreV2:493"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_494"
op: "Assign"
input: "FC-DenseNet56/Conv_41/weights"
input: "save/RestoreV2:494"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_495"
op: "Assign"
input: "FC-DenseNet56/Conv_41/weights/RMSProp"
input: "save/RestoreV2:495"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_496"
op: "Assign"
input: "FC-DenseNet56/Conv_41/weights/RMSProp_1"
input: "save/RestoreV2:496"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_41/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_497"
op: "Assign"
input: "FC-DenseNet56/Conv_42/biases"
input: "save/RestoreV2:497"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_498"
op: "Assign"
input: "FC-DenseNet56/Conv_42/biases/RMSProp"
input: "save/RestoreV2:498"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_499"
op: "Assign"
input: "FC-DenseNet56/Conv_42/biases/RMSProp_1"
input: "save/RestoreV2:499"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_500"
op: "Assign"
input: "FC-DenseNet56/Conv_42/weights"
input: "save/RestoreV2:500"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_501"
op: "Assign"
input: "FC-DenseNet56/Conv_42/weights/RMSProp"
input: "save/RestoreV2:501"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_502"
op: "Assign"
input: "FC-DenseNet56/Conv_42/weights/RMSProp_1"
input: "save/RestoreV2:502"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_42/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_503"
op: "Assign"
input: "FC-DenseNet56/Conv_43/biases"
input: "save/RestoreV2:503"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_504"
op: "Assign"
input: "FC-DenseNet56/Conv_43/biases/RMSProp"
input: "save/RestoreV2:504"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_505"
op: "Assign"
input: "FC-DenseNet56/Conv_43/biases/RMSProp_1"
input: "save/RestoreV2:505"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_506"
op: "Assign"
input: "FC-DenseNet56/Conv_43/weights"
input: "save/RestoreV2:506"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_507"
op: "Assign"
input: "FC-DenseNet56/Conv_43/weights/RMSProp"
input: "save/RestoreV2:507"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_508"
op: "Assign"
input: "FC-DenseNet56/Conv_43/weights/RMSProp_1"
input: "save/RestoreV2:508"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_43/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_509"
op: "Assign"
input: "FC-DenseNet56/Conv_44/biases"
input: "save/RestoreV2:509"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_510"
op: "Assign"
input: "FC-DenseNet56/Conv_44/biases/RMSProp"
input: "save/RestoreV2:510"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_511"
op: "Assign"
input: "FC-DenseNet56/Conv_44/biases/RMSProp_1"
input: "save/RestoreV2:511"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_512"
op: "Assign"
input: "FC-DenseNet56/Conv_44/weights"
input: "save/RestoreV2:512"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_513"
op: "Assign"
input: "FC-DenseNet56/Conv_44/weights/RMSProp"
input: "save/RestoreV2:513"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_514"
op: "Assign"
input: "FC-DenseNet56/Conv_44/weights/RMSProp_1"
input: "save/RestoreV2:514"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_44/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_515"
op: "Assign"
input: "FC-DenseNet56/Conv_45/biases"
input: "save/RestoreV2:515"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_516"
op: "Assign"
input: "FC-DenseNet56/Conv_45/biases/RMSProp"
input: "save/RestoreV2:516"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_517"
op: "Assign"
input: "FC-DenseNet56/Conv_45/biases/RMSProp_1"
input: "save/RestoreV2:517"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_518"
op: "Assign"
input: "FC-DenseNet56/Conv_45/weights"
input: "save/RestoreV2:518"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_519"
op: "Assign"
input: "FC-DenseNet56/Conv_45/weights/RMSProp"
input: "save/RestoreV2:519"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_520"
op: "Assign"
input: "FC-DenseNet56/Conv_45/weights/RMSProp_1"
input: "save/RestoreV2:520"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_45/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_521"
op: "Assign"
input: "FC-DenseNet56/Conv_46/biases"
input: "save/RestoreV2:521"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_522"
op: "Assign"
input: "FC-DenseNet56/Conv_46/biases/RMSProp"
input: "save/RestoreV2:522"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_523"
op: "Assign"
input: "FC-DenseNet56/Conv_46/biases/RMSProp_1"
input: "save/RestoreV2:523"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_524"
op: "Assign"
input: "FC-DenseNet56/Conv_46/weights"
input: "save/RestoreV2:524"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_525"
op: "Assign"
input: "FC-DenseNet56/Conv_46/weights/RMSProp"
input: "save/RestoreV2:525"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_526"
op: "Assign"
input: "FC-DenseNet56/Conv_46/weights/RMSProp_1"
input: "save/RestoreV2:526"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_46/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_527"
op: "Assign"
input: "FC-DenseNet56/Conv_47/biases"
input: "save/RestoreV2:527"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_528"
op: "Assign"
input: "FC-DenseNet56/Conv_47/biases/RMSProp"
input: "save/RestoreV2:528"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_529"
op: "Assign"
input: "FC-DenseNet56/Conv_47/biases/RMSProp_1"
input: "save/RestoreV2:529"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_530"
op: "Assign"
input: "FC-DenseNet56/Conv_47/weights"
input: "save/RestoreV2:530"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_531"
op: "Assign"
input: "FC-DenseNet56/Conv_47/weights/RMSProp"
input: "save/RestoreV2:531"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_532"
op: "Assign"
input: "FC-DenseNet56/Conv_47/weights/RMSProp_1"
input: "save/RestoreV2:532"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_47/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_533"
op: "Assign"
input: "FC-DenseNet56/Conv_48/biases"
input: "save/RestoreV2:533"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_534"
op: "Assign"
input: "FC-DenseNet56/Conv_48/biases/RMSProp"
input: "save/RestoreV2:534"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_535"
op: "Assign"
input: "FC-DenseNet56/Conv_48/biases/RMSProp_1"
input: "save/RestoreV2:535"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_536"
op: "Assign"
input: "FC-DenseNet56/Conv_48/weights"
input: "save/RestoreV2:536"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_537"
op: "Assign"
input: "FC-DenseNet56/Conv_48/weights/RMSProp"
input: "save/RestoreV2:537"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_538"
op: "Assign"
input: "FC-DenseNet56/Conv_48/weights/RMSProp_1"
input: "save/RestoreV2:538"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_48/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_539"
op: "Assign"
input: "FC-DenseNet56/Conv_5/biases"
input: "save/RestoreV2:539"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_540"
op: "Assign"
input: "FC-DenseNet56/Conv_5/biases/RMSProp"
input: "save/RestoreV2:540"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_541"
op: "Assign"
input: "FC-DenseNet56/Conv_5/biases/RMSProp_1"
input: "save/RestoreV2:541"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_542"
op: "Assign"
input: "FC-DenseNet56/Conv_5/weights"
input: "save/RestoreV2:542"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_543"
op: "Assign"
input: "FC-DenseNet56/Conv_5/weights/RMSProp"
input: "save/RestoreV2:543"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_544"
op: "Assign"
input: "FC-DenseNet56/Conv_5/weights/RMSProp_1"
input: "save/RestoreV2:544"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_5/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_545"
op: "Assign"
input: "FC-DenseNet56/Conv_6/biases"
input: "save/RestoreV2:545"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_546"
op: "Assign"
input: "FC-DenseNet56/Conv_6/biases/RMSProp"
input: "save/RestoreV2:546"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_547"
op: "Assign"
input: "FC-DenseNet56/Conv_6/biases/RMSProp_1"
input: "save/RestoreV2:547"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_548"
op: "Assign"
input: "FC-DenseNet56/Conv_6/weights"
input: "save/RestoreV2:548"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_549"
op: "Assign"
input: "FC-DenseNet56/Conv_6/weights/RMSProp"
input: "save/RestoreV2:549"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_550"
op: "Assign"
input: "FC-DenseNet56/Conv_6/weights/RMSProp_1"
input: "save/RestoreV2:550"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_6/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_551"
op: "Assign"
input: "FC-DenseNet56/Conv_7/biases"
input: "save/RestoreV2:551"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_552"
op: "Assign"
input: "FC-DenseNet56/Conv_7/biases/RMSProp"
input: "save/RestoreV2:552"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_553"
op: "Assign"
input: "FC-DenseNet56/Conv_7/biases/RMSProp_1"
input: "save/RestoreV2:553"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_554"
op: "Assign"
input: "FC-DenseNet56/Conv_7/weights"
input: "save/RestoreV2:554"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_555"
op: "Assign"
input: "FC-DenseNet56/Conv_7/weights/RMSProp"
input: "save/RestoreV2:555"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_556"
op: "Assign"
input: "FC-DenseNet56/Conv_7/weights/RMSProp_1"
input: "save/RestoreV2:556"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_7/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_557"
op: "Assign"
input: "FC-DenseNet56/Conv_8/biases"
input: "save/RestoreV2:557"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_558"
op: "Assign"
input: "FC-DenseNet56/Conv_8/biases/RMSProp"
input: "save/RestoreV2:558"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_559"
op: "Assign"
input: "FC-DenseNet56/Conv_8/biases/RMSProp_1"
input: "save/RestoreV2:559"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_560"
op: "Assign"
input: "FC-DenseNet56/Conv_8/weights"
input: "save/RestoreV2:560"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_561"
op: "Assign"
input: "FC-DenseNet56/Conv_8/weights/RMSProp"
input: "save/RestoreV2:561"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_562"
op: "Assign"
input: "FC-DenseNet56/Conv_8/weights/RMSProp_1"
input: "save/RestoreV2:562"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_8/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_563"
op: "Assign"
input: "FC-DenseNet56/Conv_9/biases"
input: "save/RestoreV2:563"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_564"
op: "Assign"
input: "FC-DenseNet56/Conv_9/biases/RMSProp"
input: "save/RestoreV2:564"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_565"
op: "Assign"
input: "FC-DenseNet56/Conv_9/biases/RMSProp_1"
input: "save/RestoreV2:565"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_566"
op: "Assign"
input: "FC-DenseNet56/Conv_9/weights"
input: "save/RestoreV2:566"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_567"
op: "Assign"
input: "FC-DenseNet56/Conv_9/weights/RMSProp"
input: "save/RestoreV2:567"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_568"
op: "Assign"
input: "FC-DenseNet56/Conv_9/weights/RMSProp_1"
input: "save/RestoreV2:568"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/Conv_9/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_569"
op: "Assign"
input: "FC-DenseNet56/first_conv/biases"
input: "save/RestoreV2:569"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_570"
op: "Assign"
input: "FC-DenseNet56/first_conv/biases/RMSProp"
input: "save/RestoreV2:570"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_571"
op: "Assign"
input: "FC-DenseNet56/first_conv/biases/RMSProp_1"
input: "save/RestoreV2:571"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_572"
op: "Assign"
input: "FC-DenseNet56/first_conv/weights"
input: "save/RestoreV2:572"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_573"
op: "Assign"
input: "FC-DenseNet56/first_conv/weights/RMSProp"
input: "save/RestoreV2:573"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_574"
op: "Assign"
input: "FC-DenseNet56/first_conv/weights/RMSProp_1"
input: "save/RestoreV2:574"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/first_conv/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_575"
op: "Assign"
input: "FC-DenseNet56/logits/biases"
input: "save/RestoreV2:575"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_576"
op: "Assign"
input: "FC-DenseNet56/logits/biases/RMSProp"
input: "save/RestoreV2:576"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_577"
op: "Assign"
input: "FC-DenseNet56/logits/biases/RMSProp_1"
input: "save/RestoreV2:577"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/biases"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_578"
op: "Assign"
input: "FC-DenseNet56/logits/weights"
input: "save/RestoreV2:578"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_579"
op: "Assign"
input: "FC-DenseNet56/logits/weights/RMSProp"
input: "save/RestoreV2:579"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/Assign_580"
op: "Assign"
input: "FC-DenseNet56/logits/weights/RMSProp_1"
input: "save/RestoreV2:580"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@FC-DenseNet56/logits/weights"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}

name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_10"
input: "^save/Assign_100"
input: "^save/Assign_101"
input: "^save/Assign_102"
input: "^save/Assign_103"
input: "^save/Assign_104"
input: "^save/Assign_105"
input: "^save/Assign_106"
input: "^save/Assign_107"
input: "^save/Assign_108"
input: "^save/Assign_109"
input: "^save/Assign_11"
input: "^save/Assign_110"
input: "^save/Assign_111"
input: "^save/Assign_112"
input: "^save/Assign_113"
input: "^save/Assign_114"
input: "^save/Assign_115"
input: "^save/Assign_116"
input: "^save/Assign_117"
input: "^save/Assign_118"
input: "^save/Assign_119"
input: "^save/Assign_12"
input: "^save/Assign_120"
input: "^save/Assign_121"
input: "^save/Assign_122"
input: "^save/Assign_123"
input: "^save/Assign_124"
input: "^save/Assign_125"
input: "^save/Assign_126"
input: "^save/Assign_127"
input: "^save/Assign_128"
input: "^save/Assign_129"
input: "^save/Assign_13"
input: "^save/Assign_130"
input: "^save/Assign_131"
input: "^save/Assign_132"
input: "^save/Assign_133"
input: "^save/Assign_134"
input: "^save/Assign_135"
input: "^save/Assign_136"
input: "^save/Assign_137"
input: "^save/Assign_138"
input: "^save/Assign_139"
input: "^save/Assign_14"
input: "^save/Assign_140"
input: "^save/Assign_141"
input: "^save/Assign_142"
input: "^save/Assign_143"
input: "^save/Assign_144"
input: "^save/Assign_145"
input: "^save/Assign_146"
input: "^save/Assign_147"
input: "^save/Assign_148"
input: "^save/Assign_149"
input: "^save/Assign_15"
input: "^save/Assign_150"
input: "^save/Assign_151"
input: "^save/Assign_152"
input: "^save/Assign_153"
input: "^save/Assign_154"
input: "^save/Assign_155"
input: "^save/Assign_156"
input: "^save/Assign_157"
input: "^save/Assign_158"
input: "^save/Assign_159"
input: "^save/Assign_16"
input: "^save/Assign_160"
input: "^save/Assign_161"
input: "^save/Assign_162"
input: "^save/Assign_163"
input: "^save/Assign_164"
input: "^save/Assign_165"
input: "^save/Assign_166"
input: "^save/Assign_167"
input: "^save/Assign_168"
input: "^save/Assign_169"
input: "^save/Assign_17"
input: "^save/Assign_170"
input: "^save/Assign_171"
input: "^save/Assign_172"
input: "^save/Assign_173"
input: "^save/Assign_174"
input: "^save/Assign_175"
input: "^save/Assign_176"
input: "^save/Assign_177"
input: "^save/Assign_178"
input: "^save/Assign_179"
input: "^save/Assign_18"
input: "^save/Assign_180"
input: "^save/Assign_181"
input: "^save/Assign_182"
input: "^save/Assign_183"
input: "^save/Assign_184"
input: "^save/Assign_185"
input: "^save/Assign_186"
input: "^save/Assign_187"
input: "^save/Assign_188"
input: "^save/Assign_189"
input: "^save/Assign_19"
input: "^save/Assign_190"
input: "^save/Assign_191"
input: "^save/Assign_192"
input: "^save/Assign_193"
input: "^save/Assign_194"
input: "^save/Assign_195"
input: "^save/Assign_196"
input: "^save/Assign_197"
input: "^save/Assign_198"
input: "^save/Assign_199"
input: "^save/Assign_2"
input: "^save/Assign_20"
input: "^save/Assign_200"
input: "^save/Assign_201"
input: "^save/Assign_202"
input: "^save/Assign_203"
input: "^save/Assign_204"
input: "^save/Assign_205"
input: "^save/Assign_206"
input: "^save/Assign_207"
input: "^save/Assign_208"
input: "^save/Assign_209"
input: "^save/Assign_21"
input: "^save/Assign_210"
input: "^save/Assign_211"
input: "^save/Assign_212"
input: "^save/Assign_213"
input: "^save/Assign_214"
input: "^save/Assign_215"
input: "^save/Assign_216"
input: "^save/Assign_217"
input: "^save/Assign_218"
input: "^save/Assign_219"
input: "^save/Assign_22"
input: "^save/Assign_220"
input: "^save/Assign_221"
input: "^save/Assign_222"
input: "^save/Assign_223"
input: "^save/Assign_224"
input: "^save/Assign_225"
input: "^save/Assign_226"
input: "^save/Assign_227"
input: "^save/Assign_228"
input: "^save/Assign_229"
input: "^save/Assign_23"
input: "^save/Assign_230"
input: "^save/Assign_231"
input: "^save/Assign_232"
input: "^save/Assign_233"
input: "^save/Assign_234"
input: "^save/Assign_235"
input: "^save/Assign_236"
input: "^save/Assign_237"
input: "^save/Assign_238"
input: "^save/Assign_239"
input: "^save/Assign_24"
input: "^save/Assign_240"
input: "^save/Assign_241"
input: "^save/Assign_242"
input: "^save/Assign_243"
input: "^save/Assign_244"
input: "^save/Assign_245"
input: "^save/Assign_246"
input: "^save/Assign_247"
input: "^save/Assign_248"
input: "^save/Assign_249"
input: "^save/Assign_25"
input: "^save/Assign_250"
input: "^save/Assign_251"
input: "^save/Assign_252"
input: "^save/Assign_253"
input: "^save/Assign_254"
input: "^save/Assign_255"
input: "^save/Assign_256"
input: "^save/Assign_257"
input: "^save/Assign_258"
input: "^save/Assign_259"
input: "^save/Assign_26"
input: "^save/Assign_260"
input: "^save/Assign_261"
input: "^save/Assign_262"
input: "^save/Assign_263"
input: "^save/Assign_264"
input: "^save/Assign_265"
input: "^save/Assign_266"
input: "^save/Assign_267"
input: "^save/Assign_268"
input: "^save/Assign_269"
input: "^save/Assign_27"
input: "^save/Assign_270"
input: "^save/Assign_271"
input: "^save/Assign_272"
input: "^save/Assign_273"
input: "^save/Assign_274"
input: "^save/Assign_275"
input: "^save/Assign_276"
input: "^save/Assign_277"
input: "^save/Assign_278"
input: "^save/Assign_279"
input: "^save/Assign_28"
input: "^save/Assign_280"
input: "^save/Assign_281"
input: "^save/Assign_282"
input: "^save/Assign_283"
input: "^save/Assign_284"
input: "^save/Assign_285"
input: "^save/Assign_286"
input: "^save/Assign_287"
input: "^save/Assign_288"
input: "^save/Assign_289"
input: "^save/Assign_29"
input: "^save/Assign_290"
input: "^save/Assign_291"
input: "^save/Assign_292"
input: "^save/Assign_293"
input: "^save/Assign_294"
input: "^save/Assign_295"
input: "^save/Assign_296"
input: "^save/Assign_297"
input: "^save/Assign_298"
input: "^save/Assign_299"
input: "^save/Assign_3"
input: "^save/Assign_30"
input: "^save/Assign_300"
input: "^save/Assign_301"
input: "^save/Assign_302"
input: "^save/Assign_303"
input: "^save/Assign_304"
input: "^save/Assign_305"
input: "^save/Assign_306"
input: "^save/Assign_307"
input: "^save/Assign_308"
input: "^save/Assign_309"
input: "^save/Assign_31"
input: "^save/Assign_310"
input: "^save/Assign_311"
input: "^save/Assign_312"
input: "^save/Assign_313"
input: "^save/Assign_314"
input: "^save/Assign_315"
input: "^save/Assign_316"
input: "^save/Assign_317"
input: "^save/Assign_318"
input: "^save/Assign_319"
input: "^save/Assign_32"
input: "^save/Assign_320"
input: "^save/Assign_321"
input: "^save/Assign_322"
input: "^save/Assign_323"
input: "^save/Assign_324"
input: "^save/Assign_325"
input: "^save/Assign_326"
input: "^save/Assign_327"
input: "^save/Assign_328"
input: "^save/Assign_329"
input: "^save/Assign_33"
input: "^save/Assign_330"
input: "^save/Assign_331"
input: "^save/Assign_332"
input: "^save/Assign_333"
input: "^save/Assign_334"
input: "^save/Assign_335"
input: "^save/Assign_336"
input: "^save/Assign_337"
input: "^save/Assign_338"
input: "^save/Assign_339"
input: "^save/Assign_34"
input: "^save/Assign_340"
input: "^save/Assign_341"
input: "^save/Assign_342"
input: "^save/Assign_343"
input: "^save/Assign_344"
input: "^save/Assign_345"
input: "^save/Assign_346"
input: "^save/Assign_347"
input: "^save/Assign_348"
input: "^save/Assign_349"
input: "^save/Assign_35"
input: "^save/Assign_350"
input: "^save/Assign_351"
input: "^save/Assign_352"
input: "^save/Assign_353"
input: "^save/Assign_354"
input: "^save/Assign_355"
input: "^save/Assign_356"
input: "^save/Assign_357"
input: "^save/Assign_358"
input: "^save/Assign_359"
input: "^save/Assign_36"
input: "^save/Assign_360"
input: "^save/Assign_361"
input: "^save/Assign_362"
input: "^save/Assign_363"
input: "^save/Assign_364"
input: "^save/Assign_365"
input: "^save/Assign_366"
input: "^save/Assign_367"
input: "^save/Assign_368"
input: "^save/Assign_369"
input: "^save/Assign_37"
input: "^save/Assign_370"
input: "^save/Assign_371"
input: "^save/Assign_372"
input: "^save/Assign_373"
input: "^save/Assign_374"
input: "^save/Assign_375"
input: "^save/Assign_376"
input: "^save/Assign_377"
input: "^save/Assign_378"
input: "^save/Assign_379"
input: "^save/Assign_38"
input: "^save/Assign_380"
input: "^save/Assign_381"
input: "^save/Assign_382"
input: "^save/Assign_383"
input: "^save/Assign_384"
input: "^save/Assign_385"
input: "^save/Assign_386"
input: "^save/Assign_387"
input: "^save/Assign_388"
input: "^save/Assign_389"
input: "^save/Assign_39"
input: "^save/Assign_390"
input: "^save/Assign_391"
input: "^save/Assign_392"
input: "^save/Assign_393"
input: "^save/Assign_394"
input: "^save/Assign_395"
input: "^save/Assign_396"
input: "^save/Assign_397"
input: "^save/Assign_398"
input: "^save/Assign_399"
input: "^save/Assign_4"
input: "^save/Assign_40"
input: "^save/Assign_400"
input: "^save/Assign_401"
input: "^save/Assign_402"
input: "^save/Assign_403"
input: "^save/Assign_404"
input: "^save/Assign_405"
input: "^save/Assign_406"
input: "^save/Assign_407"
input: "^save/Assign_408"
input: "^save/Assign_409"
input: "^save/Assign_41"
input: "^save/Assign_410"
input: "^save/Assign_411"
input: "^save/Assign_412"
input: "^save/Assign_413"
input: "^save/Assign_414"
input: "^save/Assign_415"
input: "^save/Assign_416"
input: "^save/Assign_417"
input: "^save/Assign_418"
input: "^save/Assign_419"
input: "^save/Assign_42"
input: "^save/Assign_420"
input: "^save/Assign_421"
input: "^save/Assign_422"
input: "^save/Assign_423"
input: "^save/Assign_424"
input: "^save/Assign_425"
input: "^save/Assign_426"
input: "^save/Assign_427"
input: "^save/Assign_428"
input: "^save/Assign_429"
input: "^save/Assign_43"
input: "^save/Assign_430"
input: "^save/Assign_431"
input: "^save/Assign_432"
input: "^save/Assign_433"
input: "^save/Assign_434"
input: "^save/Assign_435"
input: "^save/Assign_436"
input: "^save/Assign_437"
input: "^save/Assign_438"
input: "^save/Assign_439"
input: "^save/Assign_44"
input: "^save/Assign_440"
input: "^save/Assign_441"
input: "^save/Assign_442"
input: "^save/Assign_443"
input: "^save/Assign_444"
input: "^save/Assign_445"
input: "^save/Assign_446"
input: "^save/Assign_447"
input: "^save/Assign_448"
input: "^save/Assign_449"
input: "^save/Assign_45"
input: "^save/Assign_450"
input: "^save/Assign_451"
input: "^save/Assign_452"
input: "^save/Assign_453"
input: "^save/Assign_454"
input: "^save/Assign_455"
input: "^save/Assign_456"
input: "^save/Assign_457"
input: "^save/Assign_458"
input: "^save/Assign_459"
input: "^save/Assign_46"
input: "^save/Assign_460"
input: "^save/Assign_461"
input: "^save/Assign_462"
input: "^save/Assign_463"
input: "^save/Assign_464"
input: "^save/Assign_465"
input: "^save/Assign_466"
input: "^save/Assign_467"
input: "^save/Assign_468"
input: "^save/Assign_469"
input: "^save/Assign_47"
input: "^save/Assign_470"
input: "^save/Assign_471"
input: "^save/Assign_472"
input: "^save/Assign_473"
input: "^save/Assign_474"
input: "^save/Assign_475"
input: "^save/Assign_476"
input: "^save/Assign_477"
input: "^save/Assign_478"
input: "^save/Assign_479"
input: "^save/Assign_48"
input: "^save/Assign_480"
input: "^save/Assign_481"
input: "^save/Assign_482"
input: "^save/Assign_483"
input: "^save/Assign_484"
input: "^save/Assign_485"
input: "^save/Assign_486"
input: "^save/Assign_487"
input: "^save/Assign_488"
input: "^save/Assign_489"
input: "^save/Assign_49"
input: "^save/Assign_490"
input: "^save/Assign_491"
input: "^save/Assign_492"
input: "^save/Assign_493"
input: "^save/Assign_494"
input: "^save/Assign_495"
input: "^save/Assign_496"
input: "^save/Assign_497"
input: "^save/Assign_498"
input: "^save/Assign_499"
input: "^save/Assign_5"
input: "^save/Assign_50"
input: "^save/Assign_500"
input: "^save/Assign_501"
input: "^save/Assign_502"
input: "^save/Assign_503"
input: "^save/Assign_504"
input: "^save/Assign_505"
input: "^save/Assign_506"
input: "^save/Assign_507"
input: "^save/Assign_508"
input: "^save/Assign_509"
input: "^save/Assign_51"
input: "^save/Assign_510"
input: "^save/Assign_511"
input: "^save/Assign_512"
input: "^save/Assign_513"
input: "^save/Assign_514"
input: "^save/Assign_515"
input: "^save/Assign_516"
input: "^save/Assign_517"
input: "^save/Assign_518"
input: "^save/Assign_519"
input: "^save/Assign_52"
input: "^save/Assign_520"
input: "^save/Assign_521"
input: "^save/Assign_522"
input: "^save/Assign_523"
input: "^save/Assign_524"
input: "^save/Assign_525"
input: "^save/Assign_526"
input: "^save/Assign_527"
input: "^save/Assign_528"
input: "^save/Assign_529"
input: "^save/Assign_53"
input: "^save/Assign_530"
input: "^save/Assign_531"
input: "^save/Assign_532"
input: "^save/Assign_533"
input: "^save/Assign_534"
input: "^save/Assign_535"
input: "^save/Assign_536"
input: "^save/Assign_537"
input: "^save/Assign_538"
input: "^save/Assign_539"
input: "^save/Assign_54"
input: "^save/Assign_540"
input: "^save/Assign_541"
input: "^save/Assign_542"
input: "^save/Assign_543"
input: "^save/Assign_544"
input: "^save/Assign_545"
input: "^save/Assign_546"
input: "^save/Assign_547"
input: "^save/Assign_548"
input: "^save/Assign_549"
input: "^save/Assign_55"
input: "^save/Assign_550"
input: "^save/Assign_551"
input: "^save/Assign_552"
input: "^save/Assign_553"
input: "^save/Assign_554"
input: "^save/Assign_555"
input: "^save/Assign_556"
input: "^save/Assign_557"
input: "^save/Assign_558"
input: "^save/Assign_559"
input: "^save/Assign_56"
input: "^save/Assign_560"
input: "^save/Assign_561"
input: "^save/Assign_562"
input: "^save/Assign_563"
input: "^save/Assign_564"
input: "^save/Assign_565"
input: "^save/Assign_566"
input: "^save/Assign_567"
input: "^save/Assign_568"
input: "^save/Assign_569"
input: "^save/Assign_57"
input: "^save/Assign_570"
input: "^save/Assign_571"
input: "^save/Assign_572"
input: "^save/Assign_573"
input: "^save/Assign_574"
input: "^save/Assign_575"
input: "^save/Assign_576"
input: "^save/Assign_577"
input: "^save/Assign_578"
input: "^save/Assign_579"
input: "^save/Assign_58"
input: "^save/Assign_580"
input: "^save/Assign_59"
input: "^save/Assign_6"
input: "^save/Assign_60"
input: "^save/Assign_61"
input: "^save/Assign_62"
input: "^save/Assign_63"
input: "^save/Assign_64"
input: "^save/Assign_65"
input: "^save/Assign_66"
input: "^save/Assign_67"
input: "^save/Assign_68"
input: "^save/Assign_69"
input: "^save/Assign_7"
input: "^save/Assign_70"
input: "^save/Assign_71"
input: "^save/Assign_72"
input: "^save/Assign_73"
input: "^save/Assign_74"
input: "^save/Assign_75"
input: "^save/Assign_76"
input: "^save/Assign_77"
input: "^save/Assign_78"
input: "^save/Assign_79"
input: "^save/Assign_8"
input: "^save/Assign_80"
input: "^save/Assign_81"
input: "^save/Assign_82"
input: "^save/Assign_83"
input: "^save/Assign_84"
input: "^save/Assign_85"
input: "^save/Assign_86"
input: "^save/Assign_87"
input: "^save/Assign_88"
input: "^save/Assign_89"
input: "^save/Assign_9"
input: "^save/Assign_90"
input: "^save/Assign_91"
input: "^save/Assign_92"
input: "^save/Assign_93"
input: "^save/Assign_94"
input: "^save/Assign_95"
input: "^save/Assign_96"
input: "^save/Assign_97"
input: "^save/Assign_98"
input: "^save/Assign_99"

name: "init"
op: "NoOp"
input: "^FC-DenseNet56/BatchNorm/beta/Assign"
input: "^FC-DenseNet56/BatchNorm/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_1/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_1/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_1/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_1/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_1/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_10/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_10/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_10/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_10/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_10/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_11/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_11/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_11/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_11/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_11/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_12/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_12/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_12/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_12/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_12/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_13/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_13/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_13/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_13/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_13/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_14/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_14/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_14/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_14/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_14/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_15/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_15/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_15/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_15/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_15/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_16/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_16/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_16/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_16/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_16/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_17/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_17/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_17/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_17/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_17/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_18/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_18/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_18/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_18/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_18/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_19/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_19/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_19/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_19/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_19/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_2/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_2/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_2/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_2/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_2/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_20/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_20/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_20/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_20/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_20/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_21/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_21/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_21/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_21/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_21/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_22/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_22/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_22/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_22/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_22/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_23/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_23/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_23/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_23/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_23/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_24/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_24/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_24/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_24/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_24/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_25/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_25/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_25/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_25/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_25/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_26/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_26/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_26/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_26/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_26/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_27/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_27/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_27/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_27/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_27/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_28/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_28/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_28/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_28/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_28/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_29/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_29/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_29/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_29/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_29/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_3/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_3/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_3/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_3/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_3/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_30/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_30/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_30/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_30/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_30/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_31/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_31/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_31/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_31/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_31/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_32/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_32/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_32/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_32/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_32/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_33/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_33/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_33/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_33/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_33/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_34/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_34/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_34/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_34/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_34/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_35/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_35/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_35/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_35/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_35/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_36/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_36/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_36/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_36/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_36/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_37/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_37/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_37/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_37/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_37/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_38/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_38/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_38/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_38/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_38/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_39/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_39/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_39/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_39/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_39/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_4/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_4/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_4/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_4/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_4/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_40/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_40/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_40/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_40/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_40/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_41/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_41/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_41/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_41/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_41/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_42/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_42/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_42/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_42/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_42/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_43/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_43/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_43/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_43/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_43/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_44/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_44/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_44/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_44/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_44/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_45/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_45/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_45/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_45/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_45/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_46/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_46/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_46/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_46/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_46/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_47/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_47/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_47/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_47/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_47/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_48/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_48/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_48/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_48/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_48/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_5/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_5/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_5/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_5/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_5/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_6/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_6/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_6/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_6/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_6/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_7/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_7/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_7/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_7/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_7/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_8/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_8/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_8/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_8/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_8/moving_variance/Assign"
input: "^FC-DenseNet56/BatchNorm_9/beta/Assign"
input: "^FC-DenseNet56/BatchNorm_9/beta/RMSProp/Assign"
input: "^FC-DenseNet56/BatchNorm_9/beta/RMSProp_1/Assign"
input: "^FC-DenseNet56/BatchNorm_9/moving_mean/Assign"
input: "^FC-DenseNet56/BatchNorm_9/moving_variance/Assign"
input: "^FC-DenseNet56/Conv/biases/Assign"
input: "^FC-DenseNet56/Conv/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv/weights/Assign"
input: "^FC-DenseNet56/Conv/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose/biases/Assign"
input: "^FC-DenseNet56/Conv2d_transpose/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose/weights/Assign"
input: "^FC-DenseNet56/Conv2d_transpose/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_1/biases/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_1/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_1/weights/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_1/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_2/biases/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_2/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_2/weights/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_2/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_3/biases/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_3/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_3/weights/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_3/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_4/biases/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_4/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_4/weights/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv2d_transpose_4/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_1/biases/Assign"
input: "^FC-DenseNet56/Conv_1/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_1/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_1/weights/Assign"
input: "^FC-DenseNet56/Conv_1/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_1/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_10/biases/Assign"
input: "^FC-DenseNet56/Conv_10/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_10/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_10/weights/Assign"
input: "^FC-DenseNet56/Conv_10/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_10/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_11/biases/Assign"
input: "^FC-DenseNet56/Conv_11/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_11/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_11/weights/Assign"
input: "^FC-DenseNet56/Conv_11/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_11/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_12/biases/Assign"
input: "^FC-DenseNet56/Conv_12/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_12/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_12/weights/Assign"
input: "^FC-DenseNet56/Conv_12/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_12/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_13/biases/Assign"
input: "^FC-DenseNet56/Conv_13/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_13/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_13/weights/Assign"
input: "^FC-DenseNet56/Conv_13/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_13/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_14/biases/Assign"
input: "^FC-DenseNet56/Conv_14/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_14/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_14/weights/Assign"
input: "^FC-DenseNet56/Conv_14/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_14/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_15/biases/Assign"
input: "^FC-DenseNet56/Conv_15/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_15/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_15/weights/Assign"
input: "^FC-DenseNet56/Conv_15/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_15/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_16/biases/Assign"
input: "^FC-DenseNet56/Conv_16/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_16/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_16/weights/Assign"
input: "^FC-DenseNet56/Conv_16/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_16/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_17/biases/Assign"
input: "^FC-DenseNet56/Conv_17/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_17/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_17/weights/Assign"
input: "^FC-DenseNet56/Conv_17/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_17/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_18/biases/Assign"
input: "^FC-DenseNet56/Conv_18/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_18/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_18/weights/Assign"
input: "^FC-DenseNet56/Conv_18/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_18/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_19/biases/Assign"
input: "^FC-DenseNet56/Conv_19/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_19/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_19/weights/Assign"
input: "^FC-DenseNet56/Conv_19/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_19/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_2/biases/Assign"
input: "^FC-DenseNet56/Conv_2/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_2/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_2/weights/Assign"
input: "^FC-DenseNet56/Conv_2/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_2/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_20/biases/Assign"
input: "^FC-DenseNet56/Conv_20/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_20/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_20/weights/Assign"
input: "^FC-DenseNet56/Conv_20/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_20/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_21/biases/Assign"
input: "^FC-DenseNet56/Conv_21/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_21/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_21/weights/Assign"
input: "^FC-DenseNet56/Conv_21/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_21/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_22/biases/Assign"
input: "^FC-DenseNet56/Conv_22/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_22/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_22/weights/Assign"
input: "^FC-DenseNet56/Conv_22/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_22/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_23/biases/Assign"
input: "^FC-DenseNet56/Conv_23/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_23/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_23/weights/Assign"
input: "^FC-DenseNet56/Conv_23/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_23/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_24/biases/Assign"
input: "^FC-DenseNet56/Conv_24/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_24/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_24/weights/Assign"
input: "^FC-DenseNet56/Conv_24/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_24/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_25/biases/Assign"
input: "^FC-DenseNet56/Conv_25/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_25/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_25/weights/Assign"
input: "^FC-DenseNet56/Conv_25/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_25/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_26/biases/Assign"
input: "^FC-DenseNet56/Conv_26/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_26/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_26/weights/Assign"
input: "^FC-DenseNet56/Conv_26/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_26/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_27/biases/Assign"
input: "^FC-DenseNet56/Conv_27/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_27/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_27/weights/Assign"
input: "^FC-DenseNet56/Conv_27/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_27/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_28/biases/Assign"
input: "^FC-DenseNet56/Conv_28/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_28/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_28/weights/Assign"
input: "^FC-DenseNet56/Conv_28/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_28/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_29/biases/Assign"
input: "^FC-DenseNet56/Conv_29/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_29/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_29/weights/Assign"
input: "^FC-DenseNet56/Conv_29/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_29/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_3/biases/Assign"
input: "^FC-DenseNet56/Conv_3/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_3/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_3/weights/Assign"
input: "^FC-DenseNet56/Conv_3/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_3/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_30/biases/Assign"
input: "^FC-DenseNet56/Conv_30/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_30/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_30/weights/Assign"
input: "^FC-DenseNet56/Conv_30/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_30/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_31/biases/Assign"
input: "^FC-DenseNet56/Conv_31/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_31/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_31/weights/Assign"
input: "^FC-DenseNet56/Conv_31/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_31/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_32/biases/Assign"
input: "^FC-DenseNet56/Conv_32/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_32/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_32/weights/Assign"
input: "^FC-DenseNet56/Conv_32/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_32/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_33/biases/Assign"
input: "^FC-DenseNet56/Conv_33/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_33/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_33/weights/Assign"
input: "^FC-DenseNet56/Conv_33/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_33/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_34/biases/Assign"
input: "^FC-DenseNet56/Conv_34/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_34/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_34/weights/Assign"
input: "^FC-DenseNet56/Conv_34/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_34/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_35/biases/Assign"
input: "^FC-DenseNet56/Conv_35/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_35/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_35/weights/Assign"
input: "^FC-DenseNet56/Conv_35/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_35/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_36/biases/Assign"
input: "^FC-DenseNet56/Conv_36/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_36/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_36/weights/Assign"
input: "^FC-DenseNet56/Conv_36/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_36/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_37/biases/Assign"
input: "^FC-DenseNet56/Conv_37/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_37/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_37/weights/Assign"
input: "^FC-DenseNet56/Conv_37/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_37/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_38/biases/Assign"
input: "^FC-DenseNet56/Conv_38/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_38/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_38/weights/Assign"
input: "^FC-DenseNet56/Conv_38/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_38/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_39/biases/Assign"
input: "^FC-DenseNet56/Conv_39/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_39/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_39/weights/Assign"
input: "^FC-DenseNet56/Conv_39/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_39/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_4/biases/Assign"
input: "^FC-DenseNet56/Conv_4/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_4/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_4/weights/Assign"
input: "^FC-DenseNet56/Conv_4/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_4/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_40/biases/Assign"
input: "^FC-DenseNet56/Conv_40/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_40/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_40/weights/Assign"
input: "^FC-DenseNet56/Conv_40/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_40/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_41/biases/Assign"
input: "^FC-DenseNet56/Conv_41/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_41/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_41/weights/Assign"
input: "^FC-DenseNet56/Conv_41/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_41/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_42/biases/Assign"
input: "^FC-DenseNet56/Conv_42/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_42/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_42/weights/Assign"
input: "^FC-DenseNet56/Conv_42/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_42/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_43/biases/Assign"
input: "^FC-DenseNet56/Conv_43/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_43/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_43/weights/Assign"
input: "^FC-DenseNet56/Conv_43/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_43/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_44/biases/Assign"
input: "^FC-DenseNet56/Conv_44/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_44/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_44/weights/Assign"
input: "^FC-DenseNet56/Conv_44/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_44/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_45/biases/Assign"
input: "^FC-DenseNet56/Conv_45/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_45/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_45/weights/Assign"
input: "^FC-DenseNet56/Conv_45/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_45/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_46/biases/Assign"
input: "^FC-DenseNet56/Conv_46/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_46/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_46/weights/Assign"
input: "^FC-DenseNet56/Conv_46/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_46/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_47/biases/Assign"
input: "^FC-DenseNet56/Conv_47/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_47/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_47/weights/Assign"
input: "^FC-DenseNet56/Conv_47/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_47/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_48/biases/Assign"
input: "^FC-DenseNet56/Conv_48/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_48/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_48/weights/Assign"
input: "^FC-DenseNet56/Conv_48/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_48/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_5/biases/Assign"
input: "^FC-DenseNet56/Conv_5/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_5/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_5/weights/Assign"
input: "^FC-DenseNet56/Conv_5/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_5/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_6/biases/Assign"
input: "^FC-DenseNet56/Conv_6/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_6/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_6/weights/Assign"
input: "^FC-DenseNet56/Conv_6/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_6/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_7/biases/Assign"
input: "^FC-DenseNet56/Conv_7/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_7/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_7/weights/Assign"
input: "^FC-DenseNet56/Conv_7/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_7/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_8/biases/Assign"
input: "^FC-DenseNet56/Conv_8/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_8/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_8/weights/Assign"
input: "^FC-DenseNet56/Conv_8/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_8/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_9/biases/Assign"
input: "^FC-DenseNet56/Conv_9/biases/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_9/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/Conv_9/weights/Assign"
input: "^FC-DenseNet56/Conv_9/weights/RMSProp/Assign"
input: "^FC-DenseNet56/Conv_9/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/first_conv/biases/Assign"
input: "^FC-DenseNet56/first_conv/biases/RMSProp/Assign"
input: "^FC-DenseNet56/first_conv/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/first_conv/weights/Assign"
input: "^FC-DenseNet56/first_conv/weights/RMSProp/Assign"
input: "^FC-DenseNet56/first_conv/weights/RMSProp_1/Assign"
input: "^FC-DenseNet56/logits/biases/Assign"
input: "^FC-DenseNet56/logits/biases/RMSProp/Assign"
input: "^FC-DenseNet56/logits/biases/RMSProp_1/Assign"
input: "^FC-DenseNet56/logits/weights/Assign"
input: "^FC-DenseNet56/logits/weights/RMSProp/Assign"
input: "^FC-DenseNet56/logits/weights/RMSProp_1/Assign"

